{"version":3,"sources":["turbopack:///[project]/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","turbopack:///[project]/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","turbopack:///[project]/node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","turbopack:///[project]/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","turbopack:///[project]/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","turbopack:///[project]/node_modules/@radix-ui/react-arrow/src/arrow.tsx","turbopack:///[project]/node_modules/@radix-ui/react-popper/src/popper.tsx"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          var _overflowsData$;\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          const hasInitialMainAxisOverflow = ((_overflowsData$ = overflowsData[0]) == null ? void 0 : _overflowsData$.overflows[0]) > 0;\n          if (!ignoreCrossAxisOverflow || hasInitialMainAxisOverflow) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ComponentRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = React.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = (typeof SIDE_OPTIONS)[number];\ntype Align = (typeof ALIGN_OPTIONS)[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ComponentRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...(middlewareData.hide?.referenceHidden && {\n            visibility: 'hidden',\n            pointerEvents: 'none',\n          }),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ComponentRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = React.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"],"names":["PopperArrow","Root"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6]}