{"version":3,"sources":["turbopack:///[project]/components/ui/card.tsx","turbopack:///[project]/node_modules/@radix-ui/react-use-previous/src/use-previous.tsx","turbopack:///[project]/components/icons/circle-warning-2.tsx","turbopack:///[project]/components/icons/chevron-down.tsx","turbopack:///[project]/components/icons/magnifier-2.tsx","turbopack:///[project]/node_modules/@radix-ui/react-checkbox/src/checkbox.tsx","turbopack:///[project]/components/ui/checkbox.tsx","turbopack:///[project]/components/icons/circle-check.tsx","turbopack:///[project]/node_modules/@vercel/analytics/src/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/package.json","turbopack:///[project]/node_modules/@vercel/analytics/src/queue.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/generic.ts","turbopack:///[project]/components/icons/customInbound.tsx","turbopack:///[project]/features/domains/hooks/useDomainV2Hooks.ts","turbopack:///[project]/node_modules/date-fns/constants.js","turbopack:///[project]/node_modules/date-fns/constructFrom.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/formatLong.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/localize.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildMatchFn.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/match.js","turbopack:///[project]/node_modules/date-fns/locale/en-US.js","turbopack:///[project]/node_modules/date-fns/_lib/defaultOptions.js","turbopack:///[project]/node_modules/date-fns/toDate.js","turbopack:///[project]/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","turbopack:///[project]/node_modules/date-fns/_lib/normalizeDates.js","turbopack:///[project]/node_modules/date-fns/constructNow.js","turbopack:///[project]/node_modules/date-fns/compareAsc.js","turbopack:///[project]/node_modules/date-fns/differenceInCalendarMonths.js","turbopack:///[project]/node_modules/date-fns/endOfDay.js","turbopack:///[project]/node_modules/date-fns/endOfMonth.js","turbopack:///[project]/node_modules/date-fns/isLastDayOfMonth.js","turbopack:///[project]/node_modules/date-fns/differenceInMonths.js","turbopack:///[project]/node_modules/date-fns/_lib/getRoundingMethod.js","turbopack:///[project]/node_modules/date-fns/differenceInMilliseconds.js","turbopack:///[project]/node_modules/date-fns/differenceInSeconds.js","turbopack:///[project]/node_modules/date-fns/formatDistance.js","turbopack:///[project]/node_modules/date-fns/formatDistanceToNow.js","turbopack:///[project]/components/icons/file-2.tsx","turbopack:///[project]/app/actions/data:7339c6 <text/javascript>","turbopack:///[project]/features/emails/hooks/useEmailQuery.ts","turbopack:///[project]/app/actions/data:1c55ae <text/javascript>","turbopack:///[project]/features/emails/hooks/useMarkEmailAsReadMutation.ts","turbopack:///[project]/features/emails/hooks/useEmailAddressesV2Hooks.ts","turbopack:///[project]/features/emails/hooks/useMailV2Hooks.ts","turbopack:///[project]/app/actions/data:64b90e <text/javascript>","turbopack:///[project]/features/emails/hooks/useUserEmailLogsQuery.ts","turbopack:///[project]/app/actions/data:0b1a7d <text/javascript>","turbopack:///[project]/app/actions/data:8660ba <text/javascript>","turbopack:///[project]/app/actions/data:d5ee75 <text/javascript>","turbopack:///[project]/features/emails/hooks/index.ts","turbopack:///[project]/components/icons/arrow-up-right-2.tsx","turbopack:///[project]/components/icons/alarm-clock.tsx","turbopack:///[project]/app/actions/data:08aceb <text/javascript>","turbopack:///[project]/components/mark-all-read-button.tsx","turbopack:///[project]/components/domain-filter-select.tsx","turbopack:///[project]/components/emails/EmailListItem.tsx","turbopack:///[project]/app/(main)/mail/page.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction CircleWarning2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"12\" width=\"12\" {...props} viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"m6,0C2.691,0,0,2.691,0,6s2.691,6,6,6,6-2.691,6-6S9.309,0,6,0Zm-.75,3.5c0-.414.336-.75.75-.75s.75.336.75.75v3c0,.414-.336.75-.75.75s-.75-.336-.75-.75v-3Zm.75,6.25c-.482,0-.875-.393-.875-.875s.393-.875.875-.875.875.393.875.875-.393.875-.875.875Z\" fill={fill} strokeWidth=\"0\"/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default CircleWarning2;","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction ChevronDown({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M9,13.5c-.192,0-.384-.073-.53-.22L2.22,7.03c-.293-.293-.293-.768,0-1.061s.768-.293,1.061,0l5.72,5.72,5.72-5.72c.293-.293,.768-.293,1.061,0s.293,.768,0,1.061l-6.25,6.25c-.146,.146-.338,.22-.53,.22Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default ChevronDown;","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction Magnifier2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M12.3732 12.3732C12.6661 12.0803 13.1409 12.0803 13.4338 12.3732L16.2803 15.2197C16.5732 15.5126 16.5732 15.9874 16.2803 16.2803C15.9874 16.5732 15.5126 16.5732 15.2197 16.2803L12.3732 13.4338C12.0803 13.1409 12.0803 12.6661 12.3732 12.3732Z\" fill={secondaryfill} fillRule=\"evenodd\"/>\n\t\t<path d=\"M1.5 7.25C1.5 4.07439 4.07439 1.5 7.25 1.5C10.4256 1.5 13 4.07439 13 7.25C13 10.4256 10.4256 13 7.25 13C4.07439 13 1.5 10.4256 1.5 7.25ZM7.25 3C4.90281 3 3 4.90281 3 7.25C3 9.59719 4.90281 11.5 7.25 11.5C9.59719 11.5 11.5 9.59719 11.5 7.25C11.5 4.90281 9.59719 3 7.25 3Z\" fill={fill} fillRule=\"evenodd\"/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default Magnifier2;","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst CHECKBOX_NAME = 'Checkbox';\n\ntype ScopedProps<P> = P & { __scopeCheckbox?: Scope };\nconst [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\n\ntype CheckedState = boolean | 'indeterminate';\n\ntype CheckboxContextValue<State extends CheckedState | boolean = CheckedState> = {\n  checked: State | boolean;\n  setChecked: React.Dispatch<React.SetStateAction<State | boolean>>;\n  disabled: boolean | undefined;\n  control: HTMLButtonElement | null;\n  setControl: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\n  name: string | undefined;\n  form: string | undefined;\n  value: string | number | readonly string[];\n  hasConsumerStoppedPropagationRef: React.RefObject<boolean>;\n  required: boolean | undefined;\n  defaultChecked: boolean | undefined;\n  isFormControl: boolean;\n  bubbleInput: HTMLInputElement | null;\n  setBubbleInput: React.Dispatch<React.SetStateAction<HTMLInputElement | null>>;\n};\n\nconst [CheckboxProviderImpl, useCheckboxContext] =\n  createCheckboxContext<CheckboxContextValue>(CHECKBOX_NAME);\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxProvider\n * -----------------------------------------------------------------------------------------------*/\n\ninterface CheckboxProviderProps<State extends CheckedState = CheckedState> {\n  checked?: State | boolean;\n  defaultChecked?: State | boolean;\n  required?: boolean;\n  onCheckedChange?(checked: State | boolean): void;\n  name?: string;\n  form?: string;\n  disabled?: boolean;\n  value?: string | number | readonly string[];\n  children?: React.ReactNode;\n}\n\nfunction CheckboxProvider<State extends CheckedState = CheckedState>(\n  props: ScopedProps<CheckboxProviderProps<State>>\n) {\n  const {\n    __scopeCheckbox,\n    checked: checkedProp,\n    children,\n    defaultChecked,\n    disabled,\n    form,\n    name,\n    onCheckedChange,\n    required,\n    value = 'on',\n    // @ts-expect-error\n    internal_do_not_use_render,\n  } = props;\n\n  const [checked, setChecked] = useControllableState({\n    prop: checkedProp,\n    defaultProp: defaultChecked ?? false,\n    onChange: onCheckedChange,\n    caller: CHECKBOX_NAME,\n  });\n  const [control, setControl] = React.useState<HTMLButtonElement | null>(null);\n  const [bubbleInput, setBubbleInput] = React.useState<HTMLInputElement | null>(null);\n  const hasConsumerStoppedPropagationRef = React.useRef(false);\n  const isFormControl = control\n    ? !!form || !!control.closest('form')\n    : // We set this to true by default so that events bubble to forms without JS (SSR)\n      true;\n\n  const context: CheckboxContextValue<State> = {\n    checked: checked,\n    disabled: disabled,\n    setChecked: setChecked,\n    control: control,\n    setControl: setControl,\n    name: name,\n    form: form,\n    value: value,\n    hasConsumerStoppedPropagationRef: hasConsumerStoppedPropagationRef,\n    required: required,\n    defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked,\n    isFormControl: isFormControl,\n    bubbleInput,\n    setBubbleInput,\n  };\n\n  return (\n    <CheckboxProviderImpl\n      scope={__scopeCheckbox}\n      {...(context as unknown as CheckboxContextValue<CheckedState>)}\n    >\n      {isFunction(internal_do_not_use_render) ? internal_do_not_use_render(context) : children}\n    </CheckboxProviderImpl>\n  );\n}\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CheckboxTrigger';\n\ninterface CheckboxTriggerProps\n  extends Omit<\n    React.ComponentPropsWithoutRef<typeof Primitive.button>,\n    keyof CheckboxProviderProps\n  > {\n  children?: React.ReactNode;\n}\n\nconst CheckboxTrigger = React.forwardRef<HTMLButtonElement, CheckboxTriggerProps>(\n  (\n    { __scopeCheckbox, onKeyDown, onClick, ...checkboxProps }: ScopedProps<CheckboxTriggerProps>,\n    forwardedRef\n  ) => {\n    const {\n      control,\n      value,\n      disabled,\n      checked,\n      required,\n      setControl,\n      setChecked,\n      hasConsumerStoppedPropagationRef,\n      isFormControl,\n      bubbleInput,\n    } = useCheckboxContext(TRIGGER_NAME, __scopeCheckbox);\n    const composedRefs = useComposedRefs(forwardedRef, setControl);\n\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form = control?.form;\n      if (form) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form.addEventListener('reset', reset);\n        return () => form.removeEventListener('reset', reset);\n      }\n    }, [control, setChecked]);\n\n    return (\n      <Primitive.button\n        type=\"button\"\n        role=\"checkbox\"\n        aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n        aria-required={required}\n        data-state={getState(checked)}\n        data-disabled={disabled ? '' : undefined}\n        disabled={disabled}\n        value={value}\n        {...checkboxProps}\n        ref={composedRefs}\n        onKeyDown={composeEventHandlers(onKeyDown, (event) => {\n          // According to WAI ARIA, Checkboxes don't activate on enter keypress\n          if (event.key === 'Enter') event.preventDefault();\n        })}\n        onClick={composeEventHandlers(onClick, (event) => {\n          setChecked((prevChecked) => (isIndeterminate(prevChecked) ? true : !prevChecked));\n          if (bubbleInput && isFormControl) {\n            hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n            // if checkbox has a bubble input and is a form control, stop\n            // propagation from the button so that we only propagate one click\n            // event (from the input). We propagate changes from an input so\n            // that native form validation works and form events reflect\n            // checkbox updates.\n            if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n          }\n        })}\n      />\n    );\n  }\n);\n\nCheckboxTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox\n * -----------------------------------------------------------------------------------------------*/\n\ntype CheckboxElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CheckboxProps extends Omit<PrimitiveButtonProps, 'checked' | 'defaultChecked'> {\n  checked?: CheckedState;\n  defaultChecked?: CheckedState;\n  required?: boolean;\n  onCheckedChange?(checked: CheckedState): void;\n}\n\nconst Checkbox = React.forwardRef<CheckboxElement, CheckboxProps>(\n  (props: ScopedProps<CheckboxProps>, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      value,\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n\n    return (\n      <CheckboxProvider\n        __scopeCheckbox={__scopeCheckbox}\n        checked={checked}\n        defaultChecked={defaultChecked}\n        disabled={disabled}\n        required={required}\n        onCheckedChange={onCheckedChange}\n        name={name}\n        form={form}\n        value={value}\n        // @ts-expect-error\n        internal_do_not_use_render={({ isFormControl }: CheckboxContextValue) => (\n          <>\n            <CheckboxTrigger\n              {...checkboxProps}\n              ref={forwardedRef}\n              // @ts-expect-error\n              __scopeCheckbox={__scopeCheckbox}\n            />\n            {isFormControl && (\n              <CheckboxBubbleInput\n                // @ts-expect-error\n                __scopeCheckbox={__scopeCheckbox}\n              />\n            )}\n          </>\n        )}\n      />\n    );\n  }\n);\n\nCheckbox.displayName = CHECKBOX_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'CheckboxIndicator';\n\ntype CheckboxIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface CheckboxIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CheckboxIndicator = React.forwardRef<CheckboxIndicatorElement, CheckboxIndicatorProps>(\n  (props: ScopedProps<CheckboxIndicatorProps>, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return (\n      <Presence\n        present={forceMount || isIndeterminate(context.checked) || context.checked === true}\n      >\n        <Primitive.span\n          data-state={getState(context.checked)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n          style={{ pointerEvents: 'none', ...props.style }}\n        />\n      </Presence>\n    );\n  }\n);\n\nCheckboxIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CheckboxBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'CheckboxBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface CheckboxBubbleInputProps extends Omit<InputProps, 'checked'> {}\n\nconst CheckboxBubbleInput = React.forwardRef<HTMLInputElement, CheckboxBubbleInputProps>(\n  ({ __scopeCheckbox, ...props }: ScopedProps<CheckboxBubbleInputProps>, forwardedRef) => {\n    const {\n      control,\n      hasConsumerStoppedPropagationRef,\n      checked,\n      defaultChecked,\n      required,\n      disabled,\n      name,\n      value,\n      form,\n      bubbleInput,\n      setBubbleInput,\n    } = useCheckboxContext(BUBBLE_INPUT_NAME, __scopeCheckbox);\n\n    const composedRefs = useComposedRefs(forwardedRef, setBubbleInput);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n\n    // Bubble checked change to parents (e.g form change event)\n    React.useEffect(() => {\n      const input = bubbleInput;\n      if (!input) return;\n\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        'checked'\n      ) as PropertyDescriptor;\n      const setChecked = descriptor.set;\n\n      const bubbles = !hasConsumerStoppedPropagationRef.current;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event('click', { bubbles });\n        input.indeterminate = isIndeterminate(checked);\n        setChecked.call(input, isIndeterminate(checked) ? false : checked);\n        input.dispatchEvent(event);\n      }\n    }, [bubbleInput, prevChecked, checked, hasConsumerStoppedPropagationRef]);\n\n    const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n    return (\n      <Primitive.input\n        type=\"checkbox\"\n        aria-hidden\n        defaultChecked={defaultChecked ?? defaultCheckedRef.current}\n        required={required}\n        disabled={disabled}\n        name={name}\n        value={value}\n        form={form}\n        {...props}\n        tabIndex={-1}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          ...controlSize,\n          position: 'absolute',\n          pointerEvents: 'none',\n          opacity: 0,\n          margin: 0,\n          // We transform because the input is absolutely positioned but we have\n          // rendered it **after** the button. This pulls it back to sit on top\n          // of the button.\n          transform: 'translateX(-100%)',\n        }}\n      />\n    );\n  }\n);\n\nCheckboxBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction isFunction(value: unknown): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nexport {\n  createCheckboxScope,\n  //\n  Checkbox,\n  CheckboxProvider,\n  CheckboxTrigger,\n  CheckboxIndicator,\n  CheckboxBubbleInput,\n  //\n  Checkbox as Root,\n  CheckboxProvider as Provider,\n  CheckboxTrigger as Trigger,\n  CheckboxIndicator as Indicator,\n  CheckboxBubbleInput as BubbleInput,\n};\nexport type {\n  CheckboxProps,\n  CheckboxProviderProps,\n  CheckboxTriggerProps,\n  CheckboxIndicatorProps,\n  CheckboxBubbleInputProps,\n  CheckedState,\n};\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport Check2 from \"@/components/icons/check-2\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check2 width=\"16\" height=\"16\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction CircleCheck({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M9,1C4.589,1,1,4.589,1,9s3.589,8,8,8,8-3.589,8-8S13.411,1,9,1Zm3.843,5.708l-4.25,5.5c-.136,.176-.343,.283-.565,.291-.01,0-.019,0-.028,0-.212,0-.415-.09-.558-.248l-2.25-2.5c-.277-.308-.252-.782,.056-1.06,.309-.276,.781-.252,1.06,.056l1.648,1.832,3.701-4.789c.253-.328,.725-.388,1.052-.135,.328,.253,.388,.724,.135,1.052Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default CircleCheck;","import type { AllowedPropertyValues, AnalyticsProps, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest }\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown> | undefined,\n  options: {\n    strip?: boolean;\n  }\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  if (!properties) return undefined;\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', '\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: AnalyticsProps & { basePath?: string }\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/script.debug.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/insights/script.js`;\n  }\n  return '/_vercel/insights/script.js';\n}\n","{\n  \"name\": \"@vercel/analytics\",\n  \"version\": \"1.5.0\",\n  \"description\": \"Gain real-time traffic insights with Vercel Web Analytics\",\n  \"keywords\": [\n    \"analytics\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/analytics\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"MPL-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./server\": {\n      \"node\": \"./dist/server/index.mjs\",\n      \"edge-light\": \"./dist/server/index.mjs\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"server\": [\n        \"dist/server/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"@vercel/eslint-config\"\n    ],\n    \"rules\": {\n      \"tsdoc/syntax\": \"off\"\n    },\n    \"ignorePatterns\": [\n      \"jest.setup.ts\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.0\",\n    \"@types/react\": \"^18.3.12\",\n    \"@vercel/eslint-config\": \"workspace:0.0.0\",\n    \"server-only\": \"^0.0.1\",\n    \"svelte\": \"^5.1.10\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.12\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2\",\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@remix-run/react\": {\n      \"optional\": true\n    },\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type {\n  AllowedPropertyValues,\n  AnalyticsProps,\n  FlagsDataInput,\n  BeforeSend,\n  BeforeSendEvent,\n} from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n  computeRoute,\n  getScriptSrc,\n} from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n * @param [props.disableAutoTrack] - Whether the injected script should track page views from pushState events. Disable if route is updated after pushState, a manually call page pageview().\n */\nfunction inject(\n  props: AnalyticsProps & {\n    framework?: string;\n    disableAutoTrack?: boolean;\n    basePath?: string;\n  } = {\n    debug: true,\n  }\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = '1';\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/insights`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = (): void => {\n    const errorMessage = isDevelopment()\n      ? 'Please check if any ad blockers are enabled and try again.'\n      : 'Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.';\n\n    // eslint-disable-next-line no-console -- Logging to console is intentional\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nfunction track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n  options?: {\n    flags?: FlagsDataInput;\n  }\n): void {\n  if (!isBrowser()) {\n    const msg =\n      '[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment';\n\n    if (isProduction()) {\n      // eslint-disable-next-line no-console -- Show warning in production\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name, options });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n      options,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console -- Logging to console is intentional\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview({\n  route,\n  path,\n}: {\n  route?: string | null;\n  path?: string;\n}): void {\n  window.va?.('pageview', { route, path });\n}\n\nexport { inject, track, pageview, computeRoute };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n\n// eslint-disable-next-line import/no-default-export -- Default export is intentional\nexport default {\n  inject,\n  track,\n  computeRoute,\n};\n","import React from 'react';\n\ninterface CustomInboundIconProps {\n  /** Size of the icon container in pixels */\n  size?: number;\n  /** Background color of the rounded container */\n  backgroundColor?: string;\n  /** React icon component to display (optional if using text) */\n  Icon?: React.ComponentType<{ width: string | number; height: string | number; className?: string; style?: React.CSSProperties }>;\n  /** Text to display (1-2 letters, optional if using Icon) */\n  text?: string;\n  /** Size of the inner icon relative to container (0-1) */\n  iconScale?: number;\n  /** Color of the inner icon or text */\n  iconColor?: string;\n  /** Additional CSS classes */\n  className?: string;\n}\n\nexport const CustomInboundIcon: React.FC<CustomInboundIconProps> = ({\n  size = 64,\n  backgroundColor = '#A50A3E',\n  Icon,\n  text,\n  iconScale = 0.5,\n  iconColor = 'white',\n  className = '',\n}) => {\n  const iconSize = size * iconScale;\n  const borderRadius = size * 0.3; // Maintains the rounded rectangle proportion\n  \n  // Calculate font size based on container size\n  const fontSize = size * 0.4; // Adjust this ratio as needed\n\n  return (\n    <div\n      className={`inline-flex items-center justify-center ${className}`}\n      style={{\n        width: size,\n        height: size,\n        backgroundColor,\n        borderRadius,\n        // Add subtle gradient overlay like the original\n        background: `linear-gradient(180deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0) 100%), ${backgroundColor}`,\n        // Add subtle shadow for depth\n        boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n      }}\n    >\n      {Icon ? (\n        // Render icon with Nucleo-compatible props\n        <Icon\n          width={iconSize}\n          height={iconSize}\n          style={{ \n            color: iconColor,\n            filter: 'drop-shadow(0px 1px 2px rgba(0,0,0,0.1))'\n          }}\n        />\n      ) : text ? (\n        // Render text\n        <span\n          style={{\n            fontSize: fontSize,\n            fontWeight: 'bold',\n            color: iconColor,\n            textTransform: 'uppercase',\n            letterSpacing: '0.5px',\n            textShadow: '0 1px 2px rgba(0,0,0,0.1)',\n          }}\n        >\n          {text.slice(0, 2)}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CustomInboundIcon;\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { track } from '@vercel/analytics'\nimport type { \n    GetDomainsResponse,\n    GetDomainsRequest,\n    DomainWithStats\n} from '@/app/api/v2/domains/route'\nimport type { \n    GetDomainByIdResponse,\n    PutDomainByIdRequest\n} from '@/app/api/v2/domains/[id]/route'\nimport type {\n    PostEmailAddressesRequest,\n    PostEmailAddressesResponse\n} from '@/app/api/v2/email-addresses/route'\nimport type {\n    PutEmailAddressByIdRequest,\n    PutEmailAddressByIdResponse,\n    DeleteEmailAddressByIdResponse\n} from '@/app/api/v2/email-addresses/[id]/route'\n\n// Query keys for v2 domain API\nexport const domainV2Keys = {\n    all: ['v2', 'domains'] as const,\n    list: (params?: GetDomainsRequest) => [...domainV2Keys.all, 'list', params] as const,\n    detail: (domainId: string) => [...domainV2Keys.all, domainId] as const,\n    verification: (domainId: string) => [...domainV2Keys.all, domainId, 'verification'] as const,\n    emailAddresses: (domainId: string) => [...domainV2Keys.all, domainId, 'email-addresses'] as const,\n}\n\n// Hook for domains list (replacement for useDomainStatsQuery)\nexport const useDomainsListV2Query = (params?: GetDomainsRequest) => {\n    return useQuery<GetDomainsResponse>({\n        queryKey: domainV2Keys.list(params),\n        queryFn: async () => {\n            const searchParams = new URLSearchParams()\n            if (params?.limit) searchParams.set('limit', params.limit.toString())\n            if (params?.offset) searchParams.set('offset', params.offset.toString())\n            if (params?.status) searchParams.set('status', params.status)\n            if (params?.canReceive) searchParams.set('canReceive', params.canReceive)\n            if (params?.check) searchParams.set('check', params.check)\n\n            const response = await fetch(`/api/v2/domains?${searchParams}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        staleTime: 2 * 60 * 1000, // 2 minutes\n        gcTime: 5 * 60 * 1000, // 5 minutes\n    })\n}\n\n// Hook for domain details query\nexport const useDomainDetailsV2Query = (domainId: string) => {\n    return useQuery<GetDomainByIdResponse>({\n        queryKey: domainV2Keys.detail(domainId),\n        queryFn: async () => {\n            const response = await fetch(`/api/v2/domains/${domainId}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: !!domainId,\n        staleTime: 2 * 60 * 1000, // 2 minutes\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n}\n\n// Hook for domain verification check (using GET with check=true)\nexport const useDomainVerificationCheckV2 = (domainId: string) => {\n    const queryClient = useQueryClient()\n\n    return useMutation({\n        mutationFn: async () => {\n            const response = await fetch(`/api/v2/domains?status=pending&check=true`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to check verification')\n            }\n            return response.json()\n        },\n        onSuccess: () => {\n            // Invalidate domain details to refresh the data\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n        },\n    })\n}\n\n// Hook for domain deletion\nexport const useDeleteDomainV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation({\n        mutationFn: async (domainId: string) => {\n            const response = await fetch(`/api/v2/domains/${domainId}`, {\n                method: 'DELETE',\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to delete domain')\n            }\n            return response.json()\n        },\n        onMutate: async (domainId: string) => {\n            console.log('🗑️ Starting optimistic domain deletion for:', domainId)\n            \n            // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n            await queryClient.cancelQueries({ queryKey: domainV2Keys.all })\n\n            // Snapshot the previous values for rollback\n            const previousQueriesData: Array<{ queryKey: any; data: GetDomainsResponse }> = []\n\n            // Get all cached domain list queries and update them\n            const queries = queryClient.getQueriesData<GetDomainsResponse>({ queryKey: domainV2Keys.all })\n            console.log('📊 Found', queries.length, 'cached domain queries to update')\n            \n            for (const [queryKey, queryData] of queries) {\n                // Only process queries that have the expected GetDomainsResponse structure\n                if (queryData && \n                    Array.isArray(queryData.data) && \n                    typeof queryData.meta === 'object' && \n                    queryData.meta !== null) {\n                    \n                    console.log('✅ Updating query with', queryData.data.length, 'domains, totalCount:', queryData.meta.totalCount)\n                    \n                    // Store previous data for rollback\n                    previousQueriesData.push({ queryKey, data: queryData })\n\n                    // Optimistically update by removing the domain\n                    const updatedDomains: GetDomainsResponse = {\n                        ...queryData,\n                        data: queryData.data.filter(domain => domain.id !== domainId),\n                        meta: {\n                            ...queryData.meta,\n                            totalCount: Math.max((queryData.meta?.totalCount || 0) - 1, 0)\n                        }\n                    }\n                    queryClient.setQueryData(queryKey, updatedDomains)\n                    \n                    console.log('✅ Updated query - new count:', updatedDomains.data.length, 'totalCount:', updatedDomains.meta.totalCount)\n                } else {\n                    console.warn('⚠️ Skipping invalid query data:', { \n                        hasData: !!queryData,\n                        isDataArray: queryData ? Array.isArray(queryData.data) : false,\n                        hasMeta: queryData ? typeof queryData.meta === 'object' && queryData.meta !== null : false\n                    })\n                }\n            }\n\n            console.log('✅ Optimistic update complete - updated', previousQueriesData.length, 'queries')\n            \n            // Return a context object with the snapshotted values\n            return { previousQueriesData }\n        },\n        onError: (err, domainId, context) => {\n            console.error('❌ Domain deletion failed, rolling back optimistic updates:', err.message)\n            \n            // If the mutation fails, use the context returned from onMutate to roll back\n            if (context?.previousQueriesData) {\n                console.log('🔄 Rolling back', context.previousQueriesData.length, 'queries')\n                for (const { queryKey, data } of context.previousQueriesData) {\n                    queryClient.setQueryData(queryKey, data)\n                }\n                console.log('✅ Rollback complete')\n            }\n        },\n        onSuccess: (_, domainId) => {\n            // Remove domain from cache and invalidate related queries\n            queryClient.removeQueries({ queryKey: domainV2Keys.detail(domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.all })\n            \n            // Also invalidate legacy domain stats queries for backward compatibility\n            queryClient.invalidateQueries({ queryKey: ['domains'] })\n            queryClient.invalidateQueries({ queryKey: ['domainStats'] })\n        },\n    })\n}\n\n// Hook for adding email address\nexport const useAddEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<PostEmailAddressesResponse, Error, PostEmailAddressesRequest>({\n        mutationFn: async (data) => {\n            const response = await fetch('/api/v2/email-addresses', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to add email address')\n            }\n            return response.json()\n        },\n        onSuccess: (data) => {\n            // Track email address addition\n            track('Email Address Added', {\n                address: data.address,\n                domainId: data.domainId,\n                emailAddressId: data.id\n            })\n            \n            // Invalidate domain details to refresh email addresses\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(data.domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.emailAddresses(data.domainId) })\n        },\n    })\n}\n\n// Hook for deleting email address\nexport const useDeleteEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<DeleteEmailAddressByIdResponse, Error, { emailAddressId: string; domainId: string }>({\n        mutationFn: async ({ emailAddressId }) => {\n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`, {\n                method: 'DELETE',\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to delete email address')\n            }\n            return response.json()\n        },\n        onSuccess: (_, { domainId }) => {\n            // Invalidate domain details to refresh email addresses\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.emailAddresses(domainId) })\n        },\n    })\n}\n\n// Hook for updating email endpoint/webhook\nexport const useUpdateEmailEndpointV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<PutEmailAddressByIdResponse, Error, PutEmailAddressByIdRequest & { emailAddressId: string; domainId: string }>({\n        mutationFn: async ({ emailAddressId, domainId, ...data }) => {\n            console.log('🚀 Sending update request:', {\n                url: `/api/v2/email-addresses/${emailAddressId}`,\n                body: data\n            })\n            \n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to update endpoint')\n            }\n            const result = await response.json()\n            console.log('📥 Update response:', result)\n            return result\n        },\n        onSuccess: (_, { domainId }) => {\n            // Invalidate domain details to refresh email addresses\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.emailAddresses(domainId) })\n        },\n    })\n}\n\n// Hook for updating domain catch-all settings\nexport const useUpdateDomainCatchAllV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<any, Error, PutDomainByIdRequest & { domainId: string }>({\n        mutationFn: async ({ domainId, ...data }) => {\n            const response = await fetch(`/api/v2/domains/${domainId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to update catch-all settings')\n            }\n            return response.json()\n        },\n        onSuccess: (_, { domainId, isCatchAllEnabled, catchAllEndpointId }) => {\n            // Track catch-all toggle\n            track(isCatchAllEnabled ? 'Catch All Enabled' : 'Catch All Disabled', {\n                domainId: domainId,\n                endpointId: catchAllEndpointId || null\n            })\n            \n            // Invalidate domain details to refresh catch-all status\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n        },\n    })\n} ","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction File2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"12\" width=\"12\" {...props} viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"m10.428,2.867l-2.295-2.294c-.363-.364-.867-.573-1.382-.573h-3.001C2.233,0,1,1.233,1,2.75v6.5c0,1.517,1.233,2.75,2.75,2.75h4.5c1.517,0,2.75-1.233,2.75-2.75v-5.001c0-.521-.203-1.012-.572-1.382Zm-3.355-1.233l2.294,2.293c.021.021.032.049.049.073h-2.415V1.585c.024.016.051.027.071.048,0,0,0,0,0,0Z\" fill={fill} strokeWidth=\"0\"/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default File2;","/* __next_internal_action_entry_do_not_use__ [{\"40ccd8d8e26d5a0a7819f93603cecd1770ab9afb12\":\"getEmailDetails\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var getEmailDetails=/*#__PURE__*/createServerReference(\"40ccd8d8e26d5a0a7819f93603cecd1770ab9afb12\",callServer,void 0,findSourceMapURL,\"getEmailDetails\");","'use client'\n\nimport { useQuery } from '@tanstack/react-query'\nimport { getEmailDetails } from '@/app/actions/primary'\n\nexport interface EmailDetails {\n  id: string\n  emailId: string\n  messageId: string | null\n  from: string\n  to: string\n  recipient: string\n  subject: string | null\n  receivedAt: Date | null\n  processedAt: Date | null\n  status: string\n  emailContent: {\n    htmlBody: string | null\n    textBody: string | null\n    attachments: Array<{\n      filename?: string\n      contentType?: string\n      size?: number\n      contentId?: string\n      contentDisposition?: string\n    }>\n    headers: Record<string, any>\n    rawContent: string | null\n  }\n  parsedData: {\n    fromData: {\n      text: string\n      addresses: Array<{\n        name: string | null\n        address: string | null\n      }>\n    } | null\n    toData: {\n      text: string\n      addresses: Array<{\n        name: string | null\n        address: string | null\n      }>\n    } | null\n    ccData: any\n    bccData: any\n    replyToData: any\n    inReplyTo: string | null\n    references: string[]\n    priority: string | null\n    parseSuccess: boolean | null\n    parseError: string | null\n  }\n  authResults: {\n    spf: string\n    dkim: string\n    dmarc: string\n    spam: string\n    virus: string\n  }\n  metadata: {\n    processingTime: number | null\n    timestamp: Date | null\n    receiptTimestamp: Date | null\n    actionType: string | null\n    s3Info: {\n      bucketName: string | null\n      objectKey: string | null\n      contentFetched: boolean | null\n      contentSize: number | null\n      error: string | null\n    }\n    commonHeaders: any\n  }\n  createdAt: Date | null\n  updatedAt: Date | null\n}\n\nexport const useEmailQuery = (emailId: string | null) => {\n  return useQuery({\n    queryKey: ['email', emailId],\n    queryFn: async () => {\n      if (!emailId) {\n        throw new Error('Email ID is required')\n      }\n      \n      const result = await getEmailDetails(emailId)\n      \n      if (result.error) {\n        throw new Error(result.error)\n      }\n      \n      return result.data as EmailDetails\n    },\n    enabled: !!emailId,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    gcTime: 10 * 60 * 1000, // 10 minutes\n    retry: (failureCount, error) => {\n      // Don't retry on 404 errors\n      if (error.message === 'Email not found') {\n        return false\n      }\n      return failureCount < 3\n    },\n  })\n} ","/* __next_internal_action_entry_do_not_use__ [{\"400e0c4e16c3c0c54c42073a20508c7d05f4dd64fa\":\"markEmailAsRead\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var markEmailAsRead=/*#__PURE__*/createServerReference(\"400e0c4e16c3c0c54c42073a20508c7d05f4dd64fa\",callServer,void 0,findSourceMapURL,\"markEmailAsRead\");","'use client'\n\nimport { useMutation, useQueryClient } from '@tanstack/react-query'\nimport { markEmailAsRead } from '@/app/actions/primary'\nimport { toast } from 'sonner'\n\nexport const useMarkEmailAsReadMutation = () => {\n  const queryClient = useQueryClient()\n\n  return useMutation({\n    mutationFn: async (emailId: string) => {\n      const result = await markEmailAsRead(emailId)\n      \n      if (result.error) {\n        throw new Error(result.error)\n      }\n      \n      return result.data\n    },\n    onSuccess: (data, emailId) => {\n      // Invalidate and refetch email queries to update read status\n      queryClient.invalidateQueries({ queryKey: ['email', emailId] })\n      \n      // Also invalidate analytics/mail list queries that might show read status\n      queryClient.invalidateQueries({ queryKey: ['analytics'] })\n      queryClient.invalidateQueries({ queryKey: ['emails'] })\n      \n      // Optional: Show success toast\n      // toast.success('Email marked as read')\n    },\n    // Optimistic updates can be added here if needed\n    onMutate: async (emailId) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries({ queryKey: ['email', emailId] })\n\n      // Snapshot the previous value\n      const previousEmail = queryClient.getQueryData(['email', emailId])\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(['email', emailId], (old: any) => {\n        if (!old) return old\n        return {\n          ...old,\n          isRead: true,\n          readAt: new Date(),\n        }\n      })\n\n      // Return a context object with the snapshotted value\n      return { previousEmail }\n    },\n    onError: (err, emailId, context) => {\n      // If the mutation fails, use the context returned from onMutate to roll back\n      if (context?.previousEmail) {\n        queryClient.setQueryData(['email', emailId], context.previousEmail)\n      }\n      console.error('Failed to mark email as read:', err)\n      toast.error('Failed to mark email as read')\n    },\n    onSettled: (data, error, emailId) => {\n      // Always refetch after error or success to ensure we have the latest data\n      queryClient.invalidateQueries({ queryKey: ['email', emailId] })\n    },\n  })\n} ","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport type {\n    GetEmailAddressesResponse,\n    GetEmailAddressesRequest,\n    PostEmailAddressesRequest,\n    PostEmailAddressesResponse\n} from '@/app/api/v2/email-addresses/route'\nimport type {\n    GetEmailAddressByIdResponse,\n    PutEmailAddressByIdRequest,\n    PutEmailAddressByIdResponse,\n    DeleteEmailAddressByIdResponse\n} from '@/app/api/v2/email-addresses/[id]/route'\n\n// Query keys for v2 email addresses API\nexport const emailAddressesV2Keys = {\n    all: ['v2', 'email-addresses'] as const,\n    lists: () => [...emailAddressesV2Keys.all, 'list'] as const,\n    list: (params?: GetEmailAddressesRequest) => [...emailAddressesV2Keys.lists(), params] as const,\n    details: () => [...emailAddressesV2Keys.all, 'detail'] as const,\n    detail: (emailAddressId: string) => [...emailAddressesV2Keys.details(), emailAddressId] as const,\n}\n\n// Hook for listing email addresses\nexport const useEmailAddressesV2Query = (params?: GetEmailAddressesRequest) => {\n    return useQuery<GetEmailAddressesResponse>({\n        queryKey: emailAddressesV2Keys.list(params),\n        queryFn: async () => {\n            const searchParams = new URLSearchParams()\n            if (params?.limit) searchParams.set('limit', params.limit.toString())\n            if (params?.offset) searchParams.set('offset', params.offset.toString())\n            if (params?.domainId) searchParams.set('domainId', params.domainId)\n            if (params?.isActive) searchParams.set('isActive', params.isActive)\n            if (params?.isReceiptRuleConfigured) searchParams.set('isReceiptRuleConfigured', params.isReceiptRuleConfigured)\n\n            const response = await fetch(`/api/v2/email-addresses?${searchParams}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        staleTime: 2 * 60 * 1000, // 2 minutes\n        gcTime: 5 * 60 * 1000, // 5 minutes\n    })\n}\n\n// Hook for getting email address details\nexport const useEmailAddressV2Query = (emailAddressId: string) => {\n    return useQuery<GetEmailAddressByIdResponse>({\n        queryKey: emailAddressesV2Keys.detail(emailAddressId),\n        queryFn: async () => {\n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: !!emailAddressId,\n        staleTime: 2 * 60 * 1000, // 2 minutes\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n}\n\n// Hook for creating email address\nexport const useCreateEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<PostEmailAddressesResponse, Error, PostEmailAddressesRequest>({\n        mutationFn: async (data) => {\n            const response = await fetch('/api/v2/email-addresses', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to create email address')\n            }\n            return response.json()\n        },\n        onSuccess: (data) => {\n            // Invalidate email addresses lists\n            queryClient.invalidateQueries({ queryKey: emailAddressesV2Keys.lists() })\n            // Also invalidate domains queries since this affects domain stats\n            queryClient.invalidateQueries({ queryKey: ['v2', 'domains'] })\n        },\n    })\n}\n\n// Hook for updating email address\nexport const useUpdateEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<PutEmailAddressByIdResponse, Error, PutEmailAddressByIdRequest & { emailAddressId: string }>({\n        mutationFn: async ({ emailAddressId, ...data }) => {\n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to update email address')\n            }\n            return response.json()\n        },\n        onSuccess: (data, { emailAddressId }) => {\n            // Invalidate specific email address and lists\n            queryClient.invalidateQueries({ queryKey: emailAddressesV2Keys.detail(emailAddressId) })\n            queryClient.invalidateQueries({ queryKey: emailAddressesV2Keys.lists() })\n            // Also invalidate domains queries since this affects domain stats\n            queryClient.invalidateQueries({ queryKey: ['v2', 'domains'] })\n        },\n    })\n}\n\n// Hook for deleting email address\nexport const useDeleteEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<DeleteEmailAddressByIdResponse, Error, string>({\n        mutationFn: async (emailAddressId) => {\n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`, {\n                method: 'DELETE',\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to delete email address')\n            }\n            return response.json()\n        },\n        onSuccess: (_, emailAddressId) => {\n            // Remove from cache and invalidate lists\n            queryClient.removeQueries({ queryKey: emailAddressesV2Keys.detail(emailAddressId) })\n            queryClient.invalidateQueries({ queryKey: emailAddressesV2Keys.lists() })\n            // Also invalidate domains queries since this affects domain stats\n            queryClient.invalidateQueries({ queryKey: ['v2', 'domains'] })\n        },\n    })\n} ","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport type {\n    GetMailResponse,\n    GetMailRequest,\n    EmailItem\n} from '@/app/api/v2/mail/route'\nimport type {\n    GetMailByIdResponse,\n    PatchMailRequest,\n    PatchMailResponse\n} from '@/app/api/v2/mail/[id]/route'\nimport type {\n    GetEmailByIdResponse\n} from '@/app/api/v2/emails/[id]/route'\nimport type {\n    PostMailBulkRequest,\n    PostMailBulkResponse\n} from '@/app/api/v2/mail/bulk/route'\nimport type {\n    GetThreadResponse\n} from '@/app/api/v2/mail/[id]/thread/route'\n\n// Query keys for v2 mail API\nexport const mailV2Keys = {\n    all: ['v2', 'mail'] as const,\n    lists: () => [...mailV2Keys.all, 'list'] as const,\n    list: (params?: GetMailRequest) => [...mailV2Keys.lists(), params] as const,\n    details: () => [...mailV2Keys.all, 'detail'] as const,\n    detail: (emailId: string) => [...mailV2Keys.details(), emailId] as const,\n    outboundEmails: () => ['v2', 'emails'] as const,\n    outboundEmail: (emailId: string) => [...mailV2Keys.outboundEmails(), emailId] as const,\n}\n\n// Hook for listing emails (replacement for old email actions)\nexport const useMailV2Query = (params?: GetMailRequest) => {\n    return useQuery<GetMailResponse>({\n        queryKey: mailV2Keys.list(params),\n        queryFn: async () => {\n            const searchParams = new URLSearchParams()\n            if (params?.limit) searchParams.set('limit', params.limit.toString())\n            if (params?.offset) searchParams.set('offset', params.offset.toString())\n            if (params?.search) searchParams.set('search', params.search)\n            if (params?.status) searchParams.set('status', params.status)\n            if (params?.domain) searchParams.set('domain', params.domain)\n            if (params?.timeRange) searchParams.set('timeRange', params.timeRange)\n\n            const response = await fetch(`/api/v2/mail?${searchParams}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        staleTime: 30 * 1000, // 30 seconds\n        gcTime: 5 * 60 * 1000, // 5 minutes\n    })\n}\n\n// Hook for getting inbound email details by ID (replacement for old email details actions)\nexport const useMailDetailsV2Query = (emailId: string) => {\n    return useQuery<GetMailByIdResponse>({\n        queryKey: mailV2Keys.detail(emailId),\n        queryFn: async () => {\n            const response = await fetch(`/api/v2/mail/${emailId}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: !!emailId,\n        staleTime: 60 * 1000, // 1 minute\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n}\n\n// Hook for getting outbound email details by ID\nexport const useOutboundEmailDetailsV2Query = (emailId: string) => {\n    return useQuery<GetEmailByIdResponse>({\n        queryKey: mailV2Keys.outboundEmail(emailId),\n        queryFn: async () => {\n            const response = await fetch(`/api/v2/emails/${emailId}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: !!emailId,\n        staleTime: 60 * 1000, // 1 minute\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n}\n\n// Hook for updating a single email (archive, mark as read, etc.)\nexport const useUpdateEmailMutation = () => {\n    const queryClient = useQueryClient()\n    \n    return useMutation<\n        PatchMailResponse, \n        Error, \n        { emailId: string; updates: PatchMailRequest },\n        { previousEmailLists: [any, any][] }\n    >({\n        mutationFn: async ({ emailId, updates }) => {\n            const response = await fetch(`/api/v2/mail/${emailId}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(updates),\n            })\n            \n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            \n            return response.json()\n        },\n        onMutate: async ({ emailId, updates }) => {\n            // Cancel any outgoing refetches\n            await queryClient.cancelQueries({ queryKey: mailV2Keys.lists() })\n\n            // Snapshot the previous value\n            const previousEmailLists = queryClient.getQueriesData({ queryKey: mailV2Keys.lists() })\n\n            // Optimistically update all email list queries\n            queryClient.setQueriesData({ queryKey: mailV2Keys.lists() }, (old: any) => {\n                if (!old?.emails) return old\n\n                return {\n                    ...old,\n                    emails: old.emails.map((email: any) => {\n                        if (email.id === emailId) {\n                            const updatedEmail = { ...email }\n                            \n                            if (updates.isRead !== undefined) {\n                                updatedEmail.isRead = updates.isRead\n                                updatedEmail.readAt = updates.isRead ? new Date().toISOString() : null\n                            }\n                            \n                            if (updates.isArchived !== undefined) {\n                                updatedEmail.isArchived = updates.isArchived\n                                updatedEmail.archivedAt = updates.isArchived ? new Date().toISOString() : null\n                            }\n                            \n                            return updatedEmail\n                        }\n                        return email\n                    })\n                }\n            })\n\n            // Return a context object with the snapshotted value\n            return { previousEmailLists }\n        },\n        onError: (err, variables, context) => {\n            // If the mutation fails, use the context returned from onMutate to roll back\n            if (context?.previousEmailLists) {\n                context.previousEmailLists.forEach(([queryKey, data]: [any, any]) => {\n                    queryClient.setQueryData(queryKey, data)\n                })\n            }\n        },\n        onSettled: () => {\n            // Always refetch after error or success to ensure we have the latest data\n            queryClient.invalidateQueries({ queryKey: mailV2Keys.lists() })\n        },\n    })\n}\n\n// Hook for bulk updating emails (archive, mark as read, etc.)\nexport const useBulkUpdateEmailsMutation = () => {\n    const queryClient = useQueryClient()\n    \n    return useMutation<\n        PostMailBulkResponse, \n        Error, \n        PostMailBulkRequest,\n        { previousEmailLists: [any, any][] }\n    >({\n        mutationFn: async (bulkRequest) => {\n            const response = await fetch('/api/v2/mail/bulk', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(bulkRequest),\n            })\n            \n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            \n            return response.json()\n        },\n        onMutate: async ({ emailIds, updates }) => {\n            // Cancel any outgoing refetches\n            await queryClient.cancelQueries({ queryKey: mailV2Keys.lists() })\n\n            // Snapshot the previous value\n            const previousEmailLists = queryClient.getQueriesData({ queryKey: mailV2Keys.lists() })\n\n            // Optimistically update all email list queries\n            queryClient.setQueriesData({ queryKey: mailV2Keys.lists() }, (old: any) => {\n                if (!old?.emails) return old\n\n                return {\n                    ...old,\n                    emails: old.emails.map((email: any) => {\n                        if (emailIds.includes(email.id)) {\n                            const updatedEmail = { ...email }\n                            \n                            if (updates.isRead !== undefined) {\n                                updatedEmail.isRead = updates.isRead\n                                updatedEmail.readAt = updates.isRead ? new Date().toISOString() : null\n                            }\n                            \n                            if (updates.isArchived !== undefined) {\n                                updatedEmail.isArchived = updates.isArchived\n                                updatedEmail.archivedAt = updates.isArchived ? new Date().toISOString() : null\n                            }\n                            \n                            return updatedEmail\n                        }\n                        return email\n                    }).filter((email: any) => {\n                        // If archiving emails, remove them from the list immediately\n                        if (updates.isArchived === true) {\n                            return !emailIds.includes(email.id)\n                        }\n                        return true\n                    })\n                }\n            })\n\n            // Return a context object with the snapshotted value\n            return { previousEmailLists }\n        },\n        onError: (err, variables, context) => {\n            // If the mutation fails, use the context returned from onMutate to roll back\n            if (context?.previousEmailLists) {\n                context.previousEmailLists.forEach(([queryKey, data]: [any, any]) => {\n                    queryClient.setQueryData(queryKey, data)\n                })\n            }\n        },\n        onSettled: () => {\n            // Always refetch after error or success to ensure we have the latest data\n            queryClient.invalidateQueries({ queryKey: mailV2Keys.lists() })\n        },\n    })\n}\n\n// Hook for marking email as read (if available in v2 API - placeholder)\nexport const useMarkEmailAsReadV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<any, Error, string>({\n        mutationFn: async (emailId) => {\n            // Note: This endpoint might not exist in v2 API yet\n            // For now, we'll need to use the old action or create a new endpoint\n            const response = await fetch(`/api/v2/mail/${emailId}/mark-read`, {\n                method: 'POST',\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to mark email as read')\n            }\n            return response.json()\n        },\n        onSuccess: (_, emailId) => {\n            // Update the specific email in cache\n            queryClient.invalidateQueries({ queryKey: mailV2Keys.detail(emailId) })\n            // Also invalidate the mail lists to update read status\n            queryClient.invalidateQueries({ queryKey: mailV2Keys.lists() })\n        },\n    })\n}\n\n// Helper hook for user email logs (replacement for useUserEmailLogsQuery)\nexport const useUserEmailLogsV2Query = (options?: GetMailRequest) => {\n    // This is essentially the same as useMailV2Query but with specific filtering\n    return useMailV2Query({\n        ...options,\n        limit: options?.limit || 50,\n        offset: options?.offset || 0,\n    })\n}\n\n// Hook for replying to an email\nexport const useReplyToEmailV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<\n        { id: string },\n        Error,\n        {\n            emailId: string\n            from: string\n            to?: string | string[]\n            subject?: string\n            text?: string\n            html?: string\n            include_original?: boolean\n        }\n    >({\n        mutationFn: async ({ emailId, ...replyData }) => {\n            const response = await fetch(`/api/v2/emails/${emailId}/reply`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(replyData),\n            })\n            \n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to send reply')\n            }\n            \n            return response.json()\n        },\n        onSuccess: (_, { emailId }) => {\n            // Invalidate mail lists to show the sent reply\n            queryClient.invalidateQueries({ queryKey: mailV2Keys.lists() })\n            // Also invalidate the specific email detail\n            queryClient.invalidateQueries({ queryKey: mailV2Keys.detail(emailId) })\n        },\n    })\n} \n\n// Hook for getting email thread/conversation\nexport const useEmailThreadV2Query = (emailId: string) => {\n    return useQuery<GetThreadResponse>({\n        queryKey: [...mailV2Keys.detail(emailId), 'thread'],\n        queryFn: async () => {\n            const response = await fetch(`/api/v2/mail/${emailId}/thread`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: !!emailId,\n        staleTime: 60 * 1000, // 1 minute\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n}\n\n// Hook for getting thread counts for multiple emails (for inbox listing)\nexport const useEmailThreadCountsV2Query = (emailIds: string[]) => {\n    return useQuery<{\n        success: boolean\n        data: Array<{\n            emailId: string\n            threadCount: number\n            hasThread: boolean\n        }>\n    }>({\n        queryKey: ['mail-v2', 'thread-counts', ...emailIds.sort()],\n        queryFn: async () => {\n            const response = await fetch('/api/v2/mail/thread-counts', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ emailIds })\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: emailIds.length > 0,\n        staleTime: 2 * 60 * 1000, // 2 minutes (thread counts don't change often)\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n} ","/* __next_internal_action_entry_do_not_use__ [{\"4036a927bdcc185c7cd5221062f42afb70733d159f\":\"getUserEmailLogs\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var getUserEmailLogs=/*#__PURE__*/createServerReference(\"4036a927bdcc185c7cd5221062f42afb70733d159f\",callServer,void 0,findSourceMapURL,\"getUserEmailLogs\");","import { useQuery } from '@tanstack/react-query'\nimport { getUserEmailLogs } from '@/app/actions/primary'\nimport type { EmailLogsOptions, EmailLogsResponse } from '../types'\n\nexport function useUserEmailLogsQuery(options: EmailLogsOptions = {}) {\n  return useQuery({\n    queryKey: ['user-email-logs', options],\n    queryFn: async () => {\n      const result = await getUserEmailLogs(options)\n      if (!result.success) {\n        throw new Error(result.error)\n      }\n      return result.data as EmailLogsResponse\n    },\n    staleTime: 30 * 1000, // 30 seconds\n    gcTime: 5 * 60 * 1000, // 5 minutes\n  })\n} ","/* __next_internal_action_entry_do_not_use__ [{\"4062391b8b9fea3dab173568dc243176dcda35bc73\":\"getEmailsList\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var getEmailsList=/*#__PURE__*/createServerReference(\"4062391b8b9fea3dab173568dc243176dcda35bc73\",callServer,void 0,findSourceMapURL,\"getEmailsList\");","/* __next_internal_action_entry_do_not_use__ [{\"40134f515b8fe5278d31a536a3a223c156ec6b61af\":\"getEmailDetailsFromParsed\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var getEmailDetailsFromParsed=/*#__PURE__*/createServerReference(\"40134f515b8fe5278d31a536a3a223c156ec6b61af\",callServer,void 0,findSourceMapURL,\"getEmailDetailsFromParsed\");","/* __next_internal_action_entry_do_not_use__ [{\"40f4308e9524f900b328889cf8d5095aa19d019d23\":\"getUnifiedEmailLogs\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var getUnifiedEmailLogs=/*#__PURE__*/createServerReference(\"40f4308e9524f900b328889cf8d5095aa19d019d23\",callServer,void 0,findSourceMapURL,\"getUnifiedEmailLogs\");","import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query'\nimport { markEmailAsRead, getEmailsList, getEmailDetailsFromParsed, getUnifiedEmailLogs } from '@/app/actions/primary'\nimport type { EmailLogsOptions, EmailLogsResponse } from '../types'\n\n// Export the v2 hooks as primary exports\nexport {\n  useDomainsListV2Query,\n  useDomainDetailsV2Query,\n  useAddEmailAddressV2Mutation,\n  useUpdateEmailEndpointV2Mutation\n} from '@/features/domains/hooks/useDomainV2Hooks'\n\nexport { useEmailQuery } from './useEmailQuery'\nexport { useMarkEmailAsReadMutation } from './useMarkEmailAsReadMutation'\n\n// Export email address v2 hooks\nexport { useEmailAddressesV2Query, useEmailAddressV2Query } from './useEmailAddressesV2Hooks'\n\nexport {\n  useMailV2Query,\n  useMailDetailsV2Query,\n  useOutboundEmailDetailsV2Query,\n  useMarkEmailAsReadV2Mutation,\n  useUserEmailLogsV2Query,\n  useReplyToEmailV2Mutation,\n  useUpdateEmailMutation,\n  useBulkUpdateEmailsMutation,\n  useEmailThreadV2Query,\n  useEmailThreadCountsV2Query\n} from './useMailV2Hooks'\n\n// Legacy email logs hook (inbound only)\nexport { useUserEmailLogsQuery } from './useUserEmailLogsQuery'\n\n// New unified email logs hook (inbound + outbound)\nexport function useUnifiedEmailLogsQuery(options: EmailLogsOptions = {}) {\n  return useQuery({\n    queryKey: ['unified-email-logs', options],\n    queryFn: async () => {\n      const result = await getUnifiedEmailLogs(options)\n      if (!result.success) {\n        throw new Error(result.error)\n      }\n      return result.data as EmailLogsResponse\n    },\n    staleTime: 30 * 1000, // 30 seconds\n    gcTime: 5 * 60 * 1000, // 5 minutes\n  })\n}\n\n// Query keys\nexport const emailKeys = {\n  all: ['emails'] as const,\n  lists: () => [...emailKeys.all, 'list'] as const,\n  list: (filters: Record<string, any>) => [...emailKeys.lists(), filters] as const,\n  details: () => [...emailKeys.all, 'detail'] as const,\n  detail: (id: string) => [...emailKeys.details(), id] as const,\n}\n\n// Legacy hook for listing emails (kept for backward compatibility)\nexport function useEmailsListQuery(options?: {\n  limit?: number\n  offset?: number\n  searchQuery?: string\n  statusFilter?: string\n  domainFilter?: string\n}) {\n  return useQuery({\n    queryKey: emailKeys.list(options || {}),\n    queryFn: () => getEmailsList(options),\n    staleTime: 30 * 1000, // 30 seconds\n    gcTime: 5 * 60 * 1000, // 5 minutes\n  })\n}\n\n// Legacy hook for getting email details (kept for backward compatibility)\nexport function useEmailDetailsQuery(emailId: string, enabled = true) {\n  return useQuery({\n    queryKey: emailKeys.detail(emailId),\n    queryFn: () => getEmailDetailsFromParsed(emailId),\n    enabled: enabled && !!emailId,\n    staleTime: 60 * 1000, // 1 minute\n    gcTime: 10 * 60 * 1000, // 10 minutes\n  })\n} ","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction ArrowUpRight2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"12\" width=\"12\" {...props} viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"m1.75,11c-.192,0-.384-.073-.53-.22-.293-.293-.293-.768,0-1.061L9.543,1.396c.293-.293.768-.293,1.061,0s.293.768,0,1.061L2.28,10.78c-.146.146-.338.22-.53.22Z\" fill={secondaryfill} strokeWidth=\"0\"/>\n\t\t<path d=\"m10.25,7.25c-.414,0-.75-.336-.75-.75V2.5h-4c-.414,0-.75-.336-.75-.75s.336-.75.75-.75h4.75c.414,0,.75.336.75.75v4.75c0,.414-.336.75-.75.75Z\" fill={fill} strokeWidth=\"0\"/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default ArrowUpRight2;","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction AlarmClock({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M16.5,4.25c-.192,0-.384-.073-.53-.22l-2-2c-.293-.293-.293-.768,0-1.061s.768-.293,1.061,0l2,2c.293,.293,.293,.768,0,1.061-.146,.146-.338,.22-.53,.22Z\" fill={secondaryfill}/>\n\t\t<path d=\"M1.5,4.25c-.192,0-.384-.073-.53-.22-.293-.293-.293-.768,0-1.061L2.97,.97c.293-.293,.768-.293,1.061,0s.293,.768,0,1.061l-2,2c-.146,.146-.338,.22-.53,.22Z\" fill={secondaryfill}/>\n\t\t<path d=\"M14.447,13.386c.969-1.201,1.553-2.726,1.553-4.386,0-3.86-3.14-7-7-7S2,5.14,2,9c0,1.66,.584,3.185,1.553,4.386l-1.333,1.333c-.293,.293-.293,.768,0,1.061,.146,.146,.338,.22,.53,.22s.384-.073,.53-.22l1.333-1.333c1.201,.969,2.726,1.553,4.387,1.553s3.185-.583,4.387-1.553l1.333,1.333c.146,.146,.338,.22,.53,.22s.384-.073,.53-.22c.293-.293,.293-.768,0-1.061l-1.333-1.333Zm-2.064-2.234c-.143,.225-.386,.347-.633,.347-.138,0-.277-.038-.402-.117l-2.75-1.75c-.216-.138-.347-.376-.347-.633v-3.25c0-.414,.336-.75,.75-.75s.75,.336,.75,.75v2.838l2.403,1.529c.349,.223,.452,.686,.23,1.036Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default AlarmClock;","/* __next_internal_action_entry_do_not_use__ [{\"00b110dd3c06704b76c3b03d988a4765d56aaab563\":\"markAllEmailsAsRead\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var markAllEmailsAsRead=/*#__PURE__*/createServerReference(\"00b110dd3c06704b76c3b03d988a4765d56aaab563\",callServer,void 0,findSourceMapURL,\"markAllEmailsAsRead\");","\"use client\"\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport CircleCheck from '@/components/icons/circle-check'\nimport CircleWarning2 from '@/components/icons/circle-warning-2'\nimport { markAllEmailsAsRead } from '@/app/actions/primary'\nimport { useRouter } from 'next/navigation'\n\ninterface MarkAllReadButtonProps {\n    unreadCount: number\n}\n\nexport function MarkAllReadButton({ unreadCount }: MarkAllReadButtonProps) {\n    const [isOpen, setIsOpen] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const router = useRouter()\n\n    const handleMarkAllAsRead = async () => {\n        try {\n            setIsLoading(true)\n            const result = await markAllEmailsAsRead()\n            \n            if (result.error) {\n                console.error('Failed to mark all as read:', result.error)\n                return\n            }\n\n            console.log(result.message)\n            setIsOpen(false)\n            \n            // Refresh the page to show updated read status\n            router.refresh()\n        } catch (error) {\n            console.error('Error marking all emails as read:', error)\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n    if (unreadCount === 0) {\n        return null // Don't show button if no unread emails\n    }\n\n    return (\n        <Dialog open={isOpen} onOpenChange={setIsOpen}>\n            <DialogTrigger asChild>\n                <Button variant=\"primary\" size=\"sm\" >\n                    <CircleCheck className=\"h-4 w-4 mr-2\" />\n                    Mark All as Read\n                </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-md\">\n                <DialogHeader>\n                    <DialogTitle className=\"flex items-center gap-2\">\n                        <CircleWarning2 className=\"h-5 w-5 text-amber-500\" />\n                        Mark All Emails as Read?\n                    </DialogTitle>\n                    <DialogDescription>\n                        This will mark all {unreadCount} unread email{unreadCount === 1 ? '' : 's'} as read. \n                        This action cannot be undone.\n                    </DialogDescription>\n                </DialogHeader>\n                <DialogFooter className=\"flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\">\n                    <Button \n                        variant=\"secondary\" \n                        onClick={() => setIsOpen(false)}\n                        disabled={isLoading}\n                    >\n                        Cancel\n                    </Button>\n                    <Button \n                        onClick={handleMarkAllAsRead}\n                        disabled={isLoading}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\n                    >\n                        {isLoading ? (\n                            <>\n                                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                                Marking as Read...\n                            </>\n                        ) : (\n                            <>\n                                <CircleCheck className=\"h-4 w-4 mr-2\" />\n                                Mark All as Read\n                            </>\n                        )}\n                    </Button>\n                </DialogFooter>\n            </DialogContent>\n        </Dialog>\n    )\n} ","\"use client\"\n\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { useRouter, useSearchParams } from 'next/navigation'\n\ninterface DomainFilterSelectProps {\n  domains: string[]\n  currentDomain: string\n}\n\nexport function DomainFilterSelect({ domains, currentDomain }: DomainFilterSelectProps) {\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  const handleDomainChange = (value: string) => {\n    const params = new URLSearchParams(searchParams.toString())\n    \n    if (value === 'all') {\n      params.delete('domain')\n    } else {\n      params.set('domain', value)\n    }\n    \n    // Reset offset when filtering\n    params.delete('offset')\n    \n    router.push(`/mail?${params.toString()}`)\n  }\n\n  return (\n    <Select value={currentDomain} onValueChange={handleDomainChange}>\n      <SelectTrigger className=\"w-40 h-9 rounded-xl\">\n        <SelectValue placeholder=\"All Domains\" />\n      </SelectTrigger>\n      <SelectContent className=\"rounded-xl\">\n        <SelectItem value=\"all\">All Domains</SelectItem>\n        {domains.map((domain) => (\n          <SelectItem key={domain} value={domain}>\n            {domain}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  )\n} ","'use client'\n\nimport Link from 'next/link'\nimport { formatDistanceToNow } from 'date-fns'\nimport File2 from '@/components/icons/file-2'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { useUpdateEmailMutation } from '@/features/emails/hooks'\n\ninterface EmailListItemProps {\n  email: {\n    id: string\n    from: string\n    subject: string\n    receivedAt: string | undefined\n    isRead: boolean\n    parsedData: {\n      fromData: any\n      preview: string\n      hasAttachments: boolean\n      htmlContent?: string | null\n      textContent?: string | null\n    }\n  }\n  isSelectMode?: boolean\n  isSelected?: boolean\n  onSelect?: (emailId: string, checked: boolean) => void\n  threadCount?: number\n}\n\nexport function EmailListItem({ email, isSelectMode = false, isSelected = false, onSelect, threadCount }: EmailListItemProps) {\n  const updateEmailMutation = useUpdateEmailMutation()\n\n  // Get sender name\n  const senderName = email.parsedData.fromData?.addresses?.[0]?.name ||\n    email.from.split('@')[0] ||\n    email.from.split('<')[0] ||\n    email.from\n\n  const preview = email.parsedData.preview || 'No preview available'\n\n  const handleCheckboxChange = (checked: boolean | 'indeterminate') => {\n    if (onSelect) {\n      onSelect(email.id, checked === true)\n    }\n  }\n\n  const handleEmailClick = () => {\n    // Optimistically mark as read when clicking on the email\n    if (!email.isRead) {\n      updateEmailMutation.mutate({\n        emailId: email.id,\n        updates: { isRead: true }\n      })\n    }\n  }\n\n  const content = (\n    <div className=\"flex items-center gap-4 relative\">\n      {/* Selection checkbox */}\n      {isSelectMode && (\n        <div className=\"flex-shrink-0\" onClick={(e) => e.stopPropagation()}>\n          <Checkbox\n            checked={isSelected}\n            onCheckedChange={handleCheckboxChange}\n          />\n        </div>\n      )}\n      \n      {/* Name Column */}\n      <div className=\"w-40 flex-shrink-0\">\n          <div className=\"flex items-center gap-2\">\n            <span className={`font-medium truncate text-foreground text-sm ${!email.isRead ? 'font-semibold' : ''}`}>\n              {senderName}\n            </span>\n            {!email.isRead && (\n              <div className=\"w-2 h-2 bg-primary rounded-full flex-shrink-0\"></div>\n            )}\n          </div>\n        </div>\n        \n        {/* Subject + Preview (flowing) */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center gap-3 text-sm\">\n            <div className=\"flex items-center gap-2 flex-shrink-0\">\n              <span className={`font-medium text-foreground ${!email.isRead ? 'font-semibold' : ''}`}>\n                {email.subject}\n              </span>\n              {threadCount && threadCount > 1 && (\n                <span className=\"bg-muted-foreground/20 text-muted-foreground text-xs px-1.5 py-0.5 rounded-md font-medium\">\n                  {threadCount}\n                </span>\n              )}\n            </div>\n            <span className=\"text-muted-foreground/80 truncate\">\n              — {preview}\n            </span>\n            {email.parsedData.hasAttachments && (\n              <File2 width=\"14\" height=\"14\" className=\"text-muted-foreground flex-shrink-0\" />\n            )}\n          </div>\n        </div>\n        \n        {/* Time Column */}\n        <div className=\"w-24 flex-shrink-0 text-right\">\n          <span className=\"text-xs text-muted-foreground whitespace-nowrap\">\n            {formatDistanceToNow(new Date(email.receivedAt || new Date()), { addSuffix: true })}\n          </span>\n        </div>\n      </div>\n    )\n\n  if (isSelectMode) {\n    return (\n      <div\n        className={`block w-full px-6 py-3 hover:bg-accent/50 transition-colors duration-200 group cursor-pointer \n        } ${isSelected ? 'bg-accent/30' : ''}`}\n        onClick={() => handleCheckboxChange(!isSelected)}\n      >\n        {content}\n      </div>\n    )\n  }\n\n  return (\n    <Link\n      href={`/mail/${email.id}`}\n      className={`block w-full px-6 py-3 hover:bg-accent/50 transition-colors duration-200 group ${\n        !email.isRead ? 'bg-primary/5 border-l-4 border-l-primary' : ''\n      }`}\n      onClick={handleEmailClick}\n    >\n      {content}\n    </Link>\n  )\n} ","\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { useSearchParams, useRouter } from 'next/navigation'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { useMailV2Query, useUpdateEmailMutation, useBulkUpdateEmailsMutation, useEmailThreadCountsV2Query } from '@/features/emails/hooks'\nimport type { EmailItem } from '@/app/api/v2/mail/route'\nimport Link from 'next/link'\nimport Check2 from '@/components/icons/check-2'\nimport AlarmClock from '@/components/icons/alarm-clock'\nimport Magnifier2 from '@/components/icons/magnifier-2'\nimport ArrowUpRight2 from '@/components/icons/arrow-up-right-2'\nimport CircleWarning2 from '@/components/icons/circle-warning-2'\nimport { CustomInboundIcon } from '@/components/icons/customInbound'\nimport { MarkAllReadButton } from '@/components/mark-all-read-button'\nimport { DomainFilterSelect } from '@/components/domain-filter-select'\nimport { EmailListItem } from '@/components/emails/EmailListItem'\n\nexport default function MailPage() {\n    const searchParams = useSearchParams()\n    const router = useRouter()\n\n    // Get search params with defaults\n    const searchQuery = searchParams.get('search') || ''\n    const statusFilter = searchParams.get('status') || 'all'\n    const domainFilter = searchParams.get('domain') || 'all'\n    const limit = parseInt(searchParams.get('limit') || '50')\n    const offset = parseInt(searchParams.get('offset') || '0')\n\n    // Selection state for bulk operations\n    const [selectedEmails, setSelectedEmails] = useState<string[]>([])\n    const [isSelectMode, setIsSelectMode] = useState(false)\n\n    // Fetch emails using v2 API with 5-second refresh\n    const {\n        data: emailsResult,\n        isLoading,\n        error,\n        refetch\n    } = useMailV2Query({\n        limit,\n        offset,\n        search: searchQuery,\n        status: statusFilter === 'all' ? undefined : (statusFilter as 'all' | 'processed' | 'failed'),\n        domain: domainFilter === 'all' ? undefined : domainFilter\n    })\n\n    // Mutations for bulk operations\n    const updateEmailMutation = useUpdateEmailMutation()\n    const bulkUpdateMutation = useBulkUpdateEmailsMutation()\n\n    // Get thread counts for all emails in current page\n    const emailIds = emailsResult?.emails?.map(email => email.id) || []\n    const {\n        data: threadCountsResult\n    } = useEmailThreadCountsV2Query(emailIds)\n\n    // Set up 5-second auto-refresh\n    useEffect(() => {\n        const interval = setInterval(() => {\n            refetch()\n        }, 5000) // 5 seconds\n\n        return () => clearInterval(interval)\n    }, [refetch])\n\n    // Selection handlers\n    const handleSelectEmail = (emailId: string, checked: boolean) => {\n        if (checked) {\n            setSelectedEmails(prev => [...prev, emailId])\n        } else {\n            setSelectedEmails(prev => prev.filter(id => id !== emailId))\n        }\n    }\n\n    const handleSelectAll = (checked: boolean) => {\n        if (checked && emailsResult?.emails) {\n            setSelectedEmails(emailsResult.emails.map(email => email.id))\n        } else {\n            setSelectedEmails([])\n        }\n    }\n\n    // Bulk action handlers\n    const handleBulkArchive = async () => {\n        if (selectedEmails.length === 0) return\n        \n        try {\n            await bulkUpdateMutation.mutateAsync({\n                emailIds: selectedEmails,\n                updates: { isArchived: true }\n            })\n            setSelectedEmails([])\n            setIsSelectMode(false)\n        } catch (error) {\n            console.error('Failed to archive emails:', error)\n        }\n    }\n\n    const handleBulkMarkAsRead = async () => {\n        if (selectedEmails.length === 0) return\n        \n        try {\n            await bulkUpdateMutation.mutateAsync({\n                emailIds: selectedEmails,\n                updates: { isRead: true }\n            })\n            setSelectedEmails([])\n        } catch (error) {\n            console.error('Failed to mark emails as read:', error)\n        }\n    }\n\n    // Clear selection when not in select mode\n    useEffect(() => {\n        if (!isSelectMode) {\n            setSelectedEmails([])\n        }\n    }, [isSelectMode])\n\n    if (error) {\n        return (\n            <div className=\"min-h-screen p-4 font-outfit\">\n                <div className=\"max-w-5xl mx-auto\">\n                    <Card className=\"border-destructive/50 bg-destructive/10\">\n                        <CardContent className=\"p-6\">\n                            <div className=\"flex items-center gap-2 text-destructive\">\n                                <CircleWarning2 width=\"16\" height=\"16\" />\n                                <span>{error.message}</span>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n\n    if (isLoading) {\n        return (\n            <div className=\"min-h-screen p-4 font-outfit\">\n                <div className=\"max-w-5xl mx-auto\">\n                    <div className=\"flex items-center justify-center py-12\">\n                        <div className=\"text-muted-foreground\">Loading emails...</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    if (!emailsResult) {\n        return (\n            <div className=\"min-h-screen p-4 font-outfit\">\n                <div className=\"max-w-5xl mx-auto\">\n                    <div className=\"flex items-center justify-center py-12\">\n                        <div className=\"text-muted-foreground\">No emails found</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    const { emails, pagination, filters = { uniqueDomains: [] } } = emailsResult\n    const unreadCount = emails.filter(email => !email.isRead).length\n\n    // Function to get thread count for a specific email\n    const getThreadCountForEmail = (emailId: string): number | undefined => {\n        if (!threadCountsResult?.success) return undefined\n        const threadData = threadCountsResult.data.find(t => t.emailId === emailId)\n        return threadData?.threadCount\n    }\n\n    // Adapter function to convert v2 EmailItem to EmailListItem format\n    const adaptEmailForListItem = (email: EmailItem) => ({\n        id: email.id,\n        from: email.from,\n        subject: email.subject || 'No Subject',\n        receivedAt: email.receivedAt.toString(),\n        isRead: email.isRead,\n        parsedData: {\n            fromData: {\n                addresses: [{\n                    name: email.fromName,\n                    address: email.from\n                }]\n            },\n            preview: email.preview,\n            hasAttachments: email.hasAttachments,\n            htmlContent: null,\n            textContent: null\n        }\n    })\n\n    const getStatusBadge = (status: string) => {\n        switch (status) {\n            case 'received':\n                return (\n                    <Badge className=\"bg-emerald-100 text-emerald-800 border-emerald-200 rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                        <Check2 width=\"12\" height=\"12\" className=\"mr-1\" />\n                        Received\n                    </Badge>\n                )\n            case 'processing':\n                return (\n                    <Badge className=\"bg-amber-100 text-amber-800 border-amber-200 rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                        <AlarmClock width=\"12\" height=\"12\" className=\"mr-1\" />\n                        Processing\n                    </Badge>\n                )\n            case 'forwarded':\n                return (\n                    <Badge className=\"bg-blue-100 text-blue-800 border-blue-200 rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                        <ArrowUpRight2 width=\"12\" height=\"12\" className=\"mr-1\" />\n                        Forwarded\n                    </Badge>\n                )\n            case 'failed':\n                return (\n                    <Badge className=\"bg-rose-100 text-rose-800 border-rose-200 rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                        <CircleWarning2 width=\"12\" height=\"12\" className=\"mr-1\" />\n                        Failed\n                    </Badge>\n                )\n            default:\n                return (\n                    <Badge className=\"bg-secondary text-secondary-foreground border-border rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                        <AlarmClock width=\"12\" height=\"12\" className=\"mr-1\" />\n                        {status}\n                    </Badge>\n                )\n        }\n    }\n\n    return (\n        <div className=\"min-h-screen font-outfit\">\n            <div className=\"max-w-6xl mx-auto p-4\">\n                {/* Header Section */}\n                <div className=\"mb-6\">\n                    <div className=\"flex items-center justify-between\">\n                        <div>\n                            <h2 className=\"text-2xl font-semibold text-foreground mb-1 tracking-tight\">\n                                Mail ({unreadCount} unread)\n                            </h2>\n                            <p className=\"text-muted-foreground text-sm font-medium\">Search and filter your received emails</p>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                            {isSelectMode ? (\n                                <>\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => setIsSelectMode(false)}\n                                    >\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={handleBulkMarkAsRead}\n                                        disabled={selectedEmails.length === 0 || bulkUpdateMutation.isPending}\n                                    >\n                                        Mark Read ({selectedEmails.length})\n                                    </Button>\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={handleBulkArchive}\n                                        disabled={selectedEmails.length === 0 || bulkUpdateMutation.isPending}\n                                        className=\"text-destructive hover:text-destructive\"\n                                    >\n                                        Archive ({selectedEmails.length})\n                                    </Button>\n                                </>\n                            ) : (\n                                <>\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => setIsSelectMode(true)}\n                                        disabled={!emailsResult?.emails || emailsResult.emails.length === 0}\n                                    >\n                                        Select\n                                    </Button>\n                                    <MarkAllReadButton unreadCount={unreadCount} />\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                {/* Search and Filters Form */}\n                <div className=\"mb-6\">\n                    <div className=\"flex items-center gap-3\">\n                        {isSelectMode && (\n                            <div className=\"flex items-center gap-2\">\n                                <Checkbox\n                                    checked={emailsResult?.emails ? selectedEmails.length === emailsResult.emails.length && emailsResult.emails.length > 0 : false}\n                                    onCheckedChange={(checked) => handleSelectAll(checked === true)}\n                                />\n                                <span className=\"text-sm text-muted-foreground\">Select All</span>\n                            </div>\n                        )}\n                        <form method=\"GET\" className=\"relative flex-1\">\n                            <Magnifier2 width=\"16\" height=\"16\" className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n                            <Input\n                                name=\"search\"\n                                placeholder=\"Search emails...\"\n                                defaultValue={searchQuery}\n                                className=\"pl-10 h-9 rounded-xl\"\n                            />\n                            {/* Hidden inputs to preserve other filter states */}\n                            {domainFilter !== 'all' && (\n                                <input type=\"hidden\" name=\"domain\" value={domainFilter} />\n                            )}\n                            <Button type=\"submit\" className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-6 px-2\">\n                                <Magnifier2 width=\"12\" height=\"12\" />\n                            </Button>\n                        </form>\n\n                        <DomainFilterSelect\n                            domains={filters.uniqueDomains}\n                            currentDomain={domainFilter}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            {/* Email List - Edge to Edge */}\n            <div className=\"w-full max-w-6xl mx-auto\">\n                {emails.length === 0 ? (\n                    <div className=\"max-w-5xl mx-auto p-4\">\n                        <div className=\"bg-card border-border rounded-xl p-8\">\n                            <div className=\"text-center\">\n                                <CustomInboundIcon\n                                    text=\"EM\"\n                                    size={48}\n                                    backgroundColor=\"#8b5cf6\"\n                                    className=\"mx-auto mb-4\"\n                                />\n                                <h3 className=\"text-lg font-semibold mb-2 text-foreground\">No emails found</h3>\n                                <p className=\"text-sm text-muted-foreground mb-4\">\n                                    {searchQuery || statusFilter !== 'all' || domainFilter !== 'all'\n                                        ? 'No emails match your search criteria.'\n                                        : 'Hey! Looks like you don\\'t have any emails yet.'}\n                                </p>\n                                {!(searchQuery || statusFilter !== 'all' || domainFilter !== 'all') && (\n                                    <div className=\"space-y-3\">\n                                        <p className=\"text-sm text-muted-foreground\">\n                                            Ready to start receiving emails? Let's get you set up!\n                                        </p>\n                                        <Button asChild>\n                                            <Link href=\"/onboarding\">\n                                                Start Onboarding\n                                            </Link>\n                                        </Button>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"divide-y divide-border\">\n                        {emails.map((email) => (\n                            <EmailListItem \n                                key={email.id} \n                                email={adaptEmailForListItem(email)}\n                                isSelectMode={isSelectMode}\n                                isSelected={selectedEmails.includes(email.id)}\n                                onSelect={handleSelectEmail}\n                                threadCount={getThreadCountForEmail(email.id)}\n                            />\n                        ))}\n                    </div>\n                )}\n\n                {/* Pagination */}\n                {pagination.total > pagination.limit && (\n                    <div className=\"max-w-5xl mx-auto p-4\">\n                        <div className=\"bg-card border-border rounded-xl p-4\">\n                            <div className=\"flex items-center justify-between\">\n                                <div className=\"text-sm text-muted-foreground font-medium\">\n                                    Showing {pagination.offset + 1} to {Math.min(pagination.offset + pagination.limit, pagination.total)} of {pagination.total} emails\n                                </div>\n                                <div className=\"flex items-center gap-2\">\n                                    {pagination.offset > 0 && (\n                                        <Link\n                                            href={{\n                                                pathname: '/mail',\n                                                query: {\n                                                    ...(searchQuery && { search: searchQuery }),\n                                                    ...(statusFilter !== 'all' && { status: statusFilter }),\n                                                    ...(domainFilter !== 'all' && { domain: domainFilter }),\n                                                    offset: Math.max(0, pagination.offset - pagination.limit).toString()\n                                                }\n                                            }}\n                                        >\n                                            <Button variant=\"secondary\" size=\"sm\" className=\"rounded-xl\">\n                                                Previous\n                                            </Button>\n                                        </Link>\n                                    )}\n                                    {pagination.hasMore && (\n                                        <Link\n                                            href={{\n                                                pathname: '/mail',\n                                                query: {\n                                                    ...(searchQuery && { search: searchQuery }),\n                                                    ...(statusFilter !== 'all' && { status: statusFilter }),\n                                                    ...(domainFilter !== 'all' && { domain: domainFilter }),\n                                                    offset: (pagination.offset + pagination.limit).toString()\n                                                }\n                                            }}\n                                        >\n                                            <Button variant=\"secondary\" size=\"sm\" className=\"rounded-xl\">\n                                                Next\n                                            </Button>\n                                        </Link>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n} "],"names":["name"],"mappings":"6RAAA,EAAA,EAAA,CAAA,CAAA,QAEA,EAAA,EAAA,CAAA,CAAA,QAEA,IAAM,EAAO,CAAA,EAAA,EAAA,UAAA,AAAe,EAG1B,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJW,AAIX,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,iCADS,uBAET,GAED,GAAG,CAAK,IAGb,EAAK,WAAW,CAAG,OAEnB,IAAM,EAAa,CAAA,EAAA,EAAA,UAAA,AAAe,EAGhC,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJiB,AAIjB,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAC,AAAD,EAAG,gCAAiC,CAApC,EACV,GAAG,CAAK,GAGb,GAAW,WAAW,CAAG,aAEzB,IAAM,EAAY,CAAA,EAAA,EAAA,UAAA,AAAe,EAG/B,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJgB,AAIhB,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,IAAK,EACL,UAAW,GAAA,EAAA,EAAC,AAAD,EAAG,iCAAH,WAAgD,GAC1D,GAAG,CAAK,IAGb,EAAU,WAAW,CAAG,YAExB,IAAM,EAAkB,CAAA,EAAA,EAAA,UAAA,AAAe,EAGrC,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAAA,AAJsB,EAItB,EAAA,GAAA,EAAC,MAAA,CACC,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EAAE,gCAAiC,CAApC,EACV,GAAG,CAAK,IAGb,EAAgB,WAAW,CAAG,kBAE9B,IAAM,EAAc,CAAA,EAAA,EAAA,UAAA,AAAe,EAGjC,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJkB,AAIlB,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,IAAK,EAAK,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EAAE,WAAY,GAAa,GAAG,CAAK,IAEhE,EAAY,SAFgB,EAEL,CAAG,cAE1B,IAAM,EAAa,CAAA,EAAA,EAAA,UAAA,AAAe,EAGhC,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJiB,AAIjB,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EAAE,6BAA8B,GAC3C,CADU,EACP,CAAK,IAGb,EAAW,WAAW,CAAG,uFCzEzB,IAAA,EAAuB,EAAA,CAAA,CAAA,EAAX,MAEZ,KAFuB,IAEd,EAAe,CAAA,EAAU,AAChC,IAAM,EAAA,CAAA,EAAA,EAAY,MAAA,EAAO,CAAE,QAAO,SAAU,CAAM,CAAC,EAKnD,MAAA,CAAA,EAAA,EAAa,OAAA,EAAQ,KACf,CADqB,CACjB,OAAA,CAAQ,KAAA,GAAU,IACxB,EAAI,CAD2B,MAC3B,CAAQ,QAAA,CAAW,EAAI,OAAA,CAAQ,KAAA,CACnC,EAAI,OAAA,CAAQ,KAAA,CAAQ,GAEf,EAAI,OAAA,CAAQ,QAAA,EAClB,CAAC,EAAM,CACZ,EADW,6FCNX,SAAS,AAAe,MAAC,EAAO,cAajB,AAb+B,eAAE,CAAa,CAAE,QAAQ,UAAU,CAAE,GAAG,EAAiB,EAGtG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAM,WACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,sPAAsP,KAAM,EAAM,YAAY,UAIxR,iGCXA,SAAqB,AAAZ,MAAa,EAAO,cAAc,AAa5B,eAb8B,CAAa,CAAE,QAAQ,UAAU,CAAE,GAAG,EAAiB,EAGnG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAM,WACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,uMAAuM,KAAM,QAIvN,iGCXA,SAAS,AAAW,MAAC,EAAO,cAcb,AAd2B,eAAE,CAAa,OAAE,EAAQ,UAAU,CAAE,GAAG,EAAiB,EAGlG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,KAAM,YACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,oPAAoP,KAAM,EAAe,SAAS,YAC1R,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,iRAAiR,KAAM,EAAM,SAAS,iBAIhT,kUCpBA,IAAA,EAAuB,EAAA,CAAA,CAAA,EAAX,MACZ,EAAgC,EAAA,CAAA,AADT,AACd,CAAuB,QAChC,EAAmC,EAAA,CAA1B,AAA0B,CAAA,QADH,AAEhC,EAAqC,EAAA,CAAA,AAA5B,CAA4B,QACrC,EAAqC,CAFF,CAEE,CAAA,AAA5B,CAA4B,QACrC,EAA4B,EAAA,CAAA,AAFS,AAE5B,CAAmB,QAC5B,EAAwB,EAAA,CAAf,AAAe,AAFa,CAEb,IADI,IAE5B,EAAyB,EAAA,CAAhB,AAAgB,CADD,AACC,QACzB,EAA0B,EAAA,CAAA,AAAjB,CAAiB,CADD,OAkGrB,EAAA,EAAA,CAAA,AAgIM,CAhIN,EAjGsB,MAIpB,CA6FF,CA7FkB,IA6NZ,OA1NJ,CAAC,EAAuB,EA0F1B,AA1F6C,CAAA,CAAA,EAAA,EAAI,WAAJ,OAAI,EAAmB,GAqBlE,CAAC,EAAsB,EAAkB,CAC7C,EAA4C,EAtBuC,CAwCrF,SAAS,CAnBsC,AACY,CAmBzD,CAAA,EACA,AACA,GAAM,iBACJ,CAAA,CACA,QAAS,CAAA,UACT,CAAA,gBACA,CAAA,CACA,UAAA,MACA,CAAA,MACA,CAAA,CACA,iBAAA,UACA,CAAA,CACA,QAAQ,IAAA,EAAA,mBAAA,OAER,CAAA,CACF,CAAI,EAEE,CAAC,EAAS,EAAU,CAAA,CAAA,EAAA,EAAI,EAAJ,kBAAI,EAAqB,CACjD,KAAM,EACN,YAAa,GAAkB,GAC/B,SAAU,EACV,OAAQ,CACV,CAAC,EACK,CAAC,EAAS,EAAU,CAAA,CAAA,EAAA,EAAU,EAAV,MAAU,EAAmC,IAAI,EACrE,CAAC,EAAa,EAAc,CAAA,CAAU,EAAA,EAAA,MAAV,EAAU,EAAkC,IAAI,EAC5E,EAAA,CAAA,EAAA,EAAyC,MAAA,GAAO,GAChD,EADqD,AACrC,IAClB,CAAC,CAAC,GAAQ,CAAC,CAAC,EAAQ,OAAA,CAAQ,MAAM,EAIhC,EAJgC,AAIO,SAC3C,WACA,aACA,UACA,EACA,aACA,YACA,QACA,GAZoC,gCAapC,WACA,EACA,gBAAgB,EAAgB,IAA0B,UAAZ,IAAI,EAClD,cACA,iBACA,CACF,EAEA,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACC,CADF,KACS,EACN,GAAI,CAAA,CAEJ,SAAA,AA8QmB,OAlRtB,KAkRK,OA9QS,AA8QF,EA9QgC,EAA2B,GAAW,CAAA,EAGtF,CAHkF,AASlF,IAAM,EAAe,SATuB,SAmBtC,EAAA,CAAA,EAAA,EAAwB,UAAA,EAC5B,CACE,iBAAE,CAAA,MAFwB,KAEP,CAAA,SAAW,CAAA,CAAS,GAAG,EAAc,CACxD,KAEA,GAAM,GAHkD,MAErD,AAED,CAAA,CACA,OAAA,UACA,CAAA,SACA,CAAA,CACA,UAAA,YACA,CAAA,CACA,YAAA,kCACA,CAAA,eACA,CAAA,aACA,CAAA,CACF,CAAI,EAAmB,EAAc,GAC/B,EAAA,CAAA,EAAA,EAAe,KAD+B,UAC/B,EAAgB,EAAc,GAE7C,EAA+B,CAAA,EAAA,EAFwB,AAExB,MAAA,EAAO,GAU5C,IAVmD,GAWjD,IAVI,SAUJ,AAVI,EAAU,KACd,CADoB,GACd,EAAO,GAAS,KACtB,GAAI,EAAM,CACR,IAAM,EAAQ,IAAM,EAAW,EAAuB,OAAO,EAE7D,OADA,EAAK,gBAAA,CAAiB,QAAS,GACxB,EAD6B,EACvB,EAAK,mBAAA,CAAoB,QAAS,EACjD,CACF,EAAG,AAFqD,CAEpD,EAAS,EAAW,EAGtB,CAAA,EAAA,EAAA,CAHqB,EAGrB,EAAA,EAAC,SAAA,CAAU,MAAA,CAAV,CACC,KAAK,OADP,EAEE,KAAK,WACL,eAAc,EAAgB,GAAW,IAAJ,IAAc,EACnD,gBAAe,EACf,aAAY,EAAS,GACrB,IAD4B,YACb,EAAW,GAAK,KAAA,WAC/B,QACA,EACC,GAAG,CAAA,CACJ,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,oBAAA,EAAqB,EAAW,AAAC,IAExB,MAFkC,EAEzB,EAAvB,EAAM,GAAA,EAAiB,EAAM,cAAA,CAAe,CAClD,CAAC,EACD,QAAA,CAAA,EAAA,EAAS,oBAAA,EAAqB,EAAS,AAAC,IACtC,EAAW,AAAC,IADoC,CACnB,EAAgB,IAAsB,CAAC,GAChE,GADoD,AACrC,IADyC,AAE1D,CAF8E,CAE7C,OAAA,CAAU,CADX,CACiB,oBAAA,CAAqB,EAMjE,AAAD,EAAkC,OAAA,CAAS,CAAA,EAAM,eAAA,CAAgB,EAEzE,CAAC,CAAA,EAGP,GAGF,EAAgB,WAAA,CAAc,EAe9B,IAAM,EAAA,CAAA,EAAA,EAAiB,UAAA,EACrB,CAAC,EAAmC,KAClC,GAAM,SAD6C,QAEjD,CAAA,MACA,CAAA,SACA,CAAA,gBACA,CAAA,UACA,CAAA,UACA,CAAA,OACA,CAAA,iBACA,CAAA,MACA,CAAA,CACA,GAAG,EACL,CAAI,EAEJ,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,EAAD,eACE,UACA,GAFF,cAGE,WACA,WACA,kBACA,OACA,EACA,aACA,EAEA,2BAA4B,CAAC,eAAE,CAAA,CAAc,GAC3C,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,CACE,SAAA,CAAA,CAAA,EAAA,EAAA,GAAA,CADF,CACG,EAAA,CACE,GAAG,CAFR,AAEQ,CACJ,IAAK,kBAEL,CAAA,CAJF,EAMC,GACC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,EAAD,aAAA,EAEE,CAAA,GACF,CAEJ,CAAA,EAIR,GAGF,EAAS,AAZK,WAYL,CAAc,EAMvB,IAAM,EAAiB,oBAYjB,EAAA,CAA0B,EAAA,EAAA,UAAA,EAC9B,CAAC,EAA4C,KAC3C,GAAM,SADsD,QACpD,CAAA,YAAiB,CAAA,CAAY,GAAG,EAAe,CAAI,EACrD,EAAU,EAAmB,EAAgB,GACnD,CAFuD,KAGrD,CAAA,EAAA,EAAA,CAFgE,EAEhE,EAAA,EAAC,EAAD,MAAC,CAAA,CACC,QAAS,GAAc,EAAgB,EAAQ,KADjD,EACwD,GAAK,CAAoB,MAAZ,OAAA,CAEnE,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,IAAA,CAAV,CACC,aAAY,CADd,CACuB,EAAQ,OAAO,EACpC,gBAAe,EAAQ,QAAA,CAAW,GAAK,KAAA,EACtC,GAAG,CAAA,CACJ,IAAK,EACL,MAAO,CAAE,cAAe,OAAQ,GAAG,EAAM,KAAM,AAAN,CAAM,EACjD,EAGN,GAGF,EAAkB,WAAA,CAAc,EAMhC,IAAM,EAAoB,sBAKpB,EAAA,CAAA,EAAA,EAA4B,UAAA,EAChC,CAAC,iBAAE,CAAA,CAAiB,GAAG,EAAM,CAA0C,GAA1C,EAC3B,GAAM,SADgF,AAEpF,CAAA,kCACA,CAAA,CACA,SAAA,gBACA,CAAA,UACA,CAAA,UACA,CAAA,MACA,CAAA,OACA,CAAA,MACA,CAAA,CACA,aAAA,CACA,gBAAA,CACF,CAAI,EAAmB,EAAmB,GAEpC,EAAA,CAAe,EAAA,EAAA,KAFoC,UAEpC,EAAgB,EAAc,GAC7C,EAAA,CAAA,EAAA,EAAc,IAD6C,OAC7C,EAAY,GAC1B,EAAc,CAAA,CADmB,CACnB,EAAA,OAAA,EAAQ,OAAO,CAG7B,SAAA,EAAU,KAEd,CAFoB,EAEhB,CAAC,EAAO,IAAA,GAOZ,IAAM,EAJa,AAIA,OAJO,wBAAA,CADP,AAEjB,OAFwB,gBAAA,CAAiB,SAAA,CAGzC,WAE4B,GAAA,CAExB,EAAU,CAAC,EAAiC,OAAA,CAClD,GAAI,IAAgB,GAAW,EAAY,CACzC,IAAM,EAAQ,IAAI,MAAM,QAAS,SAAE,CAAQ,CAAC,CAC5C,GAAM,aAAA,CAAgB,EAAgB,GACtC,EAAW,EADkC,EAClC,CAAK,EAAO,GAAgB,IAAmB,GAAZ,AAC9C,AAfY,EAeN,EAD4C,AAAe,WAC3D,CAAc,EACtB,CACF,EAAG,AAF0B,CAEzB,EAAa,EAAa,EAAS,EAAiC,EAExE,IAAM,EAAA,CAAA,EAAA,EAA0B,MAAA,GAAO,EAAgB,IAAmB,EAFH,CAGvE,AAD8D,IAAI,AAAe,EAE/E,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,KAAA,CAAV,CACC,KAAK,QADP,GAEE,eAAW,EACX,eAAgB,GAAkB,EAAkB,OAAA,UACpD,WACA,OACA,QACA,OACA,EACC,GAAG,CAAA,CACJ,SAAU,CAAA,EACV,IAAK,EACL,MAAO,CACL,GAAG,EAAM,KAAA,CACT,GAAG,CAAA,CACH,SAAU,WACV,cAAe,OACf,QAAS,EACT,OAAQ,EAIR,UAAW,mBACb,CAAA,EAGN,GAWF,SAAS,EAAgB,CAAA,EACvB,AAD2E,MACxD,kBAAZ,CACT,CAEA,SAAS,EAAS,CAAA,EAAuB,AACvC,OAAO,EAAgB,GAAW,IAAJ,YAAsB,EAAU,UAAY,WAC5E,CAdA,EAAoB,WAAA,CAAc,2FCpXlC,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAEA,EAAA,EAAA,CAAA,CAAA,QAEA,IAAM,EAAW,CAAA,EAAA,EAAA,UAAA,AAAe,EAG9B,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAAA,AAJe,EAIf,EAAA,GAAA,EAAC,EAAA,IAAsB,CAAA,CACrB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,MAHH,2BAEY,oOAET,GAED,GAAG,CAAK,UAET,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,SAA2B,CAAA,CAC1B,UAAW,CAAA,EAAA,EAAA,EAAC,AAAD,EAAG,OADf,0BACY,yBAEX,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAM,CAAA,CAAC,MAAM,KAAK,OAAO,UAAzB,EAIP,EAAS,WAAW,CAAG,EAAA,IAAsB,CAAC,WAAW,qBAAlC,2ECnBvB,SAAS,AAAY,MAAC,EAAO,cAad,AAb4B,eAAE,CAAa,OAAE,EAAQ,UAAU,CAAE,GAAG,EAAiB,EAGnG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAM,WACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,kUAAkU,KAAM,QAIlV,mICX4B,EAAA,CAAA,CAAA,QERrB,IAAM,EAAY,KAEnB,CAF+B,MAExB,EAAA,CAAI,CAAA,CAEf,OAAO,EAAA,CAAK,SAAS,GAAK,CAAA,EAAc,AACtC,CAAC,OAAO,GAAA,CAAM,OAAO,GAAA,EAAO,EAAC,EAAG,IAAA,CAAK,GACvC,CACF,EAF+C,AFHxC,SAAS,IACd,MAAyB,EADU,WAC5B,OAAO,MAChB,CAEA,SAAS,IASP,MAAO,UATkD,EAU3D,CAWO,SAAS,IAEd,MAF8B,AAEvB,CADM,IAAc,MAAJ,CAAW,GAAA,CAAM,GAAkB,GAC3C,YACjB,CAEO,SAAS,IACd,MAAO,AAAc,KADiB,GACvB,UACjB,CAEO,SAAS,IACd,MAAqB,MADkB,UAChC,GACT,CAsCO,IAvCU,KAuCD,EACd,CAAA,CACA,CAAA,EACe,AACf,GAAI,CAAC,GAAY,CAAC,EAChB,OAAO,EAGT,CAJ8B,GAI1B,EAAS,EACb,GAAI,CACF,IAAM,EAAU,OAAO,OAAA,CAAQ,GAE/B,IAAA,GAFyC,AAE9B,CAAC,EAAK,EAAK,GAAA,AAAK,EACzB,GAAI,CAAC,EAD6B,IACvB,OAAA,CAAQ,GAAQ,CACzB,CADsB,GAChB,EAAU,EAAkB,GAC9B,EADmC,AAC3B,IAAA,CAAK,KACf,CADqB,CACZ,EADe,AACR,OAAA,CAAQ,EAAS,CAAA,EAAA,EAAK,EAAG,CAAA,EAAG,CAEhD,CAGF,IAAA,GAAW,CAAC,EAAK,EAAK,GAAA,AAAK,EACzB,GAAI,GAD8B,GACxB,OAAA,CAAQ,GAAQ,CACxB,CADqB,GACf,EAAU,EAAkB,EAAM,IAAA,CAAK,GAAG,CAAC,EAC7C,EAAQ,IAAA,CAAK,KACf,CADqB,CACZ,EADe,AACR,OAAA,CAAQ,EAAS,CAAA,KAAA,EAAQ,EAAG,CAAA,EAAG,CAEnD,CAEF,OAAO,CACT,CAAA,MAAS,EAAG,CACV,OAAO,CACT,CACF,CAEA,SAAS,EAAkB,CAAA,EAAuB,AAChD,OAAO,AAAI,OAAO,CAAA,CAAA,EAAI,AAAa,AAI5B,EAAO,GAJ0B,CAAC,GAI3B,CAAQ,sBAAuB,MAAM,EAJV,WAAA,CAAa,CACxD,CGlFA,SAAS,EACP,EAII,CACF,OAAO,CACT,CAAA,EACM,IAvCR,EAwCE,GAAI,CAAC,IAAa,MAAH,EHtBV,AGsBa,AAElB,SHxBsB,AAAR,EAAqB,MAAA,EAAc,AACjD,GAAI,AAAS,WAAQ,CACnB,OAAO,GAAA,CAAM,IACb,MACF,CAEA,OAAO,AAJ0B,GAI1B,CAAM,CACf,EGiBU,EAAM,IAAI,EAElB,IAEI,EAAM,IAFA,MAEA,EAAY,CACpB,OAAA,EAAA,GAAA,IAAO,EAAA,GAAP,EAAA,IAAA,CAAA,OAAY,aAAc,EAAM,WAAA,EAGlC,IAAM,EHwEN,AAAI,EAAM,EGxEE,OHwEF,CACD,CADY,CACN,SAAA,CAEX,IACK,UADS,GAAG,sCAGjB,AG9EqB,EH8Ef,GG9EoB,KH8EpB,CACD,CADW,AACX,EAAG,EAAM,QAAQ,CAAA,mBAAA,CAAA,CAEnB,8BG/EP,GAAI,SAAS,IAAA,CAAK,aAAA,CAAc,CAAA,aAAA,EAAgB,EAAG,CAAA,CAAA,CAAI,EAAG,OAE1D,IAAM,EAAS,SAAS,aAAA,CAAc,QAAQ,EAC9C,EAAO,GAAA,CAAM,EACb,EAAO,KAAA,EAAQ,EACf,EAAO,OAAA,CAAQ,IAAA,CACb,AFzDM,OEyDN,cAAe,EAAM,SAAA,CAAY,CAAA,CAAA,EAAI,EAAM,SAAS,CAAA,CAAA,CAAK,EAAA,CAAA,CAC3D,EAAO,OAAA,CAAQ,IAAA,CFzDJ,EEyDW,MAElB,EAAM,gBAAA,EAAkB,CAC1B,EAAO,OAAA,CAAQ,gBAAA,CAAmB,GAAA,EAEhC,EAAM,QAAA,CACR,CADkB,CACX,OAAA,CAAQ,QAAA,CAAW,EAAM,QAAA,CACvB,EAAM,QAAA,EAAU,AACzB,GAAO,OAAA,CAAQ,QAAA,CAAW,CAAA,EAAG,EAAM,QAAQ,CAAA,UAAA,EAEzC,EAAM,GAAA,EAAK,CACb,EAAO,OAAA,CAAQ,GAAA,CAAM,EAAM,GAAA,EAG7B,EAAO,OAAA,CAAU,KACf,CAD2B,GACrB,EAAe,IACjB,UAD+B,mDAE/B,4IAGJ,QAAQ,GAAA,CACN,CAAA,kDAAA,EAAqD,EAAG,CAAA,CAAA,EAAK,EAAY,CAAA,CAE7E,EAEI,KAAmC,CAJsC,IAItD,EAAM,AAAiB,EAA5B,GAAW,GAC3B,EAAO,OAAA,CAAQ,KAAA,CAAQ,OAAA,EAGzB,SAAS,IAAA,CAAK,WAAA,CAAY,EAC5B,CAQA,GATkC,MASzB,EACPA,CAAAA,CACA,CAAA,CACA,CAAA,EAGM,AAvGR,IAAA,EAAA,EAwGE,GAAI,CAAC,IAAa,CAChB,IAAM,CADO,CAEX,gIAEF,GAAI,IAEF,QAAQ,CAFO,GAAG,AAEV,CAAK,GAAG,KAEhB,MAAM,AAAI,MAAM,GAAG,AAGrB,MACF,CAEA,GAAI,CAAC,EAAY,CACf,OAAA,EAAA,GAAA,IAAO,EAAA,GAAP,EAAA,IAAA,CAAA,OAAY,QAAS,CAAE,KAAAA,UAAM,CAAQ,GACrC,MACF,CAEA,GAAI,CACF,IAAM,EH7EH,AG6EW,SH7EF,AACd,CAAA,CACA,CAAA,EAG2D,AAC3D,GAAI,CAAC,EAAY,OACjB,AADwB,EAAP,EACb,CADoB,CACZ,EACN,EAA4B,CAAC,CAAA,CACnC,IAAA,GAAW,CAAC,EAAK,EAAK,GAAA,AAAK,OAAO,OAAA,CAAQ,GACnB,OAD6B,EAAG,CACjD,OAAO,GAAgC,MAAM,CAAhB,IAC3B,EAAQ,KAAA,CACV,CADiB,CACT,AAnBhB,SAAS,AACP,CAAA,CACA,CAAE,CAAC,EAAG,CAAG,AAAH,CAAG,CAAG,GAAG,EAAK,EACK,AACzB,CAFoB,MAEb,CACT,EAc0B,EAAK,GAEvB,EAF4B,AAEZ,IAAA,CAAK,GAAG,CAK9B,GAAI,EAAgB,MAAA,CAAS,GAAK,CAAC,EAAQ,KAAA,CACzC,CADgD,KAC1C,MACJ,CAAA,wCAAA,EAA2C,EAAgB,IAAA,CACzD,MACD,wDAAA,CAAA,EAGL,OAAO,CACT,EGkDkC,EAAY,CACxC,MAAO,GACT,CAAC,CAED,OAAA,CAHsB,AAGtB,EAAA,EAAA,KAAO,EAAA,GAAP,EAAA,IAAA,CAAA,OAAY,QAAS,CACnB,KAAAA,EACA,KAAM,UACN,CACF,EACF,CAAA,MAAS,EAAK,CACR,aAAe,OAAS,KAE1B,QAAQ,CAFgC,GAAG,CAEnC,CAAM,EAElB,CAFqB,AAGvB,CAEA,SAAS,EAAS,OAChB,CAAA,CACA,MAAA,CACF,EAGS,AAnJT,IAAA,CAoJE,OAAA,CAAA,EAAA,EAAA,KAAO,EAAA,GAAP,EAAA,IAAA,CAAA,OAAY,WAAY,OAAE,OAAO,CAAK,EACxC,CAMA,IAAO,EAAQ,QACb,EACA,qBACA,CACF,kHC5IO,IAAM,EAAsD,CAAC,MAClE,EAAO,EAAE,iBACT,EAAkB,SAAS,CAC3B,MAAI,MACJ,CAAI,WACJ,EAAY,EAAG,WACf,EAAY,OAAO,WACnB,EAAY,EAAE,CACf,IACC,IAAM,EAAW,EAAO,EAClB,EAAe,AAAO,KAAK,AAG3B,EAAkB,GAAP,EAAY,AAE7B,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,OAJuD,GAI5C,CAAC,IAP8D,oCAOtB,EAAE,EAAA,CAAW,CACjE,MAAO,CACL,MAAO,EACP,OAAQ,kBACR,eACA,EAEA,WAAY,CAAC,8EAA8E,EAAE,EAAA,CAAiB,CAE9G,UAAW,6BACb,WAEC,EAEC,CAAA,EAAA,EAAA,AADA,GACA,EAAC,EAAA,CACC,MAAO,EACP,OAAQ,EACR,MAAO,CACL,MAAO,EACP,GANuC,IAM/B,0CACV,IAEA,EAEF,CAAA,EAAA,EADA,AACA,GAAA,EAAC,OAAA,CACC,CAFY,KAEL,CACL,SAAU,EACV,WAAY,OACZ,MAAO,EACP,cAAe,YACf,cAAe,QACf,WAAY,2BACd,WAEC,EAAK,KAAK,CAAC,EAAG,KAEf,MAGV,IAEe,mWC7Ef,IAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAqBO,IAAM,EAAe,CACxB,IAAK,CAAC,KAAM,UAAU,CACtB,KAAM,AAAC,GAA+B,IAAI,EAAa,GAAG,CAAE,OAAQ,EAAO,CAC3E,OAAQ,AAAC,GAAqB,IAAI,EAAa,GAAG,CAAE,EAAS,CAC7D,aAAc,AAAC,GAAqB,IAAI,EAAa,GAAG,CAAE,EAAU,eAAe,CACnF,eAAgB,AAAC,GAAqB,IAAI,EAAa,GAAG,CAAE,EAAU,kBAAkB,AAC5F,EAGa,EAAyB,AAAD,GAC1B,CAAA,EAAA,EAAA,QAAA,AAAO,EAAsB,CAChC,SAAU,EAAa,IAAI,CAAC,GAC5B,OAFG,CAEM,UACL,IAAM,EAAe,IAAI,gBACrB,GAAQ,OAAO,EAAa,GAAG,CAAC,QAAS,EAAO,KAAK,CAAC,QAAQ,IAC9D,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,CAAC,QAAQ,IACjE,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,EACxD,GAAQ,YAAY,EAAa,GAAG,CAAC,aAAc,EAAO,UAAU,EACpE,GAAQ,OAAO,EAAa,GAAG,CAAC,QAAS,EAAO,KAAK,EAEzD,IAAM,EAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,EAAA,CAAc,EAC9D,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,IAAI,CACf,IADoB,GACZ,GACZ,CADgB,EAKP,EAA0B,AAAC,CALf,EAMd,CAAA,EAAA,EAAA,QAAA,AAAO,EAAyB,CACnC,SAAU,EAAa,MAAM,CAAC,GAC9B,KAFG,GAEM,UACL,IAAM,EAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,EAAA,CAAU,EAC1D,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,QAAS,CAAC,CAAC,EACX,UAAW,IAAI,CACf,IADoB,GACZ,GACZ,EADiB,CAKR,EAA+B,AAAC,EALnB,EAMtB,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAAE,CACf,WAAY,UACR,EAFD,EAEO,EAAW,MAAM,MAAM,CAAC,yCAAyC,CAAC,EACxE,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,gCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,KAEP,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,MAAM,CAAC,EAAU,EAC5E,CACJ,EACJ,EAGa,EAA4B,KACrC,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAAE,CACf,WAAY,MAAO,IACf,EAFD,EAEO,EAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,EAAA,CAAU,CAAE,CACxD,OAAQ,QACZ,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,2BAEnC,OAAO,EAAS,IAAI,EACxB,EACA,SAAU,MAAO,IACb,QAAQ,GAAG,CAAC,+CAAgD,GAG5D,MAAM,EAAY,aAAa,CAAC,CAAE,SAAU,EAAa,GAAG,AAAC,GAG7D,IAAM,EAA0E,EAAE,CAG5E,EAAU,EAAY,cAAc,CAAqB,CAAE,SAAU,EAAa,GAAG,AAAC,GAG5F,IAAK,GAAM,CAAC,EAAU,EAAU,GAFhC,QAAQ,GAAG,CAAC,WAAY,EAAQ,MAAM,CAAE,mCAEJ,GAEhC,GAAI,EAFqC,CAGrC,MAAM,OAAO,CAAC,EAAU,IAAI,GAC5B,AAA0B,iBAAnB,EAAU,IAAI,EACF,OAAnB,EAAU,IAAI,CAAW,CAEzB,QAAQ,GAAG,CAAC,wBAAyB,EAAU,IAAI,CAAC,MAAM,CAAE,uBAAwB,EAAU,IAAI,CAAC,UAAU,EAG7G,EAAoB,IAAI,CAAC,UAAE,EAAU,KAAM,CAAU,GAGrD,IAAM,EAAqC,CACvC,GAAG,CAAS,CACZ,KAAM,EAAU,IAAI,CAAC,MAAM,CAAC,GAAU,EAAO,EAAE,GAAK,GACpD,KAAM,CACF,GAAG,EAAU,IAAI,CACjB,WAAY,KAAK,GAAG,CAAC,CAAC,EAAU,IAAI,EAAE,aAAc,CAAC,CAAI,EAAG,EAChE,CACJ,EACA,EAAY,YAAY,CAAC,EAAU,GAEnC,QAAQ,GAAG,CAAC,+BAAgC,EAAe,IAAI,CAAC,MAAM,CAAE,cAAe,EAAe,IAAI,CAAC,UAAU,CACzH,MACI,CADG,OACK,IAAI,CAAC,kCAAmC,CAC5C,QAAS,CAAC,CAAC,EACX,cAAa,GAAY,MAAM,OAAO,CAAC,EAAU,IAAI,EACrD,EADyD,QAChD,GAAsC,UAA1B,OAAO,EAAU,IAAI,EAAoC,OAAnB,AAA0B,EAAhB,IAAI,AAC7E,GAOR,OAHA,QAAQ,GAAG,CAAC,yCAA0C,EAAoB,MAAM,CAAE,WAG3E,qBAAE,CAAoB,CACjC,EACA,QAAS,CAAC,EAAK,EAAU,KAIrB,GAHA,QAAQ,KAAK,CAAC,6DAA8D,EAAI,OAAO,EAGnF,GAAS,oBAAqB,CAE9B,IAAK,GAAM,UAAE,CAAQ,MAAE,CAAI,CAAE,GAD7B,QAAQ,GAAG,CAAC,kBAAmB,EAAQ,mBAAmB,CAAC,MAAM,CAAE,WAClC,EAAQ,mBAAmB,CAAE,CAC1D,EAAY,YAAY,CAAC,EAAU,GAEvC,QAAQ,GAAG,CAAC,sBAChB,CACJ,EACA,UAAW,CAAC,EAAG,KAEX,EAAY,aAAa,CAAC,CAAE,SAAU,EAAa,MAAM,CAAC,EAAU,GACpE,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,GAAI,AAAD,GAG1D,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,UAAU,AAAC,GACtD,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,cAAc,AAAC,EAC9D,CACJ,EACJ,EAGa,EAA+B,KACxC,IAAM,EAAc,GAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,GAAA,EAAA,QAFa,GAEb,AAAU,EAAgE,CAC7E,WAAY,MAAO,IACf,EAFD,EAEO,EAAW,MAAM,MAAM,0BAA2B,CACpD,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MADI,AACE,OADI,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,+BAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,AAAC,IAER,CAAA,EAAA,EAAA,KAAA,AAAI,EAAE,sBAAuB,CACzB,OADJ,CACa,EAAK,OAAO,CACrB,SAAU,EAAK,QAAQ,CACvB,eAAgB,EAAK,EAAE,AAC3B,GAGA,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,MAAM,CAAC,EAAK,QAAQ,CAAE,GAC7E,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,cAAc,CAAC,EAAK,QAAQ,CAAE,EACzF,CACJ,EACJ,EAGa,EAAkC,KAC3C,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAAuF,CACpG,WAAY,MAAO,MADhB,UACkB,CAAc,CAAE,IACjC,IAAM,EAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,EAAA,CAAgB,CAAE,CACtE,OAAQ,QACZ,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,kCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,CAAC,EAAG,UAAE,CAAQ,CAAE,IAEvB,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,MAAM,CAAC,EAAU,GACxE,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,cAAc,CAAC,EAAU,EACpF,CACJ,EACJ,EAGa,EAAmC,KAC5C,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAAiH,CAC9H,WAAY,MAAO,MADhB,UACkB,CAAc,UAAE,CAAQ,CAAE,GAAG,EAAM,IACpD,QAAQ,GAAG,CAAC,6BAA8B,CACtC,IAAK,CAAC,wBAAwB,EAAE,EAAA,CAAgB,CAChD,KAAM,CACV,GAEA,IAAM,EAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,EAAA,CAAgB,CAAE,CACtE,OAAQ,MACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,6BAEnC,IAAM,EAAS,MAAM,EAAS,IAAI,GAElC,OADA,QAAQ,GAAG,CAAC,sBAAuB,GAC5B,CACX,EACA,UAAW,CAAC,EAAG,CAAE,UAAQ,CAAE,IAEvB,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,MAAM,CAAC,EAAU,GACxE,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,cAAc,CAAC,EAAU,EACpF,CACJ,EACJ,EAGa,EAAoC,KAC7C,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAA2D,CACxE,WAAY,MAAO,CAAE,KADlB,KAC0B,CAAE,GAAG,EAAM,IACpC,IAAM,EAAW,MAAM,MAAM,CAAC,gBAAgB,EAAE,EAAA,CAAU,CAAE,CACxD,OAAQ,MACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,uCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,CAAC,EAAG,UAAE,CAAQ,mBAAE,CAAiB,oBAAE,CAAkB,CAAE,IAE9D,GAAA,EAAA,KAAA,AAAI,EAAE,EAAoB,oBAAsB,QAAhD,aAAsE,CAClE,SAAU,EACV,WAAY,GAAsB,IACtC,GAGA,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAa,MAAM,CAAC,EAAU,EAC5E,CACJ,EACJ,oDC1RC,EAAA,CAAA,CAAA,0fACM,IAAM,EAAa,EAeb,EAAa,SAgBb,EAAU,KAAK,EAgBf,CAhBkB,CAgBR,AAhBS,CAgBR,GAhBY,IAuBvB,CAvB4B,CAuBP,IAvBY,GA8BjC,EA9BsC,AA8BlB,KA9BuB,CAqC3C,EAAuB,IAOvB,EAAqB,KAOrB,EAAuB,IAOvB,EAAgB,OAOhB,EAAiB,MAOjB,EAAe,KAOf,EAAgB,GAOhB,EAAkB,EAOlB,EAAe,GAOf,EAAiB,EAOjB,EAAgB,KAOhB,EAAkB,GAOlB,EAAe,MAOf,EAAgB,OAOhB,CAd+B,CAcf,MAPe,IAc/B,EAAiB,GAPc,KAc/B,EAAmB,MAPc,EAoBjC,EAAsB,OAbc,AAaP,GAAG,CAAC,gHCvN9C,IAAA,EAAA,EAAA,CAAA,CAAA,QAqCO,SAAS,EAAc,CAAI,CAAE,CAAK,QACvC,AAAoB,YAAhB,AAA4B,OAArB,EAA4B,EAAK,GAExC,GAAwB,UAAhB,OAAO,GAAqB,EAAA,mBAAmB,IAAI,EACtD,CAAI,CAAC,EAAA,AAAZ,QADsC,WACP,CAAC,CAAC,GAE/B,aAAgB,AAFN,KAEmB,CAAP,GAAW,EAAK,WAAW,CAAC,GAE/C,IAAI,KAAK,EAClB,OAGe,gFCjDf,IAAM,EAAuB,CAC3B,iBAAkB,CAChB,IAAK,qBACL,MAAO,6BACT,EAEA,SAAU,CACR,IAAK,WACL,MAAO,mBACT,EAEA,YAAa,gBAEb,iBAAkB,CAChB,IAAK,qBACL,MAAO,6BACT,EAEA,SAAU,CACR,IAAK,WACL,MAAO,mBACT,EAEA,YAAa,CACX,IAAK,eACL,MAAO,uBACT,EAEA,OAAQ,CACN,IAAK,SACL,MAAO,iBACT,EAEA,MAAO,CACL,IAAK,QACL,MAAO,gBACT,EAEA,YAAa,CACX,IAAK,eACL,MAAO,uBACT,EAEA,OAAQ,CACN,IAAK,SACL,MAAO,iBACT,EAEA,aAAc,CACZ,IAAK,gBACL,MAAO,wBACT,EAEA,QAAS,CACP,IAAK,UACL,MAAO,kBACT,EAEA,YAAa,CACX,IAAK,eACL,MAAO,uBACT,EAEA,OAAQ,CACN,IAAK,SACL,MAAO,iBACT,EAEA,WAAY,CACV,IAAK,cACL,MAAO,sBACT,EAEA,aAAc,CACZ,IAAK,gBACL,MAAO,wBACT,CACF,EAEa,EAAiB,CAAC,EAAO,EAAO,KAG3C,IAFI,EAEE,EAAa,CAAoB,CAAC,EAAM,CAS9C,GAPE,EADwB,UAAU,AAAhC,OAAO,EACA,EACU,GAAG,CAAb,EACA,EAAW,GAAG,CAEd,EAAW,KAAK,CAAC,OAAO,CAAC,YAAa,EAAM,QAAQ,IAG3D,GAAS,UACX,CADsB,EAClB,EAAQ,UAAU,EAAI,EAAQ,UAAU,CAAG,EAC7C,CADgD,KACzC,MAAQ,OAEf,OAAO,EAAS,OAIpB,OAAO,CACT,mDCpGO,SAAS,EAAkB,CAAI,EACpC,OAAO,CAAC,EAAU,CAAC,CAAC,IAElB,IAAM,EAAQ,EAAQ,KAAK,CAAG,OAAO,EAAQ,KAAK,EAAI,EAAK,YAAY,CAEvE,OAAO,AADQ,EAAK,OAAO,CAAC,EAAM,EAAI,EAAK,OAAO,CAAC,EAAK,YAAY,CAAC,AAEvE,CACF,yGCPA,IAAA,EAAA,EAAA,CAAA,CAAA,QAuBO,IAAM,EAAa,CACxB,KAAM,CAAA,EAAA,EAAA,iBAAA,AAAgB,EAAE,CACtB,QAvBgB,CAClB,AAsBW,KAtBL,GAqBA,gBApBN,KAAM,aACN,OAAQ,WACR,MAAO,YACT,EAmBI,aAAc,MAChB,GAEA,KAAM,CAAA,EAAA,EAAA,iBAAgB,AAAhB,EAAkB,CACtB,QArBgB,CAClB,AAoBW,KApBL,GAmBA,cAlBN,KAAM,cACN,OAAQ,YACR,MAAO,QACT,EAiBI,aAAc,MAChB,GAEA,SAAU,CAAA,EAAA,EAAA,iBAAA,AAAgB,EAAE,CAC1B,QAnBoB,CAmBX,AAlBX,KAAM,GAiBI,sBAhBV,KAAM,yBACN,OAAQ,qBACR,MAAO,oBACT,EAeI,aAAc,MAChB,EACF,+ECtCA,IAAM,EAAuB,CAC3B,SAAU,qBACV,UAAW,mBACX,MAAO,eACP,SAAU,kBACV,SAAU,cACV,MAAO,GACT,EAEa,EAAiB,CAAC,EAAO,EAAO,EAAW,IACtD,CAAoB,CAAC,EAAM,kDC6BtB,SAAS,EAAgB,CAAI,EAClC,MAAO,CAAC,EAAO,SAGT,EACJ,GAAI,AAAY,gBAHA,GAAS,QAAU,OAAO,EAAQ,OAAO,EAAI,YAAA,GAG7B,EAAK,gBAAgB,CAAE,CACrD,IAAM,EAAe,EAAK,sBAAsB,EAAI,EAAK,YAAY,CAC/D,EAAQ,GAAS,MAAQ,OAAO,EAAQ,KAAK,EAAI,EAEvD,EACE,EAAK,gBAAgB,CAAC,EAAM,EAAI,EAAK,gBAAgB,CAAC,EAC1D,AADuE,KAChE,CACL,IAAM,EAAe,EAAK,YAAY,CAChC,EAAQ,GAAS,MAAQ,OAAO,EAAQ,KAAK,EAAI,EAAK,YAAY,CAExE,EAAc,EAAK,MAAM,CAAC,EAAM,EAAI,EAAK,MAAM,CAAC,EAAa,AAC/D,CAIA,OAAO,CAAW,CAHJ,AAGK,EAHA,gBAAgB,CAAG,EAAK,gBAAgB,CAAC,GAAS,EAG5C,AAC3B,CACF,CAxBC,EAAA,CAAA,CAAA,gGCrCD,IAAA,EAAA,EAAA,CAAA,CAAA,QA4JO,IAAM,EAAW,CACtB,cAzBoB,CAAC,EAAa,KAClC,IAAM,EAAS,OAAO,GAShB,EAAS,EAAS,IACxB,GAAI,EAAS,IAAM,EAAS,GAC1B,CAD8B,MACtB,EAAS,IACf,KAAK,EACH,OAAO,EAAS,IAClB,MAAK,EACH,OAAO,EAAS,IAClB,MAAK,EACH,OAAO,EAAS,IACpB,CAEF,OAAO,EAAS,IAClB,EAKE,IAAK,CAAA,EAAA,EAAA,eAAA,AAAc,EAAE,CACnB,OA9Jc,CAChB,AA6JU,OA7JF,CAAC,GA4JJ,CA5JS,IAAI,CAClB,YAAa,CAAC,KAAM,KAAK,CACzB,KAAM,CAAC,gBAAiB,cAAc,AACxC,EA2JI,aAAc,MAChB,GAEA,QAAS,CAAA,EAAA,EAAA,eAAA,AAAc,EAAE,CACvB,OA7JkB,CA6JV,AA5JV,OAAQ,CAAC,GA2JA,CA3JK,IAAK,IAAK,IAAI,CAC5B,YAAa,CAAC,KAAM,KAAM,KAAM,KAAK,CACrC,KAAM,CAAC,cAAe,cAAe,cAAe,cAAc,AACpE,EA0JI,aAAc,OACd,iBAAkB,AAAC,GAAY,EAAU,CAC3C,GAEA,MAAO,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,CACrB,OAzJgB,CAyJR,AAxJV,OAAQ,CAAC,GAuJF,CAvJO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CACpE,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACD,CAED,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,WAEJ,AADG,EA4HC,aAAc,MAChB,GAEA,IAAK,CAAA,EAAA,EAAA,eAAA,AAAc,EAAE,CACnB,OA7Hc,CAChB,AA4HU,OA5HF,CAAC,GA2HJ,CA3HS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CAC3C,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAK,CACjD,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,CAC9D,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,WACD,AACH,EAiHI,aAAc,MAChB,GAEA,UAAW,GAAA,EAAA,eAAA,AAAc,EAAE,CACzB,OAnHoB,CACtB,AAkHU,OAlHF,CACN,GAgHS,AAhHL,IACJ,GAAI,IACJ,SAAU,KACV,KAAM,IACN,QAAS,UACT,UAAW,YACX,QAAS,UACT,MAAO,OACT,EACA,YAAa,CACX,GAAI,KACJ,GAAI,KACJ,SAAU,WACV,KAAM,OACN,QAAS,UACT,UAAW,YACX,QAAS,UACT,MAAO,OACT,EACA,KAAM,CACJ,GAAI,OACJ,GAAI,OACJ,SAAU,WACV,KAAM,OACN,QAAS,UACT,UAAW,YACX,QAAS,UACT,MAAO,OACT,CACF,EAqFI,aAAc,OACd,iBApF8B,CAoFZ,AAnFpB,OAAQ,CACN,GAAI,IACJ,GAAI,IACJ,SAAU,KACV,KAAM,IACN,QAAS,iBACT,UAAW,mBACX,QAAS,iBACT,MAAO,UACT,EACA,YAAa,CACX,GAAI,KACJ,GAAI,KACJ,SAAU,WACV,KAAM,OACN,QAAS,iBACT,UAAW,mBACX,QAAS,iBACT,MAAO,UACT,EACA,KAAM,CACJ,GAAI,OACJ,GAAI,OACJ,SAAU,WACV,KAAM,OACN,QAAS,iBACT,UAAW,mBACX,QAAS,iBACT,MAAO,UACT,CACF,EAsDI,uBAAwB,MAC1B,EACF,mDC1LO,SAAS,EAAa,CAAI,EAC/B,MAAO,CAAC,EAAQ,EAAU,CAAC,CAAC,IAC1B,IAqBI,EArBE,EAAQ,EAAQ,KAAK,CAErB,EACH,GAAS,EAAK,aAAa,CAAC,EAAM,EACnC,EAAK,aAAa,CAAC,EAAK,iBAAiB,CAAC,CACtC,EAAc,EAAO,KAAK,CAAC,GAEjC,GAAI,CAAC,EACH,OAAO,IADS,CAGlB,IAAM,EAAgB,CAAW,CAAC,EAAE,CAE9B,EACH,GAAS,EAAK,aAAa,CAAC,EAAM,EACnC,EAAK,aAAa,CAAC,EAAK,iBAAiB,CAAC,CAEtC,EAAM,MAAM,OAAO,CAAC,GA+B9B,AA9BQ,SA8BC,AAAU,CAAK,CAAE,CAAS,EACjC,IAAK,IAAI,EAAM,EAAG,EAAM,EAAM,MAAM,CAAE,IACpC,EAD2C,CACvC,EAAU,CAAK,CAAC,EAAI,EACtB,CADyB,MAClB,CAIb,EArCkB,EAAe,AAAC,GAAY,EAAQ,IAAI,CAAC,IAEnD,AAgBR,SAAS,AAAQ,CAAM,CAAE,CAAS,EAChC,IAAK,IAAM,KAAO,EAChB,GACE,EAFsB,KAEf,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAQ,IAC7C,EAAU,CAAM,CAAC,EAAI,EAErB,CADA,MACO,CAIb,EA1BgB,EAAe,AAAC,GAAY,EAAQ,IAAI,CAAC,IAYrD,OARA,EAAQ,EAAK,aAAa,CAAG,EAAK,aAAa,CAAC,GAAO,EAQhD,CAAE,MAPT,EAAQ,EAAQ,aAAa,CAEzB,EAAQ,aAAa,CAAC,GACtB,EAIY,KAFH,EAAO,KAAK,CAAC,EAAc,MAAM,CAEzB,CACvB,CACF,2ECnCO,SAAS,EAAoB,CAAI,EACtC,MAAO,CAAC,EAAQ,EAAU,CAAC,CAAC,IAC1B,IAAM,EAAc,EAAO,KAAK,CAAC,EAAK,YAAY,EAClD,GAAI,CAAC,EAAa,OAAO,KACzB,IAAM,EAAgB,CAAW,CAAC,EAAE,CAE9B,EAAc,EAAO,KAAK,CAAC,EAAK,YAAY,EAClD,GAAI,CAAC,EAAa,OAAO,KACzB,IAAI,EAAQ,EAAK,aAAa,CAC1B,EAAK,aAAa,CAAC,CAAW,CAAC,EAAE,EACjC,CAAW,CAAC,EAAE,CAOlB,OAAO,AAAE,MAJT,EAAQ,EAAQ,aAAa,CAAG,EAAQ,aAAa,CAAC,GAAS,EAI/C,KAFH,EAAO,KAAK,CAAC,EAAc,MAAM,EAGhD,CACF,qGCnBA,IAAA,EAAA,EAAA,CAAA,CAAA,QAyFO,IAAM,EAAQ,CACnB,cAAe,GAzFjB,AAyFiB,EAzFjB,CAAA,CAAA,QAyFiB,mBAAA,AAAkB,EAAE,CACjC,KADa,QAvFiB,CAwFhB,uBACd,aAxF8B,CAwFhB,MACd,cAAe,AAAC,GAAU,SAAS,EAAO,GAC5C,GAEA,IAAK,CAAA,EAAA,EAAA,YAAA,AAAW,EAAE,CAChB,cA3FqB,CA2FN,AA1FjB,OAyFK,AAzFG,UACR,YAAa,6DACb,KAAM,4DACR,EAwFI,kBAAmB,OACnB,cAxFqB,CACvB,AAuFiB,IAvFZ,CAAC,MAAO,UAAU,AACzB,EAuFI,kBAAmB,KACrB,GAEA,QAAS,CAAA,EAAA,EAAA,YAAA,AAAW,EAAE,CACpB,cAzFyB,CAC3B,AAwFiB,OAxFT,AAuFC,WAtFT,YAAa,YACb,KAAM,gCACR,EAsFI,kBAAmB,OACnB,cAtFyB,CAC3B,AAqFiB,IArFZ,CAAC,KAAM,KAAM,KAAM,KAAK,AAC/B,EAqFI,kBAAmB,MACnB,cAAe,AAAC,GAAU,EAAQ,CACpC,GAEA,MAAO,CAAA,EAAA,EAAA,YAAA,AAAW,EAAE,CAClB,cAxFuB,CAwFR,AAvFjB,OAsFO,AAtFC,eACR,YAAa,sDACb,KAAM,2FACR,EAqFI,kBAAmB,OACnB,cArFuB,CACzB,AAoFiB,OApFT,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACD,CAED,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,MACD,AACH,EAwDI,kBAAmB,KACrB,GAEA,IAAK,CAAA,EAAA,EAAA,YAAA,AAAW,EAAE,CAChB,cA1DqB,CACvB,AAyDiB,OAzDT,AAwDH,YAvDL,MAAO,2BACP,YAAa,kCACb,KAAM,8DACR,EAsDI,kBAAmB,OACnB,cAtDqB,CACvB,AAqDiB,OArDT,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAM,CACzD,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAO,AAC5D,EAoDI,kBAAmB,KACrB,GAEA,UAAW,GAAA,EAAA,YAAA,AAAW,EAAE,CACtB,cAtD2B,CAsDZ,AArDjB,OAAQ,AAoDG,6DAnDX,IAAK,gFACP,EAoDI,kBAAmB,MACnB,cApD2B,CAoDZ,AAnDjB,IAAK,CACH,GAAI,MACJ,GAAI,MACJ,SAAU,OACV,KAAM,OACN,QAAS,WACT,UAAW,aACX,QAAS,WACT,MAAO,QACT,CACF,EA0CI,kBAAmB,KACrB,EACF,oFCnIA,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OAUO,IAAM,EAAO,CAClB,KAAM,QACN,eAAgB,EAAA,cAAc,CAC9B,WAAY,EAAA,SADI,CACM,CACtB,eAAgB,EAAA,SADJ,KACkB,CAC9B,SAAU,EAAA,QAAQ,CAClB,CAFgB,KAET,EAAA,KAAK,CACZ,QAAS,CACP,KAHQ,QAGM,EAAE,AAChB,MAHK,IAEqB,YACH,CACzB,CACF,IAGe,6MC5Bf,IAAI,EAAiB,CAAC,EAEf,SAAS,IACd,OAAO,CACT,CAEO,SAAS,EAAkB,CAAU,EAC1C,EAAiB,CACnB,sFCRA,IAAA,EAAA,EAAA,CAAA,CAAA,QAwCO,SAAS,EAAO,CAAQ,CAAE,CAAO,EAEtC,MAAO,GAAA,EAAA,aAAA,AAAY,EAAE,GAAW,EAAU,EAC5C,OAGe,QAJN,wFC1CT,IAAA,EAAA,EAAA,CAAA,CAAA,QAaO,SAAS,EAAgC,CAAI,EAClD,IAAM,EAAQ,CAAA,EAAA,EAAA,MAAA,AAAK,EAAE,GACf,EAAU,IAAI,KAClB,KAAK,GAAG,CACN,EAAM,IAHI,OAGO,GACjB,EAAM,QAAQ,GACd,EAAM,OAAO,GACb,EAAM,QAAQ,GACd,EAAM,UAAU,GAChB,EAAM,UAAU,GAChB,EAAM,eAAe,KAIzB,OADA,EAAQ,cAAc,CAAC,EAAM,WAAW,IACjC,AAAC,EAAQ,CAClB,IADiB,0EC3BjB,IAAA,EAAA,EAAA,CAAA,CAAA,QAEO,SAAS,EAAe,CAAO,CAAE,GAAG,CAAK,EAC9C,IAAM,EAAY,EAAA,aAAa,CAAC,IAAI,CAClC,KACA,GAAW,EAAM,IAAI,CAAE,AAAD,GAA0B,AAFhC,UAEgB,OAAO,IAEzC,OAAO,EAAM,GAAG,CAAC,EACnB,2FCRA,IAAA,EAAA,EAAA,CAAA,CAAA,QA8BO,SAAS,EAAa,CAAI,EAC/B,MAAO,CAAA,EAAA,EAAA,aAAA,AAAY,EAAE,EAAM,KAAK,GAAG,GACrC,OAGe,EAJN,wFC/BT,IAAA,EAAA,EAAA,CAAA,CAAA,QAkCO,SAAS,EAAW,CAAQ,CAAE,CAAS,EAC5C,IAAM,EAAO,AAAC,GAAA,EAAA,MAAA,AAAK,EAAE,GAAa,CAAA,EAAA,EAAA,IAAD,EAAC,AAAK,EAAE,UAEzC,AAAI,EAAO,CAFG,CAEO,CAAP,AAAQ,EACb,EAAO,EAAU,CAAP,CAGZ,CACT,KAPoC,EAUrB,yGC7Cf,IAAA,EAAA,EAAA,CAAA,CAAA,QA4BO,SAAS,EAA2B,CAAS,CAAE,CAAW,CAAE,CAAO,EACxE,GAAM,CAAC,EAAY,EAAa,CAAG,CAAA,EAAA,EAAA,cAAA,AAAa,EAC9C,GAAS,GACT,EACA,GAMF,OAAO,AAAY,GATgB,CAMjB,CAGM,CAHK,WAAW,GAAK,EAAa,WAAW,EAAA,EAClD,GAAW,QAAQ,GAAK,EAAa,QAAQ,EAAA,CAGlE,OAGe,wFC1Cf,IAAA,EAAA,EAAA,CAAA,CAAA,QA4BO,SAAS,EAAS,CAAI,CAAE,CAAO,EACpC,IAAM,EAAQ,CAAA,EAAA,EAAA,MAAA,AAAK,EAAE,EAAM,GAAS,IAEpC,OADA,EAAM,QAAQ,CAAC,EADD,CACK,GAAI,GAAI,KACpB,CACT,OAGe,0FCnCf,IAAA,EAAA,EAAA,CAAA,CAAA,QA4BO,SAAS,EAAW,CAAI,CAAE,CAAO,EACtC,IAAM,EAAQ,GAAA,EAAA,MAAK,AAAL,EAAO,EAAM,GAAS,IAC9B,EAAQ,EAAM,QAAQ,GAG5B,KAJc,EAEd,EAAM,WAAW,CAAC,EAAM,WAAW,GAAI,EAAQ,EAAG,GAClD,EAAM,QAAQ,CAAC,GAAI,GAAI,GAAI,KACpB,CACT,OAGe,gGCrCf,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAoBO,SAAS,EAAiB,CAAI,CAAE,CAAO,EAC5C,IAAM,EAAQ,CAAA,EAAA,EAAA,MAAA,AAAK,EAAE,EAAM,GAAS,IACpC,MAAO,CAAC,GAAA,EAAA,QADM,AACN,AAAO,EAAE,EAAO,IAAa,CAAC,CAAA,EAAA,EAAA,UAAA,AAAS,EAAE,EAAO,CAAhD,CACV,OAGe,cAJyB,oFCxBxC,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QAsBO,SAAS,EAAmB,CAAS,CAAE,CAAW,CAAE,CAAO,EAChE,GAAM,CAAC,EAAY,EAAkB,EAAa,CAAG,CAAA,EAAA,EAAA,cAAA,AAAa,EAChE,GAAS,GACT,EACA,EACA,GAGI,EAAO,CAAA,EAAA,EAAA,CAPwC,SAO/B,AAAT,EAAW,EAAkB,GACpC,EAAa,KAAK,GAAG,CACzB,CAAA,EAAA,EAAA,IAFW,sBAEX,AAAyB,EAAE,EAAkB,IAG/C,EAHE,CAGE,EAAa,EAAG,OAAO,EAES,IAAhC,EAAiB,QAAQ,IAAY,EAAiB,OAAO,GAAK,IACpE,EAAiB,OAAO,CAAC,IAE3B,EAAiB,QAAQ,CAAC,EAAiB,QAAQ,GAAK,EAAO,GAE/D,IAAI,EAAqB,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAkB,KAAkB,CAAC,CAGvE,EAAA,EAAA,EAAA,UAHuB,MAGvB,AAAe,EAAE,IACF,IAAf,GACyC,GACzC,CADA,CAAA,EAAA,CAFA,CAEA,UAAA,AAAS,EAAE,EAAY,KAEvB,GAAqB,CAAA,EAGvB,IAAM,EAAS,GAAQ,EAAc,CAAA,AALnC,CAKoB,AAAiC,CACvD,OAAkB,CADkB,GAC7B,EAAe,EAAI,CAC5B,OAGe,mDC5DR,SAAS,EAAkB,CAAM,EACtC,OAAO,AAAC,IAEN,IAAM,EAAS,CADD,EAAS,IAAI,CAAC,EAAO,CAAG,KAAK,KAAA,AAAK,EAC3B,GAErB,OAAkB,IAAX,EAAe,EAAI,CAC5B,CACF,qICPA,IAAA,EAAA,EAAA,CAAA,CAAA,QAwBO,SAAS,EAAyB,CAAS,CAAE,CAAW,EAC7D,MAAO,AAAC,CAAA,EAAA,EAAA,MAAA,AAAK,EAAE,GAAc,CAAA,EAAA,EAAA,KAAD,CAAC,AAAK,EAAE,EACtC,OAGe,IAJL,gBAAqB,+ECzB/B,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QA6BO,SAAS,EAAoB,CAAS,CAAE,CAAW,CAAE,CAAO,EACjE,IAAM,EAAO,GAAA,EAAA,wBAAA,AAAuB,EAAE,EAAW,GAAe,IAChE,EADa,IACN,CAAA,EAAA,EAAA,iBAAA,AAAgB,EAAE,GAAS,eAA3B,CAA2C,EACpD,OAGe,8FCpCf,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAoFO,SAAS,EAAe,CAAS,CAAE,CAAW,CAAE,CAAO,EAC5D,IAwBI,EAxBE,EAAiB,CAAA,EAAA,EAAA,iBAAgB,AAAhB,IACjB,EAAS,GAAS,QAAU,EAAe,CAD1B,KACgC,EAAI,EAAA,aAAa,CAGlE,EAAa,CAAA,EAAA,EAAA,UAAA,AAAS,EAAE,EAAW,EAHkB,CAK3D,GAAI,MAAM,GAAa,MAAM,AAAI,EAFd,SAEyB,sBAE5C,IAAM,EAAkB,OAAO,MAAM,CAAC,CAAC,EAAG,EAAS,CACjD,UAAW,GAAS,UACpB,WAAY,CACd,GAEM,CAAC,EAAY,EAAa,CAAG,GAAA,EAAA,cAAA,AAAa,EAC9C,GAAS,MACL,EAAa,EAAI,CAAC,EAAa,EAAU,CAAG,CAAC,CAFhB,CAE2B,EAAY,EAGpE,EAAU,CAAA,EAAA,EAAA,mBAAA,AAAkB,EAAE,EAAc,GAK5C,EAAU,KAAK,IALL,CAKU,CAAC,AAAC,GAH1B,CAAC,CAAA,EAAA,EAAA,CAGmC,8BAHnC,AAA8B,EAAE,GAC/B,CAAA,AADD,EACC,EAAA,+BAAA,AAA8B,EAAE,EAAA,CAAW,CAA3C,AACF,GACoC,CAAe,CAAI,IAIzD,GAAI,EAAU,EACZ,CADe,EACX,GAAS,eACX,CAD2B,EACvB,EAAU,EACZ,CADe,MACR,EAAO,cAAc,CAAC,mBAAoB,EAAG,QAC/C,GAAI,EAAU,GACnB,CADuB,MAChB,EAAO,cAAc,CAAC,mBAAoB,GAAI,QAChD,GAAI,EAAU,GACnB,CADuB,MAChB,EAAO,cAAc,CAAC,mBAAoB,GAAI,QAChD,GAAI,EAAU,GACnB,CADuB,MAChB,EAAO,cAAc,CAAC,cAAe,EAAG,QAC1C,GAAI,EAAU,GACnB,CADuB,MAChB,EAAO,cAAc,CAAC,mBAAoB,EAAG,QAEpD,OAAO,EAAO,cAAc,CAAC,WAAY,EAAG,QAG9C,GAAgB,AAAZ,GAAe,GACjB,OAAO,EAAO,cAAc,CAAC,mBAAoB,EAAG,QAEpD,OAAO,EAAO,cAAc,CAAC,WAAY,EAAS,GAKjD,GAAI,EAAU,GACnB,CADuB,MAChB,EAAO,cAAc,CAAC,WAAY,EAAS,GAG7C,GAAI,EAAU,GACnB,CADuB,MAChB,EAAO,cAAc,CAAC,cAAe,EAAG,GAG1C,GAAI,EAAU,EAAA,YAAY,CAAE,CACjC,IAAM,EAAQ,KAAK,KAAK,CAAC,EAAU,IADhB,AAEnB,OAAO,EAAO,cAAc,CAAC,cAAe,EAAO,EAGrD,CAAO,GAAI,EA9DoB,KA+D7B,GADmB,IACZ,EAAO,cAAc,CAAC,GADc,KACL,EAAG,QAGpC,GAAI,EAAU,EAAA,cAAc,CAAE,CACnC,IAAM,EAAO,KAAK,KAAK,CAAC,EAAU,EADf,AACe,YAAY,EAC9C,OAAO,EAAO,cAAc,AADM,CACL,QAAS,EAAM,EAG9C,MAAO,GAAI,EAA2B,EAAjB,CAAoB,CAApB,cAAc,CAEjC,OADA,EAAS,KAAK,KAAK,CAAC,EADD,AACW,EAAA,cAAc,EACrC,EAAO,cAAc,CAAC,IADC,WACe,EAAQ,GAMvD,GAAI,CAHJ,EAAS,CAAA,EAAA,EAAA,kBAAA,AAAiB,EAAE,EAAc,EAAA,EAG7B,GAAI,CACf,IAAM,EAAe,CAJd,IAImB,KAAK,CAAC,EAAU,EAAA,cAAc,EACxD,OAAO,EAAO,YAD4B,EACd,CAAC,UAAW,EAAc,EAGxD,CAAO,CACL,IAAM,EAAyB,EAAS,GAClC,EAAQ,KAAK,KAAK,CAAC,EAAS,WAG9B,AAAJ,EAA6B,EACpB,CADuB,CAChB,cAAc,CAAC,cAAe,EAAO,GAG1C,EAAyB,EAC3B,CAD8B,CACvB,cAAc,CAAC,aAAc,EAAO,GAI3C,EAAO,cAAc,CAAC,eAAgB,EAAQ,EAAG,EAE5D,CACF,OAGe,mGCtMf,IAAA,EAAA,EAAA,CAAA,CAAA,QAEA,EAAA,EAAA,CAAA,CAAA,QAuFO,SAAS,EAAoB,CAAI,CAAE,CAAO,EAC/C,MAAO,CAAA,EAAA,EAAA,cAAA,AAAa,EAAE,EAAM,CAAA,EAAA,EAAA,YAAW,AAAX,EAAa,AAAlC,GAAyC,EAClD,OAGe,WAJe,sFClF9B,SAAS,AAAM,MAAC,EAAO,cAAc,AAatB,eAbwB,CAAa,OAAE,EAAQ,UAAU,CAAE,GAAG,EAAiB,EAG7F,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAM,WACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,uSAAuS,KAAM,EAAM,YAAY,UAIzU,mDCnB4I,EAAA,CAAA,CAAA,yBAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAA6B,CAAA,EAAA,EAAA,WAAb,UAAa,AAAoB,CAAtB,CAAwB,cAAtB,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAC,AAAnC,oBAAkB,2ECEjZ,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QA2EO,IAAM,EAAgB,AAAC,GACrB,CAAA,EAAA,EAAA,QAAA,AAAO,EAAE,CACd,SAAU,CAAC,QAAS,EAAQ,CAC5B,KAFK,GAEI,UACP,GAAI,CAAC,EACH,MAAM,AAAI,CADE,KACI,wBAGlB,IAAM,EAAS,MAAM,CAAA,EAAA,EAAA,eAAA,AAAc,EAAE,GAErC,GAAI,EAAO,KAAK,CACd,CADgB,KACN,AAHS,AAGb,MAAU,EAAO,KAAK,EAG9B,OAAO,EAAO,IAAI,AACpB,EACA,QAAS,CAAC,CAAC,EACX,UAAW,IAAI,AACf,KADoB,EACZ,IACR,CADa,KAAK,AACX,CAAC,EAAc,IAEE,AAAtB,mBAAyC,CAArC,EAAM,OAAO,EAGV,EAAe,CAE1B,oDCxG0I,EAAA,CAAA,CAAA,yBAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAA6B,CAAA,EAAA,EAAA,WAAb,UAAa,AAAoB,CAAtB,CAAwB,cAAtB,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAlC,AAAmC,oBAAjB,uFCEjZ,IAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OAEO,IAAM,EAA6B,KACxC,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAAE,CACjB,WAAY,MAAO,IACjB,EAFG,EAEG,EAAS,MAAM,CAAA,EAAA,EAAA,eAAA,AAAc,EAAE,GAErC,GAAI,EAAO,KAAK,CACd,CADgB,KACV,AAAI,AAHS,MAGH,EAAO,KAAK,EAG9B,OAAO,EAAO,IAAI,AACpB,EACA,UAAW,CAAC,EAAM,KAEhB,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,QAAS,EAAQ,AAAC,GAG7D,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,YAAY,AAAC,GACxD,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,SAAS,AAAC,EAIvD,EAEA,SAAU,MAAO,IAEf,MAAM,EAAY,aAAa,CAAC,CAAE,SAAU,CAAC,QAAS,EAAQ,AAAC,GAG/D,IAAM,EAAgB,EAAY,YAAY,CAAC,CAAC,QAAS,EAAQ,EAajE,OAVA,EAAY,YAAY,CAAC,CAAC,QAAS,EAAQ,CAAE,AAAC,GAC5C,AAAK,EACE,CACL,CAFE,CAAM,CAEL,CAAG,CACN,QAAQ,EACR,OAAQ,IAAI,IACd,EALiB,GASZ,eAAE,CAAc,CACzB,EACA,QAAS,CAAC,EAAK,EAAS,KAElB,GAAS,eAAe,AAC1B,EAAY,YAAY,CAAC,CAAC,QAAS,EAAQ,CAAE,EAAQ,aAAa,EAEpE,QAAQ,KAAK,CAAC,gCAAiC,GAC/C,EAAA,KAAK,CAAC,KAAK,CAAC,wBAAZ,OACF,EACA,UAAW,CAAC,EAAM,EAAO,KAEvB,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,QAAS,EAAQ,AAAC,EAC/D,CACF,EACF,oQChEA,IAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QAeO,IAAM,EAAuB,CAChC,IAAK,CAAC,KAAM,kBAAkB,CAC9B,MAAO,IAAM,IAAI,EAAqB,GAAG,CAAE,OAAO,CAClD,KAAO,AAAD,GAAuC,IAAI,EAAqB,KAAK,GAAI,EAAO,CACtF,QAAS,IAAM,IAAI,EAAqB,GAAG,CAAE,SAAS,CACtD,OAAQ,AAAC,GAA2B,IAAI,EAAqB,OAAO,GAAI,EAAe,AAC3F,EAGa,EAA2B,AAAC,GAC9B,CAAA,EAAA,EAAA,QAAA,AAAO,EAA6B,CACvC,SAAU,EAAqB,IAAI,CAAC,GACpC,OAFG,CAEM,UACL,IAAM,EAAe,IAAI,gBACrB,GAAQ,OAAO,EAAa,GAAG,CAAC,QAAS,EAAO,KAAK,CAAC,QAAQ,IAC9D,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,CAAC,QAAQ,IACjE,GAAQ,UAAU,EAAa,GAAG,CAAC,WAAY,EAAO,QAAQ,EAC9D,GAAQ,UAAU,EAAa,GAAG,CAAC,WAAY,EAAO,QAAQ,EAC9D,GAAQ,yBAAyB,EAAa,GAAG,CAAC,0BAA2B,EAAO,uBAAuB,EAE/G,IAAM,EAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,EAAA,CAAc,EACtE,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,IAAI,CACf,IADoB,GACZ,GACZ,CADgB,EAKP,EAAyB,AAAC,CALd,EAMd,CAAA,EAAA,EAAA,QAAA,AAAO,EAA+B,CACzC,SAAU,EAAqB,MAAM,CAAC,GACtC,KAFG,GAEM,UACL,IAAM,EAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,EAAA,CAAgB,EACxE,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,QAAS,CAAC,CAAC,EACX,UAAW,IAAI,CACf,IADoB,GACZ,GACZ,EADiB,CAKR,EAAkC,EALrB,GAMtB,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAAgE,CAC7E,WAAY,MAAO,IACf,EAFD,EAEO,EAAW,MAAM,MAAM,0BAA2B,CACpD,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,kCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,AAAC,IAER,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAqB,KAAK,EAAG,GAEvE,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,KAAM,UAAU,AAAC,EAChE,CACJ,EACJ,EAGa,EAAkC,KAC3C,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEH,AAAV,EAAyG,CAC5G,WAAY,MAAO,MADhB,UACkB,CAAc,CAAE,GAAG,EAAM,IAC1C,IAAM,EAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,EAAA,CAAgB,CAAE,CACtE,OAAQ,MACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,kCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,CAAC,EAAM,gBAAE,CAAc,CAAE,IAEhC,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAqB,MAAM,CAAC,EAAgB,GACtF,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAqB,KAAK,EAAG,GAEvE,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,KAAM,UAAU,AAAC,EAChE,CACJ,EACJ,EAGa,EAAkC,KAC3C,IAAM,EAAc,CAAA,EAAA,EAAA,cAAa,AAAb,IAEpB,MAAO,GAAA,EAAA,QAFa,GAEb,AAAU,EAAiD,CAC9D,WAAY,MAAO,IACf,EAFD,EAEO,EAAW,MAAM,MAAM,CAAC,wBAAwB,EAAE,EAAA,CAAgB,CAAE,CACtE,OAAQ,QACZ,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MADI,AACE,OADI,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,kCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,CAAC,EAAG,KAEX,EAAY,aAAa,CAAC,CAAE,SAAU,EAAqB,MAAM,CAAC,EAAgB,GAClF,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAqB,KAAK,EAAG,GAEvE,EAAY,iBAAiB,CAAC,CAAE,SAAU,CAAC,KAAM,UAAU,AAAC,EAChE,CACJ,EACJ,gYCjJA,IAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QAuBO,IAAM,EAAa,CACtB,IAAK,CAAC,KAAM,OAAO,CACnB,MAAO,IAAM,IAAI,EAAW,GAAG,CAAE,OAAO,CACxC,KAAM,AAAC,GAA4B,IAAI,EAAW,KAAK,GAAI,EAAO,CAClE,QAAS,IAAM,IAAI,EAAW,GAAG,CAAE,SAAS,CAC5C,OAAQ,AAAC,GAAoB,IAAI,EAAW,OAAO,GAAI,EAAQ,CAC/D,eAAgB,IAAM,CAAC,KAAM,SAAS,CACtC,cAAe,AAAC,GAAoB,IAAI,EAAW,cAAc,GAAI,EAAQ,AACjF,EAGa,EAAiB,AAAC,GACpB,CAAA,EAAA,EAAA,QAAO,AAAP,EAA0B,CAC7B,SAAU,EAAW,IAAI,CAAC,GAC1B,OAFG,CAEM,UACL,IAAM,EAAe,IAAI,gBACrB,GAAQ,OAAO,EAAa,GAAG,CAAC,QAAS,EAAO,KAAK,CAAC,QAAQ,IAC9D,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,CAAC,QAAQ,IACjE,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,EACxD,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,EACxD,GAAQ,QAAQ,EAAa,GAAG,CAAC,SAAU,EAAO,MAAM,EACxD,GAAQ,WAAW,EAAa,GAAG,CAAC,YAAa,EAAO,SAAS,EAErE,IAAM,EAAW,MAAM,MAAM,CAAC,aAAa,EAAE,EAAA,CAAc,EAC3D,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,IACX,CADgB,MACR,GACZ,CADgB,EAKP,EAAwB,AAAC,CALb,EAMd,CAAA,EAAA,EAAA,QAAA,AAAO,EAAuB,CACjC,SAAU,EAAW,MAAM,CAAC,GAC5B,KAFG,GAEM,UACL,IAAM,EAAW,MAAM,MAAM,CAAC,aAAa,EAAE,EAAA,CAAS,EACtD,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,QAAS,CAAC,CAAC,EACX,UAAW,IACX,CADgB,MACR,GACZ,EADiB,CAKR,EAAiC,AAAC,EALrB,CAMf,CAAA,EAAA,EAAA,QAAA,AAAO,EAAwB,CAClC,SAAU,EAAW,aAAa,CAAC,CADhC,EAEH,QAAS,UACL,IAAM,EAAW,MAAM,MAAM,CAAC,eAAe,EAAE,EAAA,CAAS,EACxD,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,QAAS,CAAC,CAAC,EACX,UAAW,IACX,CADgB,MACR,GACZ,EADiB,CAKR,EAAyB,EALZ,GAMtB,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEH,AAAV,EAKL,CACE,WAAY,MAAO,MANhB,GAMkB,CAAO,SAAE,CAAO,CAAE,IACnC,IAAM,EAAW,MAAM,MAAM,CAAC,aAAa,EAAE,EAAA,CAAS,CAAE,CACpD,OAAQ,QACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GAEA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG3E,OAAO,EAAS,IAAI,EACxB,EACA,SAAU,MAAO,SAAE,CAAO,SAAE,CAAO,CAAE,IAEjC,MAAM,EAAY,aAAa,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,GAG/D,IAAM,EAAqB,EAAY,cAAc,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,GA8BrF,OA3BA,EAAY,cAAc,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,EAAG,AAAC,GAC1D,AAAK,GAAK,CAAN,MAEG,CAFW,AAGd,GAAG,CAAG,CACN,OAAQ,EAAI,MAAM,CAAC,GAAG,CAAC,AAAC,IACpB,GAAI,EAAM,EAAE,GAAK,EAAS,CACtB,IAAM,EAAe,CAAE,GAAG,CAAK,AAAC,EAYhC,YAVuB,IAAnB,EAAQ,KAAsB,CAAhB,GACd,EAAa,MAAM,CAAG,EAAQ,MAAM,CACpC,EAAa,MAAM,CAAG,EAAQ,MAAM,CAAG,IAAI,OAAO,WAAW,GAAK,WAG3C,IAAvB,EAAQ,KAA0B,KAAhB,GAClB,EAAa,UAAU,CAAG,EAAQ,UAAU,CAC5C,EAAa,UAAU,CAAG,EAAQ,UAAU,CAAG,IAAI,OAAO,WAAW,GAAK,MAGvE,CACX,CACA,OAAO,CACX,EACJ,EAtByB,GA0BtB,oBAAE,CAAmB,CAChC,EACA,QAAS,CAAC,EAAK,EAAW,KAElB,GAAS,oBAAoB,AAC7B,EAAQ,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAU,EAAiB,IAC5D,EAAY,YAAY,CAAC,EAAU,EACvC,EAER,EACA,UAAW,KAEP,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,EACjE,CACJ,EACJ,EAGa,EAA8B,KACvC,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAKf,CACE,WAAY,MAAO,IACf,EAPD,EAOO,EAAW,MAAM,MAAM,oBAAqB,CAC9C,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GAEA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MADI,AACE,OADI,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAG3E,OAAO,EAAS,IAAI,EACxB,EACA,SAAU,MAAO,CAAE,UAAQ,SAAE,CAAO,CAAE,IAElC,MAAM,EAAY,aAAa,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,GAG/D,IAAM,EAAqB,EAAY,cAAc,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,GAoCrF,OAjCA,EAAY,cAAc,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,EAAG,AAAC,GAC1D,AAAK,GAAK,CAAN,MAEG,CAFW,AAGd,GAAG,CAAG,CACN,OAAQ,EAAI,MAAM,CAAC,GAAG,CAAC,AAAC,IACpB,GAAI,EAAS,QAAQ,CAAC,EAAM,EAAE,EAAG,CAC7B,IAAM,EAAe,CAAE,GAAG,CAAK,AAAC,EAYhC,OAVuB,SAAnB,EAAQ,AAAsB,MAAhB,GACd,EAAa,MAAM,CAAG,EAAQ,MAAM,CACpC,EAAa,MAAM,CAAG,EAAQ,MAAM,CAAG,IAAI,OAAO,WAAW,GAAK,WAG3C,IAAvB,EAAQ,KAA0B,KAAhB,GAClB,EAAa,UAAU,CAAG,EAAQ,UAAU,CAC5C,EAAa,UAAU,CAAG,EAAQ,UAAU,CAAG,IAAI,OAAO,WAAW,GAAK,MAGvE,CACX,CACA,OAAO,CACX,GAAG,MAAM,CAAE,AAAD,GAEN,AAA2B,KAAvB,CAA6B,CAArB,UAAU,EACX,CAAC,EAAS,QAAQ,CAAC,EAAM,EAAE,EAI9C,EA5ByB,GAgCtB,oBAAE,CAAmB,CAChC,EACA,QAAS,CAAC,EAAK,EAAW,KAElB,GAAS,oBAAoB,AAC7B,EAAQ,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAU,EAAiB,IAC5D,EAAY,YAAY,CAAC,EAAU,EACvC,EAER,EACA,UAAW,KAEP,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,EACjE,CACJ,EACJ,EAGa,EAA+B,KACxC,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEH,AAAV,EAAgC,CACnC,WAAY,MAAO,IAGf,EAJD,EAIO,EAAW,MAAM,MAAM,CAAC,aAAa,EAAE,EAAQ,UAAU,CAAC,CAAE,CAC9D,OAAQ,MACZ,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,gCAEnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,CAAC,EAAG,KAEX,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAW,MAAM,CAAC,EAAS,GAErE,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,EACjE,CACJ,EACJ,EAGa,EAA0B,AAAC,GAE7B,EAAe,CAClB,GAAG,CAAO,CACV,MAAO,GAAS,OAAS,GACzB,OAAQ,GAAS,QAAU,CAC/B,GAIS,EAA4B,KACrC,IAAM,EAAc,CAAA,EAAA,EAAA,cAAA,AAAa,IAEjC,MAAO,CAAA,EAAA,EAAA,QAFa,GAEb,AAAU,EAYf,CACE,WAAY,MAAO,MAbhB,GAakB,CAAO,CAAE,GAAG,EAAW,IACxC,IAAM,EAAW,MAAM,MAAM,CAAC,eAAe,EAAE,EAAQ,MAAM,CAAC,CAAE,CAC5D,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,GAEA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,AADF,OAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,wBAGnC,OAAO,EAAS,IAAI,EACxB,EACA,UAAW,CAAC,EAAG,SAAE,CAAO,CAAE,IAEtB,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAW,KAAK,EAAG,GAE7D,EAAY,iBAAiB,CAAC,CAAE,SAAU,EAAW,MAAM,CAAC,EAAS,EACzE,CACJ,EACJ,EAGa,EAAwB,AAAC,GAC3B,CAAA,EAAA,EAAA,QAAA,AAAO,EAAqB,CAC/B,SAAU,IAAI,EAAW,MAAM,CAAC,GAAU,CADvC,QACgD,CACnD,QAAS,UACL,IAAM,EAAW,MAAM,MAAM,CAAC,aAAa,EAAE,EAAQ,OAAO,CAAC,EAC7D,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MAAM,CADF,MAAM,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,QAAS,CAAC,CAAC,EACX,UAAW,IACX,CADgB,MACR,GACZ,EADiB,CAKR,EAA8B,AAAC,EALlB,CAMf,CAAA,EAAA,EAAA,QAAA,AAAO,EAOX,CACC,SAAU,CAAC,UAAW,MARnB,aAQuC,EAAS,IAAI,GAAG,CAC1D,QAAS,UACL,IAAM,EAAW,MAAM,MAAM,6BAA8B,CACvD,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,UAAE,CAAS,EACpC,GACA,GAAI,CAAC,EAAS,EAAE,CAEZ,CAFc,KAER,AAAI,MADI,AACE,OADI,EAAS,IAAI,EAAA,EACX,KAAK,EAAI,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAE3E,OAAO,EAAS,IAAI,EACxB,EACA,QAAS,EAAS,MAAM,CAAG,EAC3B,UAAW,IAAI,CACf,IADoB,GACZ,GACZ,EADiB,KAAK,6CC3XmH,EAAA,CAAA,CAAA,0BAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAA8B,GAAA,EAAA,YAAb,SAAa,AAAoB,EAAtB,AAAwB,cAAtB,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAlC,AAAmC,oBAAjB,mFCAnZ,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAGO,SAAS,EAAsB,EAA4B,CAAC,CAAC,EAClE,MAAO,GAAA,EAAA,QAAA,AAAO,EAAE,CACd,SAAU,CAAC,gBADN,EACyB,EAAQ,CACtC,QAAS,UACP,IAAM,EAAS,MAAM,CAAA,EAAA,EAAA,gBAAA,AAAe,EAAE,GACtC,GAAI,CAAC,EAAO,OAAO,CACjB,CADmB,CADA,IAEb,AAAI,MAAM,EAAO,KAAK,EAE9B,OAAO,EAAO,IAAI,AACpB,EACA,UAAW,IACX,CADgB,MACR,GACV,CADc,CAEhB,IAFqB,8CCfqH,EAAA,CAAA,CAAA,uBAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAA2B,CAAA,EAAA,EAAA,SAAb,WAAW,CAAE,AAAoB,EAAE,cAAtB,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAlC,AAAmC,oBAAjB,6CCAvP,EAAA,CAAA,CAAA,mCAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAAuC,GAAA,EAAA,qBAAA,AAAoB,AAAjC,EAAmC,SAAxB,KAAE,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAC,AAAnC,oBAAkB,wDCArR,EAAA,CAAA,CAAA,6BAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAAiC,CAAA,EAAA,EAAA,eAAb,MAAa,AAAoB,EAAE,GAAxB,WAAE,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAlC,AAAmC,oBAAjB,8JCAzZ,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,OAkCO,SAAS,EAAyB,EAA4B,CAAC,CAAC,EACrE,MAAO,CAAA,EAAA,EAAA,QAAA,AAAO,EAAE,CACd,SAAU,CAAC,gBADN,KAC4B,EAAQ,CACzC,QAAS,UACP,IAAM,EAAS,MAAM,CAAA,EAAA,EAAA,mBAAA,AAAkB,EAAE,GACzC,GAAI,CAAC,EAAO,MADS,CACF,CACjB,CADmB,KACb,AAAI,MAAM,EAAO,KAAK,EAE9B,OAAO,EAAO,IAAI,AACpB,EACA,UAAW,IACX,CADgB,MACR,GACV,CADc,CAEhB,CA3CA,EAAA,CAAA,AAyCqB,CAzCrB,QAOA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,OAGA,EAAA,CAAA,CAAA,QAEA,EAAA,CAAA,CAAA,QAcA,EAAA,CAAA,CAAA,QAmBO,IAAM,EAAY,CACvB,IAAK,CAAC,SAAS,CACf,MAAO,IAAM,IAAI,EAAU,GAAG,CAAE,OAAO,CACvC,KAAO,AAAD,GAAkC,IAAI,EAAU,KAAK,GAAI,EAAQ,CACvE,QAAS,IAAM,IAAI,EAAU,GAAG,CAAE,SAAS,CAC3C,OAAQ,AAAC,GAAe,IAAI,EAAU,OAAO,GAAI,EACnD,AADsD,EAI/C,SAAS,EAAmB,CAMlC,EACC,MAAO,CAAA,EAAA,EAAA,QAAA,AAAO,EAAE,CACd,SAAU,EAAU,IAAI,CAAC,GAAW,CAAC,GACrC,GAFK,KAEI,IAAM,CAAA,EAAA,EAAA,aAAA,AAAY,EAAE,GAC7B,UAAW,IACX,CADgB,IADD,EAEP,GACV,CADc,CAEhB,CAGO,GALc,MAKL,EAAqB,CAAe,CAAE,GAAU,CAAI,EAClE,MAAO,CAAA,EAAA,EAAA,QAAA,AAAO,EAAE,CACd,SAAU,EAAU,MAAM,CAAC,GAC3B,KAFK,GAEI,IAAM,GAAA,EAAA,yBAAA,AAAwB,EAAE,GACzC,OADe,CACN,GAAW,CAAC,CAAC,EACtB,UAAW,IACX,CADgB,MACR,GACV,EACF,AAFiB,KAAK,uOC1EtB,SAAS,AAAc,MAAC,EAAO,cAAc,AAc9B,eAdgC,CAAa,OAAE,EAAQ,UAAU,CAAE,GAAG,EAAiB,EAGrG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,KAAM,YACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,8JAA8J,KAAM,EAAe,YAAY,MACvM,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,6IAA6I,KAAM,EAAM,YAAY,WAI/K,gGCZA,SAAS,AAAW,MAAC,EAAO,cAAc,AAe3B,eAf6B,CAAa,CAAE,QAAQ,UAAU,CAAE,GAAG,EAAiB,EAGlG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,IAAA,EAAC,IAAA,CAAE,KAAM,YACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,uJAAuJ,KAAM,IACrK,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,2JAA2J,KAAM,IACzK,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,gkBAAgkB,KAAM,SAIhlB,mDCrBgJ,EAAA,CAAA,CAAA,6BAAkC,IAAA,EAAA,EAAA,CAAA,CAAA,QAAiH,EAAiC,CAAA,EAAA,EAAA,eAAb,MAAa,AAAoB,EAAE,GAAxB,WAAE,+BAAmE,EAAA,UAAU,CAAC,KAAK,EAAE,EAAA,gBAAgB,CAAC,AAAnC,oBAAkB,oGCEzZ,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAMO,SAAS,EAAkB,aAAE,CAAW,CAA0B,EACrE,GAAM,CAAC,EAAQ,EAAU,CAAG,CAAA,EAAA,EAAA,QAAA,AAAO,GAAE,GAC/B,CAAC,EAAW,EAAa,CAAG,GAAA,EAAA,QAAA,AAAO,GAAE,CADf,EAEtB,EAAS,CAAA,EAAA,EAAA,SAAA,AAAQ,IAEjB,EAAsB,CAHM,SAI9B,GAAI,CACA,GAAa,GACb,EALO,EAKD,EAAS,MAAM,CAAA,EAAA,EAAA,mBAAkB,AAAlB,IAErB,GAAI,EAAO,KAAK,CAAE,GAFG,SAGjB,QAAQ,KAAK,CAAC,8BAA+B,EAAO,KAAK,EAI7D,QAAQ,GAAG,CAAC,EAAO,OAAO,EAC1B,EAAU,IAGV,EAAO,OAAO,EAClB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,oCAAqC,EACvD,QAAU,CACN,GAAa,EACjB,CACJ,SAEoB,AAApB,GAAuB,CAAnB,EACO,KAAK,AAIZ,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,MAAM,CAAA,CAAC,KAAM,EAAQ,YAJ8B,CAIhB,SAAnC,GACG,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAAC,OAAO,CAAA,CAAA,WAClB,CAAA,CADH,CACG,EAAA,IAAA,EAAC,EAAA,MAAM,CAAA,CAAC,QAAQ,UAAU,KAAK,MAA9B,SACG,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAW,CAAA,CAAC,UAAU,iBAAiB,CAAvC,uBAIT,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,YAAxB,YACG,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,YAAY,CAAA,WACT,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,AADJ,WACe,CAAA,CAAC,UAAU,cAAtB,sBACG,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAc,CAAA,CAAC,UAAU,iBAAzB,UAAoD,8BAGzD,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,iBAAiB,CAAA,WAAC,QAAlB,cACuB,EAAY,gBAA8B,IAAhB,EAAoB,GAAK,IAAI,gDAInF,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,YAAY,CAAA,CAAC,UAAU,aAAvB,wDACG,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CACH,QAAQ,YACR,QAAS,CAFZ,GAEkB,GAAU,GACzB,SAAU,WACb,WAGD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CACH,QAAS,EACT,SAAU,EACV,QAHH,EAGa,oDAET,EACG,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,WACI,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,mEAAuE,wBAI1F,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,WACI,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAW,CAAA,CAAC,UAAU,iBAAiB,CAAvC,+BASjC,oGC3FA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAOO,SAAS,EAAmB,SAAE,CAAO,eAAE,CAAa,CAA2B,EACpF,IAAM,EAAS,CAAA,EAAA,EAAA,SAAA,AAAQ,IACjB,EAAe,CAAA,EAAA,EAAA,eAAc,AAAd,EADN,EAkBf,MACE,CAAA,EAAA,EAAA,IAAA,EAAC,CAlBkB,CAkBlB,MAAM,CAAA,CAAC,MAAO,EAAe,cAhBL,AAAC,CAgBmB,GAf7C,GAeC,CAfK,EAAS,IAAI,gBAAgB,EAAa,QAAQ,GAEpD,CAAU,OAAO,GACnB,EAAO,MAAM,CAAC,UAEd,EAAO,GAAG,CAAC,SAAU,GAIvB,EAAO,MAAM,CAAC,UAEd,EAAO,IAAI,CAAC,CAAC,MAAM,EAAE,EAAO,QAAQ,GAAA,CAAI,CAC1C,YAII,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,YAAxB,mBACC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,WAAW,CAAA,CAAC,YAAY,YAAxB,MAEH,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,aAAa,CAAA,CAAC,UAAU,YAAxB,WACC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,UAAU,CAAA,CAAC,MAAM,eAAM,IAAvB,YACA,EAAQ,GAAG,CAAE,AAAD,GACX,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,UAAU,CAAA,CAAc,MAAO,WAC7B,GADc,KAAhB,IAOX,+FC1CA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QAAA,IAAA,EAAA,EAAA,CAAA,CAAA,QAuBO,SAAS,EAAc,OAAE,CAAK,cAAE,GAAe,CAAK,YAAE,GAAa,CAAK,UAAE,CAAQ,aAAE,CAAW,CAAsB,EAC1H,IAAM,EAAsB,GAAA,EAAA,sBAAA,AAAqB,IAG3C,EAAa,EAAM,OAHG,GAGO,CAAC,QAAQ,EAAE,WAAW,CAAC,EAAE,EAAE,MAC5D,EAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EACxB,EAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EACxB,EAAM,IAAI,CAEN,EAAU,EAAM,UAAU,CAAC,OAAO,EAAI,uBAEtC,EAAuB,AAAC,IACxB,GACF,EAAS,EAAM,EAAE,CADL,AACO,CAAY,MAEnC,EAYM,EACJ,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,6CAEZ,GACC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gBAAgB,QAAS,AAAC,GAAM,EAAE,eAAe,YAC9D,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,QAAQ,CAAA,CACP,QAAS,EACT,gBAAiB,CAFlB,KAQL,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,8BACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAW,CAAC,6CAA6C,EAAE,CAAC,EAAM,MAAM,CAAG,gBAAkB,GAAA,CAAI,UACpG,IAEF,CAAC,EAAM,MAAM,EACZ,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,uDAMrB,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,0BACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,4CACb,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,kDACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAW,CAAC,4BAA4B,EAAE,CAAC,EAAM,MAAM,CAAG,gBAAkB,GAAA,CAAI,UACnF,EAAM,OAAO,GAEf,GAAe,EAAc,GAC5B,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,qGACb,OAIP,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,UAAU,8CAAoC,KAC/C,KAEJ,EAAM,UAAU,CAAC,cAAc,EAC9B,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAK,CAAA,CAAC,MAAM,KAAK,OAAO,KAAK,KAA7B,KAAuC,6CAM9C,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,yCACb,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,2DACb,CAAA,EAAA,EAAA,mBAAA,AAAkB,EAAE,IAAI,KAAK,EAAM,KAAnC,KAA6C,EAAI,IAAI,MAAS,CAAE,WAAW,CAAK,iBAM3F,AAAI,EAEA,CAAA,EAAA,EAAA,GAAA,EAAC,EAFa,IAEb,CACC,UAAW,CAAC;UACV,EAAE,EAAa,eAAiB,GAAA,CAAI,CACtC,QAAS,IAAM,EAAqB,CAAC,YAEpC,IAML,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAI,CAAA,CACH,KAAM,CAAC,MAAM,EAAE,EAAM,EAAE,CAAA,CAAE,CACzB,OAFD,GAEY,CAAC,+EAA+E,EACzF,CAAC,EAAM,MAAM,CAAG,2CAA6C,GAAA,CAC7D,CACF,QAnFqB,CAmFZ,IAjFP,AAAC,EAAM,MAAM,EAAE,AACjB,EAAoB,MAAM,CAAC,CACzB,QAAS,EAAM,EAAE,CACjB,QAAS,CAAE,QAAQ,CAAK,CAC1B,EAEJ,WA6EK,GAGP,yFCpIA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QACA,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QAAA,IAAA,EAAA,EAAA,CAAA,CAAA,QAEA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,OACA,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QACA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAEe,SAAS,IACpB,IAAM,EAAe,CAAA,EAAA,EAAA,eAAA,AAAc,IACpB,GAAA,EAAA,SAAA,AAAQ,IAGvB,AAJqB,IAIf,EAAc,EAAa,GAAG,CAAC,WAAa,CAHnC,EAIT,EAAe,EAAa,GAAG,CAAC,WAAa,MAC7C,EAAe,EAAa,GAAG,CAAC,WAAa,MAC7C,EAAQ,SAAS,EAAa,GAAG,CAAC,UAAY,MAC9C,EAAS,SAAS,EAAa,GAAG,CAAC,WAAa,KAGhD,CAAC,EAAgB,EAAkB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAO,EAAY,EAAE,EAC3D,CAAC,EAAc,EAAgB,CAAG,CAAA,EAAA,EAAA,QAAA,AAAO,GAAE,CADL,EAItC,CACF,KAAM,CAAY,WAClB,CAAS,IAL2B,GAMpC,CAAK,CACL,SAAO,CACV,CAAG,CAAA,EAAA,EAAA,cAAA,AAAa,EAAE,OACf,SACA,EACA,GAHA,IAGQ,EACR,OAAyB,QAAjB,EAAyB,OAAa,EAC9C,OAAyB,QAAjB,OAAyB,EAAY,CACjD,GAG4B,CAAA,EAAA,EAAA,sBAAA,AAAqB,IACjD,IAAM,EAAqB,CAAA,EAAA,EAAA,AADC,2BACD,AAA0B,IAG/C,EAAW,GAAc,CAHJ,OAGY,IAAI,GAAS,EAAM,EAAE,GAAK,EAAE,CAC7D,CACF,KAAM,CAAkB,CAC3B,CAAG,CAAA,EAAA,EAAA,2BAAA,AAA0B,EAAE,GAGhC,CAAA,EAAA,EAHI,AAGJ,SAAA,AAAQ,EAAE,KACN,IAAM,EAAW,YAAY,GADjC,EAEQ,GACJ,EAAG,KAEH,CAFS,KAEF,IAAM,GAFQ,WAEM,EAC/B,EAAG,CAAC,EAAQ,EAGZ,IAAM,EAAoB,CAAC,EAAiB,KACpC,EACA,EAAkB,GAAQ,EADjB,EACqB,EAAM,EAAQ,EAE5C,EAAkB,GAAQ,EAAK,MAAM,CAAC,GAAM,IAAO,GAE3D,EAEM,EAAkB,AAAC,IACjB,GAAW,GAAc,OACzB,CADiC,CACf,EAAa,MAAM,CAAC,GAAG,CAAC,GAAS,EAAM,EAAE,GAE3D,EAAkB,EAAE,CAE5B,EAGM,EAAoB,UACtB,GAA8B,GAAG,CAA7B,EAAe,MAAM,CAEzB,GAAI,CACA,MAAM,EAAmB,WAAW,CAAC,CACjC,SAAU,EACV,QAAS,CAAE,YAAY,CAAK,CAChC,GACA,EAAkB,EAAE,EACpB,GAAgB,EACpB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,4BAA6B,EAC/C,CACJ,EAEM,EAAuB,UACzB,GAAI,AAA0B,GAAG,GAAd,MAAM,CAEzB,GAAI,CACA,MAAM,EAAmB,WAAW,CAAC,CACjC,SAAU,EACV,QAAS,CAAE,QAAQ,CAAK,CAC5B,GACA,EAAkB,EAAE,CACxB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,iCAAkC,EACpD,CACJ,EASA,GANA,CAAA,EAAA,EAAA,SAAA,AAAQ,EAAE,KACF,AAAC,GACD,EAAkB,EAAE,CAE5B,EAAG,CAAC,EAAa,CAHM,CAKnB,EACA,IAPJ,CAMW,CAEH,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,wCACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,6BACX,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,IAAI,CAAA,CAAC,UAAU,qBAAf,8BACG,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,WAAW,CAAA,CAAC,UAAU,cAAtB,CACG,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,qDACX,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAc,CAAA,CAAC,MAAM,KAAK,OAAO,OAClC,CAAA,CADC,CACD,EAAA,GAAA,EAAC,OAAA,UAAM,EAAM,OAAO,cAShD,GAAI,EACA,MACI,CAAA,EAFO,AAEP,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,wCACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,6BACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,kDACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,iCAAwB,4BAO3D,GAAI,CAAC,EACD,MACI,CAAA,EAAA,EAAA,CAFW,EAEX,EAAC,MAAA,CAAI,UAAU,wCACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,6BACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,kDACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,iCAAwB,0BAO3D,GAAM,QAAE,CAAM,YAAE,CAAU,SAAE,EAAU,CAAE,cAAe,EAAE,AAAC,CAAC,CAAE,CAAG,EAC1D,EAAc,EAAO,MAAM,CAAC,GAAS,CAAC,EAAM,MAAM,EAAE,MAAM,CAG1D,EAAyB,AAAC,IAC5B,GAAI,CAAC,GAAoB,QAAS,OAAO,AACzC,IAAM,EAAa,EAAmB,IAAI,CAAC,IAAI,CAAC,GAAK,EAAE,OAAO,GAAK,GACnE,OAAO,GAAY,WACvB,EAGM,EAAwB,AAAC,IAAsB,CACjD,GAAI,AAD4C,EACtC,EAAE,CACZ,KAAM,EAAM,IAAI,CAChB,QAAS,EAAM,OAAO,EAAI,aAC1B,WAAY,EAAM,UAAU,CAAC,QAAQ,GACrC,OAAQ,EAAM,MAAM,CACpB,WAAY,CACR,SAAU,CACN,UAAW,CAAC,CACR,KAAM,EAAM,QAAQ,CACpB,QAAS,EAAM,IAAI,AACvB,EAAE,AACN,EACA,QAAS,EAAM,OAAO,CACtB,eAAgB,EAAM,cAAc,CACpC,YAAa,KACb,YAAa,IACjB,EACJ,CAAC,CA0CD,MACI,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,qCACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,kCAEX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gBACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8CACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,WACG,CAAA,EAAA,EAAA,IAAA,EAAC,KAAA,CAAG,UAAU,uEAA6D,SAChE,EAAY,cAEvB,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,qDAA4C,8CAE7D,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,mCACV,EACG,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,WACI,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CACH,QAAQ,UACR,KAAK,KACL,CAHH,OAGY,IAAM,GAAgB,YAClC,WAGD,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,MAAM,CAAA,CACH,QAAQ,UACR,KAAK,KACL,CAHH,OAGY,EACT,SAAoC,IAA1B,EAAe,MAAM,EAAU,EAAmB,SAAS,WACxE,cACe,EAAe,MAAM,CAAC,OAEtC,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,MAAM,CAAA,CACH,QAAQ,UACR,KAAK,KACL,CAHH,OAGY,EACT,SAAoC,IAA1B,EAAe,MAAM,EAAU,EAAmB,SAAS,CACrE,UAAU,oDACb,YACa,EAAe,MAAM,CAAC,UAIxC,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,CAAA,WACI,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CACH,QAAQ,UACR,KAAK,KACL,CAHH,OAGY,IAAM,GAAgB,GAC/B,SAAU,CAAC,GAAc,QAAyC,IAA/B,EAAa,MAAM,CAAC,MAAM,UAChE,WAGD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,iBAAiB,CAAA,CAAC,YAAa,MAA/B,QAQrB,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gBACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oCACV,GACG,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oCACX,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,QAAQ,CAAA,CACL,QAAS,KAAc,QAAS,EAAe,IADlD,EACwD,GAAK,EAAa,MAAM,CAAC,MAAM,EAAI,EAAa,MAAM,CAAC,MAAM,CAAG,EACrH,EADyH,cACvG,AAAD,GAAa,GAA4B,IAAZ,KAElD,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,yCAAgC,kBAGxD,CAAA,EAAA,EAAA,IAAA,EAAC,OAAA,CAAK,OAAO,MAAM,UAAU,4BACzB,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAU,CAAA,CAAC,MAAM,KAAK,OAAO,KAAK,KAAlC,KAA4C,6EAC7C,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,KAAK,CAAA,CACF,KAAK,SACL,YAAY,IAFf,eAGG,aAAc,EACd,UAAU,yBAGI,QAAjB,GACG,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,CAAM,KAAK,SAAS,KAAK,SAAS,MAAO,IAE9C,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CAAC,KAAK,SAAS,UAAU,KAA/B,mEACG,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAU,CAAA,CAAC,MAAM,KAAK,OAAO,UAA7B,EAIT,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,kBAAkB,CAAA,CACf,QAAS,EAAQ,OADpB,MACiC,CAC9B,cAAe,YAO/B,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,qCACQ,IAAlB,EAAO,MAAM,CACV,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,iCACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gDACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,wBACX,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,iBAAiB,CAAA,CACd,KAAK,KACL,KAAM,GAFT,AAGG,gBAAgB,UAChB,UAAU,iBAEd,CAAA,EAAA,EAAA,GAAA,EAAC,KAAA,CAAG,UAAU,sDAA6C,oBAC3D,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,8CACR,GAAe,AAAiB,WAA0B,QAAjB,EACpC,wCACA,mDAET,CAAC,CAAC,GAAgC,QAAjB,GAA0B,AAAiB,SAAA,CAAK,EAC9D,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sBACX,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,UAAU,yCAAgC,2DAG7C,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CAAC,OAAO,CAAA,CAAA,WACX,CAAA,EAAA,EAAA,GAAA,CADH,CACI,EAAA,OAAI,CAAA,CAAC,KAAK,uBAAV,AAAwB,iCAUjD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,kCACV,EAAO,GAAG,CAAC,AAAC,GACT,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAa,CAAA,CAEV,MAAO,EAAsB,GAC7B,WAHH,EAGiB,EACd,WAAY,EAAe,QAAQ,CAAC,EAAM,EAAE,EAC5C,SAAU,EACV,YAAa,EAAuB,EAAM,EAAE,GALvC,EAAM,EAAE,KAY5B,EAAW,KAAK,CAAG,EAAW,KAAK,EAChC,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,iCACX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,gDACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,8CACX,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,sDAA4C,WAC9C,EAAW,MAAM,CAAG,EAAE,OAAK,KAAK,GAAG,CAAC,EAAW,MAAM,CAAG,EAAW,KAAK,CAAE,EAAW,KAAK,EAAE,OAAK,EAAW,KAAK,CAAC,aAE/H,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,UAAU,oCACV,EAAW,MAAM,CAAG,GACjB,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAI,CAAA,CACD,KAAM,CACF,SAAU,QACV,KAHP,CAGc,CACH,GAAI,GAAe,CAAE,OAAQ,CAAY,CAAC,CAC1C,GAAqB,QAAjB,GAA0B,CAAE,OAAQ,CAAa,CAAC,CACtD,GAAqB,QAAjB,GAA0B,CAAE,OAAQ,CAAa,CAAC,CACtD,OAAQ,KAAK,GAAG,CAAC,EAAG,EAAW,MAAM,CAAG,EAAW,KAAK,EAAE,QAAQ,EACtE,CACJ,WAEA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CAAC,QAAQ,YAAY,KAAK,IAAhC,CAAqC,UAAU,sBAAa,eAKpE,EAAW,OAAO,EACf,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAI,CAAA,CACD,KAAM,CACF,SAAU,QACV,KAHP,CAGc,CACH,GAAI,GAAe,CAAE,OAAQ,CAAY,CAAC,CAC1C,GAAqB,QAAjB,GAA0B,CAAE,OAAQ,CAAa,CAAC,CACtD,GAAqB,QAAjB,GAA0B,CAAE,OAAQ,CAAa,CAAC,CACtD,OAAQ,CAAC,EAAW,MAAM,CAAG,EAAW,KAAA,AAAK,EAAE,QAAQ,EAC3D,CACJ,WAEA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAM,CAAA,CAAC,QAAQ,YAAY,KAAK,IAAhC,CAAqC,UAAU,sBAAa,0BAazG","ignoreList":[1,5,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}