{"version":3,"sources":["turbopack:///[project]/node_modules/next/navigation.js","turbopack:///[project]/node_modules/@tanstack/react-query/src/QueryClientProvider.tsx","turbopack:///[project]/node_modules/@tanstack/query-core/src/utils.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/notifyManager.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/subscribable.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/focusManager.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/onlineManager.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/thenable.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/retryer.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/removable.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/query.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/mutation.ts","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-ZNPQQ2WK.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-LS3NB4DU.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-3PQR35T5.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-NZ5PEXT2.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-TGX6UKKS.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-4KKWHG2V.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-VY7I5OWG.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-2Z7EC4JM.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-RLTE5H53.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-VXGVATJ5.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-VN4AVW2V.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-YF5TB4XK.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-4G7CGF2R.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-NHKT224P.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-PIIGEXKQ.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-4QPHNIQ7.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-R3TB4JFJ.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-ELS2JOCO.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/chunk-D2YRPPOL.mjs","turbopack:///[project]/node_modules/autumn-js/dist/libraries/react/index.mjs","turbopack:///[project]/node_modules/@vercel/analytics/src/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/nextjs/index.tsx","turbopack:///[project]/node_modules/@vercel/analytics/src/nextjs/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/package.json","turbopack:///[project]/node_modules/@vercel/analytics/src/queue.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/generic.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/react/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/react/index.tsx","turbopack:///[project]/node_modules/@tanstack/react-query-devtools/src/index.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/queryCache.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/mutationCache.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/queryClient.ts","turbopack:///[project]/lib/query-client.ts","turbopack:///[project]/components/providers/query-provider.tsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n","import type {\n  DefaultError,\n  Enabled,\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n  StaleTime,\n  StaleTimeFunction,\n} from './types'\nimport type { Mutation } from './mutation'\nimport type { FetchOptions, Query } from './query'\n\n// TYPES\n\nexport interface QueryFilters<TQueryKey extends QueryKey = QueryKey> {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: TQueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (\n    mutation: Mutation<TData, TError, TVariables, TContext>,\n  ) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): void\nexport function noop(): undefined\nexport function noop() {}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function resolveStaleTime<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  staleTime:\n    | undefined\n    | StaleTimeFunction<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): StaleTime | undefined {\n  return typeof staleTime === 'function' ? staleTime(query) : staleTime\n}\n\nexport function resolveEnabled<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  enabled: undefined | Enabled<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): boolean | undefined {\n  return typeof enabled === 'function' ? enabled(query) : enabled\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aItems = array ? a : Object.keys(a)\n    const aSize = aItems.length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n    const aItemsSet = new Set(aItems)\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      if (\n        ((!array && aItemsSet.has(key)) || array) &&\n        a[key] === undefined &&\n        b[key] === undefined\n      ) {\n        copy[key] = undefined\n        equalItems++\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key])\n        if (copy[key] === a[key] && a[key] !== undefined) {\n          equalItems++\n        }\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\n// eslint-disable-next-line @typescript-eslint/no-wrapper-object-types\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Handles Objects created by Object.create(<arbitrary prototype>)\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== 'production') {\n      try {\n        return replaceEqualDeep(prevData, data)\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`,\n        )\n\n        // Prevent the replaceEqualDeep from being called again down below.\n        throw error\n      }\n    }\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n\nexport function ensureQueryFn<\n  TQueryFnData = unknown,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: {\n    queryFn?: QueryFunction<TQueryFnData, TQueryKey> | SkipToken\n    queryHash?: string\n  },\n  fetchOptions?: FetchOptions<TQueryFnData>,\n): QueryFunction<TQueryFnData, TQueryKey> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`,\n      )\n    }\n  }\n\n  // if we attempt to retry a fetch that was triggered from an initialPromise\n  // when we don't have a queryFn yet, we can't retry, so we just return the already rejected initialPromise\n  // if an observer has already mounted, we will be able to retry with that queryFn\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise!\n  }\n\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () =>\n      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))\n  }\n\n  return options.queryFn\n}\n\nexport function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwOnError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwOnError function to override throwing behavior on a per-error basis\n  if (typeof throwOnError === 'function') {\n    return throwOnError(...params)\n  }\n\n  return !!throwOnError\n}\n","// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = (cb) => setTimeout(cb, 0)\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n","/**\n * Thenable types which matches React's types for promises\n *\n * React seemingly uses `.status`, `.value` and `.reason` properties on a promises to optimistically unwrap data from promises\n *\n * @see https://github.com/facebook/react/blob/main/packages/shared/ReactTypes.js#L112-L138\n * @see https://github.com/facebook/react/blob/4f604941569d2e8947ce1460a0b2997e835f37b9/packages/react-debug-tools/src/ReactDebugHooks.js#L224-L227\n */\n\nimport { noop } from './utils'\n\ninterface Fulfilled<T> {\n  status: 'fulfilled'\n  value: T\n}\ninterface Rejected {\n  status: 'rejected'\n  reason: unknown\n}\ninterface Pending<T> {\n  status: 'pending'\n\n  /**\n   * Resolve the promise with a value.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  resolve: (value: T) => void\n  /**\n   * Reject the promise with a reason.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  reject: (reason: unknown) => void\n}\n\nexport type FulfilledThenable<T> = Promise<T> & Fulfilled<T>\nexport type RejectedThenable<T> = Promise<T> & Rejected\nexport type PendingThenable<T> = Promise<T> & Pending<T>\n\nexport type Thenable<T> =\n  | FulfilledThenable<T>\n  | RejectedThenable<T>\n  | PendingThenable<T>\n\nexport function pendingThenable<T>(): PendingThenable<T> {\n  let resolve: Pending<T>['resolve']\n  let reject: Pending<T>['reject']\n  // this could use `Promise.withResolvers()` in the future\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  }) as PendingThenable<T>\n\n  thenable.status = 'pending'\n  thenable.catch(() => {\n    // prevent unhandled rejection errors\n  })\n\n  function finalize(data: Fulfilled<T> | Rejected) {\n    Object.assign(thenable, data)\n\n    // clear pending props props to avoid calling them twice\n    delete (thenable as Partial<PendingThenable<T>>).resolve\n    delete (thenable as Partial<PendingThenable<T>>).reject\n  }\n\n  thenable.resolve = (value) => {\n    finalize({\n      status: 'fulfilled',\n      value,\n    })\n\n    resolve(value)\n  }\n  thenable.reject = (reason) => {\n    finalize({\n      status: 'rejected',\n      reason,\n    })\n\n    reject(reason)\n  }\n\n  return thenable\n}\n\n/**\n * This function takes a Promise-like input and detects whether the data\n * is synchronously available or not.\n *\n * It does not inspect .status, .value or .reason properties of the promise,\n * as those are not always available, and the .status of React's promises\n * should not be considered part of the public API.\n */\nexport function tryResolveSync(promise: Promise<unknown> | Thenable<unknown>) {\n  let data: unknown\n\n  promise\n    .then((result) => {\n      data = result\n      return result\n    }, noop)\n    // .catch can be unavailable on certain kinds of thenable's\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    ?.catch(noop)\n\n  if (data !== undefined) {\n    return { data }\n  }\n\n  return undefined\n}\n","import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { pendingThenable } from './thenable'\nimport { isServer, sleep } from './utils'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  initialPromise?: Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n  canRun: () => boolean\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n  canStart: () => boolean\n  start: () => Promise<TData>\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError extends Error {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    super('CancelledError')\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => void) | undefined\n\n  const thenable = pendingThenable<TData>()\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const canContinue = () =>\n    focusManager.isFocused() &&\n    (config.networkMode === 'always' || onlineManager.isOnline()) &&\n    config.canRun()\n\n  const canStart = () => canFetch(config.networkMode) && config.canRun()\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      thenable.resolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      thenable.reject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // we can re-use config.initialPromise on the first call of run()\n    const initialPromise =\n      failureCount === 0 ? config.initialPromise : undefined\n\n    // Execute query\n    try {\n      promiseOrValue = initialPromise ?? config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            return canContinue() ? undefined : pause()\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.()\n      return thenable\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      // Start loop\n      if (canStart()) {\n        run()\n      } else {\n        pause().then(run)\n      }\n      return thenable\n    },\n  }\n}\n","import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n","import {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { canFetch, createRetryer, isCancelledError } from './retryer'\nimport { Removable } from './removable'\nimport type { QueryCache } from './queryCache'\nimport type { QueryClient } from './queryClient'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n  StaleTime,\n} from './types'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  client: QueryClient\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  client: QueryClient\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions<TData = unknown> {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n  initialPromise?: Promise<TData>\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #client: QueryClient\n  #retryer?: Retryer<TData>\n  observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.#client = config.client\n    this.#cache = this.#client.getQueryCache()\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = getDefaultState(this.options)\n    this.state = config.state ?? this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  get promise(): Promise<TData> | undefined {\n    return this.#retryer?.promise\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive()\n    }\n    // if a query has no observers, it should still be considered disabled if it never attempted a fetch\n    return (\n      this.options.queryFn === skipToken ||\n      this.state.dataUpdateCount + this.state.errorUpdateCount === 0\n    )\n  }\n\n  isStatic(): boolean {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) =>\n          resolveStaleTime(observer.options.staleTime, this) === 'static',\n      )\n    }\n\n    return false\n  }\n\n  isStale(): boolean {\n    // check observers first, their `isStale` has the source of truth\n    // calculated with `isStaleByTime` and it takes `enabled` into account\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined || this.state.isInvalidated\n  }\n\n  isStaleByTime(staleTime: StaleTime = 0): boolean {\n    // no data is always stale\n    if (this.state.data === undefined) {\n      return true\n    }\n    // static is never stale\n    if (staleTime === 'static') {\n      return false\n    }\n    // if the query is invalidated, it is stale\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions<TQueryFnData>,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    // Create fetch function\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions)\n\n      // Create query function context\n      const createQueryFnContext = (): QueryFunctionContext<TQueryKey> => {\n        const queryFnContext: OmitKeyof<\n          QueryFunctionContext<TQueryKey>,\n          'signal'\n        > = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta,\n        }\n        addSignalProperty(queryFnContext)\n        return queryFnContext as QueryFunctionContext<TQueryKey>\n      }\n\n      const queryFnContext = createQueryFnContext()\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this as unknown as Query,\n        )\n      }\n\n      return queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const createFetchContext = (): FetchContext<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey\n    > => {\n      const context: OmitKeyof<\n        FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n        'signal'\n      > = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn,\n      }\n\n      addSignalProperty(context)\n      return context as FetchContext<TQueryFnData, TError, TData, TQueryKey>\n    }\n\n    const context = createFetchContext()\n\n    this.options.behavior?.onFetch(context, this as unknown as Query)\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.#cache.config.onError?.(\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error as any,\n          this as Query<any, any, any, any>,\n        )\n      }\n\n      // Schedule query gc after fetching\n      this.scheduleGc()\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise as\n        | Promise<TData>\n        | undefined,\n      fn: context.fetchFn as () => Promise<TData>,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === undefined) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error(`${this.queryHash} data is undefined`) as any)\n          return\n        }\n\n        try {\n          this.setData(data)\n        } catch (error) {\n          onError(error as TError)\n          return\n        }\n\n        // Notify cache callback\n        this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error as any,\n          this as Query<any, any, any, any>,\n        )\n\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true,\n    })\n\n    return this.#retryer.start()\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error\n\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: 'idle' }\n          }\n\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? (initialDataUpdatedAt ?? Date.now()) : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TContext> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TContext>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options!: MutationOptions<TData, TError, TVariables, TContext>\n  readonly mutationId: number\n\n  #observers: Array<MutationObserver<TData, TError, TVariables, TContext>>\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const onContinue = () => {\n      this.#dispatch({ type: 'continue' })\n    }\n\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n        return this.options.mutationFn(variables)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (restored) {\n        // Dispatch continue action to unpause restored mutation\n        onContinue()\n      } else {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(variables)\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(data, variables, this.state.context!)\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSettled?.(data, null, variables, this.state.context)\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n","\"use client\";\n\n\n// src/libraries/react/utils/toSnakeCase.ts\nfunction stringToSnakeCase(str) {\n  return str.replace(/([a-z])([A-Z])/g, \"$1_$2\").replace(/[-\\s]+/g, \"_\").toLowerCase();\n}\nvar toSnakeCase = (obj) => {\n  if (Array.isArray(obj)) {\n    return obj.map(toSnakeCase);\n  } else if (obj !== null && typeof obj === \"object\") {\n    return Object.fromEntries(\n      Object.entries(obj).map(([key, value]) => [\n        stringToSnakeCase(key),\n        toSnakeCase(value)\n      ])\n    );\n  }\n  return obj;\n};\n\nexport {\n  toSnakeCase\n};\n","\"use client\";\n\nimport {\n  toSnakeCase\n} from \"./chunk-ZNPQQ2WK.mjs\";\n\n// src/libraries/react/client/clientGenMethods.ts\nasync function attachMethod(params) {\n  let { dialog, ...rest } = params;\n  let snakeParams = toSnakeCase(rest);\n  const res = await this.post(\"/api/autumn/attach\", snakeParams);\n  return res;\n}\nasync function cancelMethod(params) {\n  let snakeParams = toSnakeCase(params);\n  const res = await this.post(\"/api/autumn/cancel\", snakeParams);\n  return res;\n}\nasync function checkMethod(params) {\n  let { dialog, ...rest } = params;\n  let snakeParams = toSnakeCase(rest);\n  const res = await this.post(\"/api/autumn/check\", snakeParams);\n  return res;\n}\nasync function trackMethod(params) {\n  let snakeParams = toSnakeCase(params);\n  const res = await this.post(\"/api/autumn/track\", snakeParams);\n  return res;\n}\nasync function openBillingPortalMethod(params) {\n  let snakeParams = toSnakeCase(params || {});\n  const res = await this.post(\"/api/autumn/billing_portal\", snakeParams);\n  return res;\n}\n\nexport {\n  attachMethod,\n  cancelMethod,\n  checkMethod,\n  trackMethod,\n  openBillingPortalMethod\n};\n","\"use client\";\n\n\n// src/sdk/error.ts\nvar AutumnError = class extends Error {\n  message;\n  code;\n  constructor(response) {\n    super(response.message);\n    this.message = response.message;\n    this.code = response.code;\n  }\n  toString() {\n    return `${this.message} (code: ${this.code})`;\n  }\n  toJSON() {\n    return {\n      message: this.message,\n      code: this.code\n    };\n  }\n};\n\n// src/sdk/response.ts\nvar toContainerResult = async (response) => {\n  if (response.status < 200 || response.status >= 300) {\n    let error;\n    try {\n      error = await response.json();\n    } catch (error2) {\n      return {\n        data: null,\n        error: new AutumnError({\n          message: \"Failed to parse JSON response from Autumn\",\n          code: \"internal_error\"\n        }),\n        statusCode: response.status\n      };\n    }\n    return {\n      data: null,\n      error: new AutumnError({\n        message: error.message,\n        code: error.code\n      }),\n      statusCode: response.status\n    };\n  }\n  try {\n    let data = await response.json();\n    return {\n      data,\n      error: null,\n      statusCode: response?.status\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: new AutumnError({\n        message: \"Failed to parse Autumn API response\",\n        code: \"internal_error\"\n      }),\n      statusCode: response?.status\n    };\n  }\n};\n\n// src/sdk/utils.ts\nvar staticWrapper = (callback, instance, args) => {\n  if (!instance) {\n    instance = new Autumn();\n  }\n  return callback({ instance, ...args });\n};\n\n// src/sdk/customers/cusMethods.ts\nvar customerMethods = (instance) => {\n  return {\n    get: (id, params) => staticWrapper(getCustomer, instance, { id, params }),\n    create: (params) => staticWrapper(createCustomer, instance, { params }),\n    update: (id, params) => staticWrapper(updateCustomer, instance, { id, params }),\n    delete: (id) => staticWrapper(deleteCustomer, instance, { id }),\n    billingPortal: (id, params) => staticWrapper(billingPortal, instance, { id, params })\n  };\n};\nvar getExpandStr = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\nvar getCustomer = async ({\n  instance,\n  id,\n  params\n}) => {\n  if (!id) {\n    return {\n      data: null,\n      error: new AutumnError({\n        message: \"Customer ID is required\",\n        code: \"CUSTOMER_ID_REQUIRED\"\n      })\n    };\n  }\n  return instance.get(`/customers/${id}?${getExpandStr(params?.expand)}`);\n};\nvar createCustomer = async ({\n  instance,\n  params\n}) => {\n  return instance.post(`/customers?${getExpandStr(params?.expand)}`, params);\n};\nvar updateCustomer = async ({\n  instance,\n  id,\n  params\n}) => {\n  return instance.post(`/customers/${id}`, params);\n};\nvar deleteCustomer = async ({\n  instance,\n  id\n}) => {\n  return instance.delete(`/customers/${id}`);\n};\nvar billingPortal = async ({\n  instance,\n  id,\n  params\n}) => {\n  return instance.post(`/customers/${id}/billing_portal`, params);\n};\n\n// src/sdk/customers/entities/entMethods.ts\nvar entityMethods = (instance) => {\n  return {\n    get: (customer_id, entity_id, params) => staticWrapper(getEntity, instance, {\n      customer_id,\n      entity_id,\n      params\n    }),\n    create: (customer_id, params) => staticWrapper(createEntity, instance, { customer_id, params }),\n    delete: (customer_id, entity_id) => staticWrapper(deleteEntity, instance, { customer_id, entity_id })\n  };\n};\nvar getExpandStr2 = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\nvar getEntity = async ({\n  instance,\n  customer_id,\n  entity_id,\n  params\n}) => {\n  return instance.get(\n    `/customers/${customer_id}/entities/${entity_id}?${getExpandStr2(\n      params?.expand\n    )}`\n  );\n};\nvar createEntity = async ({\n  instance,\n  customer_id,\n  params\n}) => {\n  return instance.post(`/customers/${customer_id}/entities`, params);\n};\nvar deleteEntity = async ({\n  instance,\n  customer_id,\n  entity_id\n}) => {\n  return instance.delete(`/customers/${customer_id}/entities/${entity_id}`);\n};\n\n// src/sdk/general/genMethods.ts\nvar handleAttach = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/attach\", params);\n};\nvar handleCancel = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/cancel\", params);\n};\nvar handleEntitled = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/entitled\", params);\n};\nvar handleEvent = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/events\", params);\n};\nvar handleTrack = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/track\", params);\n};\nvar handleUsage = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/usage\", params);\n};\nvar handleCheck = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/check\", params);\n};\n\n// src/sdk/products/prodMethods.ts\nvar productMethods = (instance) => {\n  return {\n    get: (id) => staticWrapper(getProduct, instance, { id }),\n    create: (params) => staticWrapper(createProduct, instance, { params }),\n    list: (params) => staticWrapper(listProducts, instance, { params })\n  };\n};\nvar listProducts = async ({\n  instance,\n  params\n}) => {\n  let path = \"/products\";\n  if (params) {\n    const queryParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(params)) {\n      if (value !== void 0) {\n        queryParams.append(key, String(value));\n      }\n    }\n    const queryString = queryParams.toString();\n    if (queryString) {\n      path += `?${queryString}`;\n    }\n  }\n  return instance.get(path);\n};\nvar getProduct = async ({\n  instance,\n  id\n}) => {\n  return instance.get(`/products/${id}`);\n};\nvar createProduct = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/products\", params);\n};\n\n// src/sdk/client.ts\nvar LATEST_API_VERSION = \"1.2\";\nvar Autumn = class {\n  secretKey;\n  publishableKey;\n  level;\n  headers;\n  url;\n  constructor(options) {\n    try {\n      this.secretKey = options?.secretKey || process.env.AUTUMN_SECRET_KEY;\n      this.publishableKey = options?.publishableKey || process.env.AUTUMN_PUBLISHABLE_KEY;\n    } catch (error) {\n    }\n    if (!this.secretKey && !this.publishableKey) {\n      throw new Error(\"Autumn secret key or publishable key is required\");\n    }\n    this.headers = {\n      Authorization: `Bearer ${this.secretKey || this.publishableKey}`,\n      \"Content-Type\": \"application/json\"\n    };\n    let version = options?.version || LATEST_API_VERSION;\n    this.headers[\"x-api-version\"] = version;\n    this.url = options?.url || \"https://api.useautumn.com/v1\";\n    this.level = this.secretKey ? \"secret\" : \"publishable\";\n  }\n  getLevel() {\n    return this.level;\n  }\n  async get(path) {\n    const response = await fetch(`${this.url}${path}`, {\n      headers: this.headers\n    });\n    return toContainerResult(response);\n  }\n  async post(path, body) {\n    const response = await fetch(`${this.url}${path}`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(body)\n    });\n    return toContainerResult(response);\n  }\n  async delete(path) {\n    const response = await fetch(`${this.url}${path}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    });\n    return toContainerResult(response);\n  }\n  static customers = customerMethods();\n  static products = productMethods();\n  static entities = entityMethods();\n  customers = customerMethods(this);\n  products = productMethods(this);\n  entities = entityMethods(this);\n  static attach = (params) => staticWrapper(handleAttach, void 0, { params });\n  static usage = (params) => staticWrapper(handleUsage, void 0, { params });\n  async attach(params) {\n    return handleAttach({\n      instance: this,\n      params\n    });\n  }\n  static cancel = (params) => staticWrapper(handleCancel, void 0, { params });\n  async cancel(params) {\n    return handleCancel({\n      instance: this,\n      params\n    });\n  }\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new check() method instead.\n   */\n  static entitled = (params) => staticWrapper(handleEntitled, void 0, { params });\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new check() method instead.\n   */\n  async entitled(params) {\n    return handleEntitled({\n      instance: this,\n      params\n    });\n  }\n  static check = (params) => staticWrapper(handleCheck, void 0, { params });\n  async check(params) {\n    return handleCheck({\n      instance: this,\n      params\n    });\n  }\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new track() method instead.\n   */\n  static event = (params) => staticWrapper(handleEvent, void 0, { params });\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new track() method instead.\n   */\n  async event(params) {\n    return handleEvent({\n      instance: this,\n      params\n    });\n  }\n  static track = (params) => staticWrapper(handleTrack, void 0, { params });\n  async track(params) {\n    return handleTrack({\n      instance: this,\n      params\n    });\n  }\n  async usage(params) {\n    return handleUsage({\n      instance: this,\n      params\n    });\n  }\n};\n\nexport {\n  AutumnError,\n  toContainerResult\n};\n","\"use client\";\n\n\n// src/libraries/react/client/clientCompMethods.ts\nasync function getPricingTableMethod() {\n  const res = await this.get(\"/api/autumn/components/pricing_table\");\n  return res;\n}\n\nexport {\n  getPricingTableMethod\n};\n","\"use client\";\n\n\n// src/libraries/react/client/clientCusMethods.ts\nvar createCustomerMethod = async ({\n  client,\n  params\n}) => {\n  let result = await client.post(\"/api/autumn/customers\", params);\n  return result;\n};\n\nexport {\n  createCustomerMethod\n};\n","\"use client\";\n\nimport {\n  toSnakeCase\n} from \"./chunk-ZNPQQ2WK.mjs\";\n\n// src/utils/entityUtils.tsx\nvar getEntityExpandStr = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\n\n// src/libraries/react/client/clientEntityMethods.ts\nasync function createEntityMethod(params) {\n  let snakeParams = toSnakeCase(params);\n  const res = await this.post(\"/api/autumn/entities\", snakeParams);\n  return res;\n}\nasync function getEntityMethod(entityId, params) {\n  let snakeParams = toSnakeCase(params);\n  let expand = getEntityExpandStr(params?.expand);\n  const res = await this.get(`/api/autumn/entities/${entityId}?${expand}`);\n  return res;\n}\nasync function deleteEntityMethod(entityId) {\n  const res = await this.delete(`/api/autumn/entities/${entityId}`);\n  return res;\n}\n\nexport {\n  createEntityMethod,\n  getEntityMethod,\n  deleteEntityMethod\n};\n","\"use client\";\n\nimport {\n  attachMethod,\n  cancelMethod,\n  checkMethod,\n  openBillingPortalMethod,\n  trackMethod\n} from \"./chunk-LS3NB4DU.mjs\";\nimport {\n  toContainerResult\n} from \"./chunk-3PQR35T5.mjs\";\nimport {\n  getPricingTableMethod\n} from \"./chunk-NZ5PEXT2.mjs\";\nimport {\n  createCustomerMethod\n} from \"./chunk-TGX6UKKS.mjs\";\nimport {\n  createEntityMethod,\n  deleteEntityMethod,\n  getEntityMethod\n} from \"./chunk-4KKWHG2V.mjs\";\n\n// src/libraries/react/client/ReactAutumnClient.tsx\nvar AutumnClient = class {\n  backendUrl;\n  getBearerToken;\n  customerData;\n  includeCredentials;\n  constructor({\n    backendUrl,\n    getBearerToken,\n    customerData,\n    includeCredentials\n  }) {\n    this.backendUrl = backendUrl;\n    this.getBearerToken = getBearerToken;\n    this.customerData = customerData;\n    this.includeCredentials = includeCredentials;\n  }\n  async getHeaders() {\n    let headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    if (this.getBearerToken) {\n      try {\n        let token = await this.getBearerToken();\n        headers.Authorization = `Bearer ${token}`;\n      } catch (error) {\n        console.error(`Failed to call getToken() in AutumnProvider`);\n      }\n    }\n    return headers;\n  }\n  async handleFetchResult(result) {\n    let res = await toContainerResult(result);\n    return res;\n  }\n  async post(path, body) {\n    const response = await fetch(`${this.backendUrl}${path}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        ...body,\n        customer_data: this.customerData || void 0\n      }),\n      headers: await this.getHeaders(),\n      credentials: this.includeCredentials ? \"include\" : void 0\n    });\n    return await this.handleFetchResult(response);\n  }\n  async get(path) {\n    const response = await fetch(`${this.backendUrl}${path}`, {\n      method: \"GET\",\n      headers: await this.getHeaders(),\n      credentials: this.includeCredentials ? \"include\" : void 0\n    });\n    return await this.handleFetchResult(response);\n  }\n  async delete(path) {\n    const response = await fetch(`${this.backendUrl}${path}`, {\n      method: \"DELETE\",\n      headers: await this.getHeaders()\n    });\n    return await this.handleFetchResult(response);\n  }\n  async createCustomer(params) {\n    return await createCustomerMethod({\n      client: this,\n      params\n    });\n  }\n  async getPricingTable() {\n    return await getPricingTableMethod.bind(this)();\n  }\n  attach = attachMethod.bind(this);\n  cancel = cancelMethod.bind(this);\n  check = checkMethod.bind(this);\n  track = trackMethod.bind(this);\n  openBillingPortal = openBillingPortalMethod.bind(this);\n  entities = {\n    create: createEntityMethod.bind(this),\n    get: getEntityMethod.bind(this),\n    delete: deleteEntityMethod.bind(this)\n  };\n};\n\nexport {\n  AutumnClient\n};\n","\"use client\";\n\nimport {\n  AutumnClient\n} from \"./chunk-VY7I5OWG.mjs\";\n\n// src/libraries/react/AutumnContext.tsx\nimport { createContext, useContext } from \"react\";\nvar AutumnContext = createContext({\n  customerProvider: null,\n  pricingTableProvider: {\n    pricingTableProducts: null,\n    isLoading: true,\n    error: null,\n    refetch: () => Promise.resolve()\n  },\n  entityProvider: {\n    entity: null,\n    isLoading: true,\n    error: null,\n    refetch: () => Promise.resolve(),\n    lastParams: null\n  },\n  client: new AutumnClient({\n    backendUrl: \"http://localhost:8000\"\n  }),\n  paywallDialog: {\n    props: null,\n    setProps: () => {\n    },\n    open: false,\n    setOpen: () => {\n    },\n    setComponent: () => {\n    }\n  },\n  prodChangeDialog: {\n    props: null,\n    setProps: () => {\n    },\n    open: false,\n    setOpen: () => {\n    },\n    setComponent: () => {\n    }\n  }\n});\nvar useAutumnContext = () => {\n  const context = useContext(AutumnContext);\n  if (context === void 0) {\n    throw new Error(\n      \"useAutumnContext must be used within a AutumnContextProvider\"\n    );\n  }\n  return context;\n};\n\nexport {\n  AutumnContext,\n  useAutumnContext\n};\n","\"use client\";\n\nimport {\n  useAutumnContext\n} from \"./chunk-2Z7EC4JM.mjs\";\n\n// src/libraries/react/hooks/useAutumn.tsx\nvar useAutumn = () => {\n  const { client } = useAutumnContext();\n  const {\n    prodChangeDialog,\n    paywallDialog,\n    pricingTableProvider,\n    customerProvider\n  } = useAutumnContext();\n  let {\n    setProps: setProdChangeDialogProps,\n    setOpen: setProdChangeDialogOpen,\n    setComponent: setProdChangeComponent\n  } = prodChangeDialog;\n  let {\n    setProps: setPaywallDialogProps,\n    setOpen: setPaywallDialogOpen,\n    setComponent: setPaywallComponent\n  } = paywallDialog;\n  const attachWithDialog = async (params) => {\n    const attachWithoutDialog = async (options) => {\n      let { dialog, ...rest } = params;\n      return await attach(rest);\n    };\n    const { productId, entityId, entityData } = params;\n    const checkRes = await client.check({\n      productId,\n      entityId,\n      entityData,\n      withPreview: \"formatted\"\n    });\n    if (checkRes.error) {\n      return checkRes;\n    }\n    let preview = checkRes.data.preview;\n    if (!preview) {\n      return await attachWithoutDialog();\n    } else {\n      setProdChangeDialogProps({\n        preview\n      });\n      setProdChangeDialogOpen(true);\n    }\n    return checkRes;\n  };\n  const attach = async (params) => {\n    const {\n      productId,\n      entityId,\n      options,\n      successUrl,\n      forceCheckout,\n      metadata,\n      dialog,\n      callback,\n      entityData\n    } = params;\n    if (dialog) {\n      setProdChangeComponent(dialog);\n      return await attachWithDialog(params);\n    }\n    const result = await client.attach({\n      productId,\n      entityId,\n      successUrl,\n      forceCheckout,\n      metadata,\n      options,\n      dialog,\n      callback,\n      entityData\n    });\n    if (result.error) {\n      return result;\n    }\n    let data = result.data;\n    if (data?.checkout_url && typeof window !== \"undefined\") {\n      window.open(data.checkout_url, \"_blank\");\n    }\n    try {\n      await callback?.();\n    } catch (error) {\n      return result;\n    }\n    await Promise.all([\n      pricingTableProvider.pricingTableProducts ? pricingTableProvider.refetch().catch((error) => {\n        console.warn(\"Failed to refetch pricing table data\");\n        console.warn(error);\n      }) : Promise.resolve(),\n      customerProvider.refetchFirstTwo()\n    ]);\n    if (setProdChangeDialogOpen) {\n      setProdChangeDialogOpen(false);\n    }\n    return result;\n  };\n  const cancel = async ({\n    productId,\n    entityId\n  }) => {\n    const res = await client.cancel({\n      productId,\n      entityId\n    });\n    if (res.error) {\n      return res;\n    }\n    return res;\n  };\n  const check = async (params) => {\n    let { dialog, withPreview } = params;\n    if (dialog) {\n      setPaywallComponent(dialog);\n    }\n    const res = await client.check({\n      ...params,\n      withPreview: withPreview || dialog ? \"formatted\" : void 0\n    });\n    if (res.error) {\n      return res;\n    }\n    let data = res.data;\n    if (data && data.preview && dialog) {\n      let preview = data.preview;\n      setPaywallDialogProps({\n        preview\n      });\n      setPaywallDialogOpen(true);\n    }\n    return res;\n  };\n  const track = async (params) => {\n    const res = await client.track(params);\n    if (res.error) {\n      return res;\n    }\n    return res;\n  };\n  const openBillingPortal = async (params) => {\n    const res = await client.openBillingPortal(params);\n    if (res.error) {\n      return res;\n    }\n    let data = res.data;\n    if (data?.url && typeof window !== \"undefined\") {\n      window.open(data.url, \"_blank\");\n      return res;\n    } else {\n      return res;\n    }\n  };\n  return {\n    attach,\n    check,\n    track,\n    cancel,\n    openBillingPortal\n  };\n};\n\nexport {\n  useAutumn\n};\n","\"use client\";\n\nimport {\n  useAutumnContext\n} from \"./chunk-2Z7EC4JM.mjs\";\n\n// src/libraries/react/hooks/useCustomer.tsx\nimport { useEffect } from \"react\";\nvar useCustomer = (params) => {\n  const { customerProvider, client } = useAutumnContext();\n  const { getState, refetch } = customerProvider;\n  const { customer, isLoading, error } = getState(params);\n  useEffect(() => {\n    if (!customer) {\n      refetch({ params });\n    }\n  }, []);\n  return {\n    customer,\n    isLoading: isLoading && !customer,\n    error,\n    refetch: async () => {\n      await refetch({ params });\n    },\n    createEntity: client.entities.create\n  };\n};\n\nexport {\n  useCustomer\n};\n","\"use client\";\n\n\n// src/libraries/react/utils/compareParams.ts\nvar compareParams = (a, b) => {\n  if (a === b) return true;\n  if (a === null || b === null) return false;\n  if (typeof a !== \"object\" || typeof b !== \"object\") return false;\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    return a.every((item, index) => compareParams(item, b[index]));\n  }\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  return keysA.every((key) => {\n    if (!Object.prototype.hasOwnProperty.call(b, key)) return false;\n    return compareParams(a[key], b[key]);\n  });\n};\n\nexport {\n  compareParams\n};\n","\"use client\";\n\nimport {\n  compareParams\n} from \"./chunk-VN4AVW2V.mjs\";\nimport {\n  useAutumnContext\n} from \"./chunk-2Z7EC4JM.mjs\";\n\n// src/libraries/react/hooks/useEntity.tsx\nimport { useEffect } from \"react\";\nvar useEntity = (entityId, params) => {\n  const { entityProvider } = useAutumnContext();\n  const {\n    entity,\n    isLoading,\n    error,\n    refetch: refetchEntity,\n    lastParams\n  } = entityProvider;\n  useEffect(() => {\n    if (entityId !== entity?.id || !compareParams(params, lastParams)) {\n      refetchEntity({ entityId, params });\n    }\n  }, [entityId]);\n  return {\n    entity,\n    isLoading: isLoading && !entity,\n    error,\n    refetch: async (params2) => {\n      await refetchEntity({ entityId, params: params2 });\n    }\n  };\n};\n\nexport {\n  useEntity\n};\n","\"use client\";\n\nimport {\n  useAutumnContext\n} from \"./chunk-2Z7EC4JM.mjs\";\n\n// src/libraries/react/hooks/usePricingTable.tsx\nimport { useEffect } from \"react\";\nvar mergeProductDetails = (products, productDetails) => {\n  if (!products) {\n    return null;\n  }\n  if (!productDetails) {\n    return products;\n  }\n  let mergedProducts = structuredClone(products);\n  for (const product of productDetails) {\n    let index = mergedProducts.findIndex((p) => p.id === product.id);\n    if (index == -1) {\n      console.warn(`Product with id ${product.id} not found`);\n      continue;\n    }\n    mergedProducts[index] = {\n      ...mergedProducts[index],\n      ...product\n    };\n  }\n  return mergedProducts;\n};\nvar usePricingTable = (options) => {\n  const { pricingTableProvider } = useAutumnContext();\n  const { pricingTableProducts, isLoading, error, refetch } = pricingTableProvider;\n  useEffect(() => {\n    if (!pricingTableProducts) {\n      refetch();\n    }\n  }, [pricingTableProducts]);\n  return {\n    products: mergeProductDetails(\n      pricingTableProducts || void 0,\n      options?.productDetails\n    ),\n    isLoading: isLoading && !pricingTableProducts,\n    error,\n    refetch\n  };\n};\n\nexport {\n  usePricingTable\n};\n","\"use client\";\n\nimport {\n  AutumnError\n} from \"./chunk-3PQR35T5.mjs\";\n\n// src/libraries/react/hooks/usePricingTableProvider.tsx\nimport { useState } from \"react\";\nvar usePricingTableProvider = ({\n  client\n}) => {\n  const [pricingTableProducts, setPricingTableProducts] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchProducts = async () => {\n    try {\n      setIsLoading(true);\n      const { data, error: error2 } = await client.getPricingTable();\n      if (error2) {\n        setError(error2);\n        setPricingTableProducts(null);\n      } else {\n        setPricingTableProducts(data?.list || []);\n        setError(null);\n      }\n    } catch (error2) {\n      setError(\n        new AutumnError({\n          message: \"Failed to fetch pricing table products\",\n          code: \"failed_to_fetch_pricing_table_products\"\n        })\n      );\n      setPricingTableProducts(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    pricingTableProducts,\n    isLoading: isLoading && !pricingTableProducts,\n    error,\n    refetch: fetchProducts\n  };\n};\n\nexport {\n  usePricingTableProvider\n};\n","\"use client\";\n\n\n// src/libraries/react/hooks/useCustomerProvider.tsx\nimport { useState, useRef } from \"react\";\nfunction useCustomerProvider(client) {\n  const [stateMap, setStateMap] = useState({});\n  const inProgressFetches = useRef({});\n  const getQueryKey = (params) => {\n    return JSON.stringify(params || {});\n  };\n  const getState = (params) => {\n    const queryKey = getQueryKey(params);\n    if (!stateMap[queryKey]) {\n      return {\n        customer: null,\n        isLoading: true,\n        error: null\n      };\n    }\n    return stateMap[queryKey];\n  };\n  const refetch = async ({\n    params,\n    errorOnNotFound = true\n  }) => {\n    const queryKey = getQueryKey(params);\n    if (inProgressFetches.current[queryKey]) {\n      return;\n    }\n    inProgressFetches.current[queryKey] = true;\n    setStateMap((prevState) => ({\n      ...prevState,\n      [queryKey]: {\n        ...prevState[queryKey] || { customer: null },\n        isLoading: true,\n        error: null\n      }\n    }));\n    const { data, error } = await client.createCustomer({\n      expand: params?.expand,\n      errorOnNotFound\n    });\n    let newState = {\n      customer: data,\n      isLoading: false,\n      error\n    };\n    setStateMap((prevState) => ({\n      ...prevState,\n      [queryKey]: newState\n    }));\n    inProgressFetches.current[queryKey] = false;\n  };\n  const refetchFirstTwo = async () => {\n    try {\n      let batchRefetch = [];\n      for (const key of Object.keys(stateMap)) {\n        batchRefetch.push(refetch({ params: JSON.parse(key) }));\n      }\n      await Promise.all(batchRefetch);\n    } catch (error) {\n      console.error(\"Failed to refetch customer (useCustomerProvider)\");\n      console.error(error);\n    }\n  };\n  return {\n    // stateMap,\n    getState,\n    refetch,\n    refetchFirstTwo\n  };\n}\n\nexport {\n  useCustomerProvider\n};\n","\"use client\";\n\n\n// src/libraries/react/hooks/useDialog.tsx\nimport { useState, useEffect } from \"react\";\nvar useDialog = (component) => {\n  const [dialogProps, setDialogProps] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  useEffect(() => {\n    if (!dialogOpen) {\n      setTimeout(() => {\n        setDialogProps(null);\n      }, 200);\n    }\n  }, [dialogOpen]);\n  return [dialogProps, setDialogProps, dialogOpen, setDialogOpen];\n};\n\nexport {\n  useDialog\n};\n","\"use client\";\n\nimport {\n  AutumnError\n} from \"./chunk-3PQR35T5.mjs\";\n\n// src/libraries/react/hooks/useEntityProvider.tsx\nimport { useState } from \"react\";\nvar useEntityProvider = ({ client }) => {\n  const [entity, setEntity] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastParams, setLastParams] = useState(null);\n  const fetchEntity = async ({\n    entityId,\n    params\n  }) => {\n    if (!entityId) {\n      console.warn(\"(Autumn) No entity ID provided in useEntity hook\");\n      return;\n    }\n    setIsLoading(true);\n    setLastParams(params || null);\n    try {\n      const { data, error: error2 } = await client.entities.get(entityId, params);\n      if (error2) {\n        setError(error2);\n        setEntity(null);\n      } else {\n        setEntity(data);\n        setError(null);\n      }\n    } catch (error2) {\n      setError(\n        new AutumnError({\n          message: error2?.message || \"Failed to fetch entity\",\n          code: \"entity_fetch_failed\"\n        })\n      );\n    }\n    setIsLoading(false);\n  };\n  return { entity, isLoading, error, refetch: fetchEntity, lastParams };\n};\n\nexport {\n  useEntityProvider\n};\n","\"use client\";\n\nimport {\n  usePricingTableProvider\n} from \"./chunk-NHKT224P.mjs\";\nimport {\n  useCustomerProvider\n} from \"./chunk-PIIGEXKQ.mjs\";\nimport {\n  useDialog\n} from \"./chunk-4QPHNIQ7.mjs\";\nimport {\n  useEntityProvider\n} from \"./chunk-R3TB4JFJ.mjs\";\nimport {\n  AutumnContext\n} from \"./chunk-2Z7EC4JM.mjs\";\n\n// src/libraries/react/BaseAutumnProvider.tsx\nimport { useEffect, useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction BaseAutumnProvider({\n  client,\n  children\n}) {\n  const [components, setComponents] = useState({});\n  const [paywallProps, setPaywallProps, paywallOpen, setPaywallOpen] = useDialog(components.paywallDialog);\n  const [\n    productChangeProps,\n    setProductChangeProps,\n    productChangeOpen,\n    setProductChangeOpen\n  ] = useDialog(components.productChangeDialog);\n  const customerProvider = useCustomerProvider(client);\n  const entityProvider = useEntityProvider({ client });\n  const {\n    pricingTableProducts,\n    isLoading: pricingTableLoading,\n    error: pricingTableError,\n    refetch\n  } = usePricingTableProvider({\n    client\n  });\n  useEffect(() => {\n    customerProvider.refetch({\n      errorOnNotFound: false\n    });\n  }, []);\n  return /* @__PURE__ */ jsxs(\n    AutumnContext.Provider,\n    {\n      value: {\n        customerProvider,\n        entityProvider,\n        pricingTableProvider: {\n          pricingTableProducts,\n          isLoading: pricingTableLoading,\n          error: pricingTableError,\n          refetch\n        },\n        client,\n        paywallDialog: {\n          props: paywallProps,\n          setProps: setPaywallProps,\n          open: paywallOpen,\n          setOpen: setPaywallOpen,\n          setComponent: (component) => {\n            setComponents({\n              ...components,\n              paywallDialog: component\n            });\n          }\n        },\n        prodChangeDialog: {\n          props: productChangeProps,\n          setProps: setProductChangeProps,\n          open: productChangeOpen,\n          setOpen: setProductChangeOpen,\n          setComponent: (component) => {\n            setComponents({\n              ...components,\n              productChangeDialog: component\n            });\n          }\n        }\n      },\n      children: [\n        components.paywallDialog && /* @__PURE__ */ jsx(\n          components.paywallDialog,\n          {\n            open: paywallOpen,\n            setOpen: setPaywallOpen,\n            ...paywallProps\n          }\n        ),\n        components.productChangeDialog && /* @__PURE__ */ jsx(\n          components.productChangeDialog,\n          {\n            open: productChangeOpen,\n            setOpen: setProductChangeOpen,\n            ...productChangeProps\n          }\n        ),\n        children\n      ]\n    }\n  );\n}\n\nexport {\n  BaseAutumnProvider\n};\n","\"use client\";\n\nimport {\n  BaseAutumnProvider\n} from \"./chunk-ELS2JOCO.mjs\";\nimport {\n  AutumnClient\n} from \"./chunk-VY7I5OWG.mjs\";\n\n// src/libraries/react/ReactAutumnProvider.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar ReactAutumnProvider = ({\n  children,\n  getBearerToken,\n  backendUrl,\n  customerData,\n  includeCredentials = true\n}) => {\n  let client = new AutumnClient({\n    backendUrl,\n    getBearerToken,\n    customerData,\n    includeCredentials\n  });\n  return /* @__PURE__ */ jsx(BaseAutumnProvider, { client, children });\n};\n\nexport {\n  ReactAutumnProvider\n};\n","\"use client\";\n\nimport {\n  useAutumn\n} from \"./chunk-RLTE5H53.mjs\";\nimport {\n  useCustomer\n} from \"./chunk-VXGVATJ5.mjs\";\nimport {\n  useEntity\n} from \"./chunk-YF5TB4XK.mjs\";\nimport \"./chunk-VN4AVW2V.mjs\";\nimport {\n  usePricingTable\n} from \"./chunk-4G7CGF2R.mjs\";\nimport {\n  ReactAutumnProvider\n} from \"./chunk-D2YRPPOL.mjs\";\nimport \"./chunk-ELS2JOCO.mjs\";\nimport \"./chunk-NHKT224P.mjs\";\nimport \"./chunk-PIIGEXKQ.mjs\";\nimport \"./chunk-4QPHNIQ7.mjs\";\nimport \"./chunk-R3TB4JFJ.mjs\";\nimport \"./chunk-2Z7EC4JM.mjs\";\nimport \"./chunk-VY7I5OWG.mjs\";\nimport \"./chunk-LS3NB4DU.mjs\";\nimport \"./chunk-3PQR35T5.mjs\";\nimport \"./chunk-NZ5PEXT2.mjs\";\nimport \"./chunk-TGX6UKKS.mjs\";\nimport \"./chunk-4KKWHG2V.mjs\";\nimport \"./chunk-ZNPQQ2WK.mjs\";\nexport {\n  ReactAutumnProvider as AutumnProvider,\n  useAutumn,\n  useCustomer,\n  useEntity,\n  usePricingTable\n};\n","import type { AllowedPropertyValues, AnalyticsProps, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest }\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown> | undefined,\n  options: {\n    strip?: boolean;\n  }\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  if (!properties) return undefined;\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', '\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: AnalyticsProps & { basePath?: string }\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/script.debug.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/insights/script.js`;\n  }\n  return '/_vercel/insights/script.js';\n}\n","'use client';\nimport React, { Suspense, type ReactNode } from 'react';\nimport { Analytics as AnalyticsScript } from '../react';\nimport type { AnalyticsProps, BeforeSend, BeforeSendEvent } from '../types';\nimport { getBasePath, useRoute } from './utils';\n\ntype Props = Omit<AnalyticsProps, 'route' | 'disableAutoTrack'>;\n\nfunction AnalyticsComponent(props: Props): ReactNode {\n  const { route, path } = useRoute();\n  return (\n    <AnalyticsScript\n      path={path}\n      route={route}\n      {...props}\n      basePath={getBasePath()}\n      framework=\"next\"\n    />\n  );\n}\n\nexport function Analytics(props: Props): null {\n  // Because of incompatible types between ReactNode in React 19 and React 18 we return null (which is also what we render)\n  return (\n    <Suspense fallback={null}>\n      <AnalyticsComponent {...props} />\n    </Suspense>\n  ) as never;\n}\n\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n","'use client';\n/* eslint-disable @typescript-eslint/no-unnecessary-condition -- can be empty in pages router */\nimport { useParams, usePathname, useSearchParams } from 'next/navigation.js';\nimport { computeRoute } from '../utils';\n\nexport const useRoute = (): {\n  route: string | null;\n  path: string;\n} => {\n  const params = useParams();\n  const searchParams = useSearchParams();\n  const path = usePathname();\n\n  // Until we have route parameters, we don't compute the route\n  if (!params) {\n    return { route: null, path };\n  }\n  // in Next.js@13, useParams() could return an empty object for pages router, and we default to searchParams.\n  const finalParams = Object.keys(params).length\n    ? params\n    : Object.fromEntries(searchParams.entries());\n  return { route: computeRoute(path, finalParams), path };\n};\n\nexport function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.NEXT_PUBLIC_VERCEL_OBSERVABILITY_BASEPATH;\n}\n","{\n  \"name\": \"@vercel/analytics\",\n  \"version\": \"1.5.0\",\n  \"description\": \"Gain real-time traffic insights with Vercel Web Analytics\",\n  \"keywords\": [\n    \"analytics\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/analytics\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"MPL-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./server\": {\n      \"node\": \"./dist/server/index.mjs\",\n      \"edge-light\": \"./dist/server/index.mjs\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"server\": [\n        \"dist/server/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"@vercel/eslint-config\"\n    ],\n    \"rules\": {\n      \"tsdoc/syntax\": \"off\"\n    },\n    \"ignorePatterns\": [\n      \"jest.setup.ts\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.0\",\n    \"@types/react\": \"^18.3.12\",\n    \"@vercel/eslint-config\": \"workspace:0.0.0\",\n    \"server-only\": \"^0.0.1\",\n    \"svelte\": \"^5.1.10\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.12\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2\",\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@remix-run/react\": {\n      \"optional\": true\n    },\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type {\n  AllowedPropertyValues,\n  AnalyticsProps,\n  FlagsDataInput,\n  BeforeSend,\n  BeforeSendEvent,\n} from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n  computeRoute,\n  getScriptSrc,\n} from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n * @param [props.disableAutoTrack] - Whether the injected script should track page views from pushState events. Disable if route is updated after pushState, a manually call page pageview().\n */\nfunction inject(\n  props: AnalyticsProps & {\n    framework?: string;\n    disableAutoTrack?: boolean;\n    basePath?: string;\n  } = {\n    debug: true,\n  }\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = '1';\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/insights`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = (): void => {\n    const errorMessage = isDevelopment()\n      ? 'Please check if any ad blockers are enabled and try again.'\n      : 'Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.';\n\n    // eslint-disable-next-line no-console -- Logging to console is intentional\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nfunction track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n  options?: {\n    flags?: FlagsDataInput;\n  }\n): void {\n  if (!isBrowser()) {\n    const msg =\n      '[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment';\n\n    if (isProduction()) {\n      // eslint-disable-next-line no-console -- Show warning in production\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name, options });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n      options,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console -- Logging to console is intentional\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview({\n  route,\n  path,\n}: {\n  route?: string | null;\n  path?: string;\n}): void {\n  window.va?.('pageview', { route, path });\n}\n\nexport { inject, track, pageview, computeRoute };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n\n// eslint-disable-next-line import/no-default-export -- Default export is intentional\nexport default {\n  inject,\n  track,\n  computeRoute,\n};\n","export function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n}\n","'use client';\nimport { useEffect } from 'react';\nimport { inject, track, pageview } from '../generic';\nimport type { AnalyticsProps, BeforeSend, BeforeSendEvent } from '../types';\nimport { getBasePath } from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @example\n * ```js\n * import { Analytics } from '@vercel/analytics/react';\n *\n * export default function App() {\n *  return (\n *   <div>\n *    <Analytics />\n *    <h1>My App</h1>\n *  </div>\n * );\n * }\n * ```\n */\nfunction Analytics(\n  props: AnalyticsProps & {\n    framework?: string;\n    route?: string | null;\n    path?: string | null;\n    basePath?: string;\n  }\n): null {\n  useEffect(() => {\n    if (props.beforeSend) {\n      window.va?.('beforeSend', props.beforeSend);\n    }\n  }, [props.beforeSend]);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only run once\n  useEffect(() => {\n    inject({\n      framework: props.framework || 'react',\n      basePath: props.basePath ?? getBasePath(),\n      ...(props.route !== undefined && { disableAutoTrack: true }),\n      ...props,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only run once\n  }, []);\n\n  useEffect(() => {\n    // explicitely track page view, since we disabled auto tracking\n    if (props.route && props.path) {\n      pageview({ route: props.route, path: props.path });\n    }\n  }, [props.route, props.path]);\n\n  return null;\n}\n\nexport { track, Analytics };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n","'use client'\n\nimport * as Devtools from './ReactQueryDevtools'\nimport * as DevtoolsPanel from './ReactQueryDevtoolsPanel'\n\nexport const ReactQueryDevtools: (typeof Devtools)['ReactQueryDevtools'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : Devtools.ReactQueryDevtools\n\nexport const ReactQueryDevtoolsPanel: (typeof DevtoolsPanel)['ReactQueryDevtoolsPanel'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : DevtoolsPanel.ReactQueryDevtoolsPanel\n","import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { DefaultError, MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Set<Mutation<any, any, any, any>>\n  #scopes: Map<string, Array<Mutation<any, any, any, any>>>\n  #mutationId: number\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = new Set()\n    this.#scopes = new Map()\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.add(mutation)\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const scopedMutations = this.#scopes.get(scope)\n      if (scopedMutations) {\n        scopedMutations.push(mutation)\n      } else {\n        this.#scopes.set(scope, [mutation])\n      }\n    }\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation)\n      if (typeof scope === 'string') {\n        const scopedMutations = this.#scopes.get(scope)\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation)\n            if (index !== -1) {\n              scopedMutations.splice(index, 1)\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope)\n          }\n        }\n      }\n    }\n\n    // Currently we notify the removal even if the mutation was already removed.\n    // Consider making this an error or not notifying of the removal depending on the desired semantics.\n    this.notify({ type: 'removed', mutation })\n  }\n\n  canRun(mutation: Mutation<any, any, any, any>): boolean {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const mutationsWithSameScope = this.#scopes.get(scope)\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === 'pending',\n      )\n      // we can run if there is no current pending mutation (start use-case)\n      // or if WE are the first pending mutation (continue use-case)\n      return !firstPendingMutation || firstPendingMutation === mutation\n    } else {\n      // For unscoped mutations there are never any pending mutations in front of the\n      // current mutation\n      return true\n    }\n  }\n\n  runNext(mutation: Mutation<any, any, any, any>): Promise<unknown> {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const foundMutation = this.#scopes\n        .get(scope)\n        ?.find((m) => m !== mutation && m.state.isPaused)\n\n      return foundMutation?.continue() ?? Promise.resolve()\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: 'removed', mutation })\n      })\n      this.#mutations.clear()\n      this.#scopes.clear()\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return Array.from(this.#mutations)\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TContext = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    ) as Mutation<TData, TError, TVariables, TContext> | undefined\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused)\n\n    return notifyManager.batch(() =>\n      Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop)),\n      ),\n    )\n  }\n}\n\nfunction scopeFor(mutation: Mutation<any, any, any, any>) {\n  return mutation.options.scope?.id\n}\n","import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const createQueryFnContext = () => {\n            const queryFnContext: OmitKeyof<\n              QueryFunctionContext<QueryKey, unknown>,\n              'signal'\n            > = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? 'backward' : 'forward',\n              meta: context.options.meta,\n            }\n            addSignalProperty(queryFnContext)\n            return queryFnContext as QueryFunctionContext<QueryKey, unknown>\n          }\n\n          const queryFnContext = createQueryFnContext()\n\n          const page = await queryFn(queryFnContext)\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n","import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureInfiniteQueryDataOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InferDataFromTag,\n  InferErrorFromTag,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  NoInfer,\n  OmitKeyof,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { QueryState } from './query'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: OmitKeyof<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching<TQueryFilters extends QueryFilters<any> = QueryFilters>(\n    filters?: TQueryFilters,\n  ): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating<\n    TMutationFilters extends MutationFilters<any, any> = MutationFilters,\n  >(filters?: TMutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n\n    return this.#queryCache.get<TInferredQueryFnData>(options.queryHash)?.state\n      .data\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n    const query = this.#queryCache.build(this, defaultedOptions)\n    const cachedData = query.state.data\n\n    if (cachedData === undefined) {\n      return this.fetchQuery(options)\n    }\n\n    if (\n      options.revalidateIfStale &&\n      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))\n    ) {\n      void this.prefetchQuery(defaultedOptions)\n    }\n\n    return Promise.resolve(cachedData)\n  }\n\n  getQueriesData<\n    TQueryFnData = unknown,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(filters: TQueryFilters): Array<[QueryKey, TQueryFnData | undefined]> {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data as TQueryFnData | undefined\n      return [queryKey, data]\n    })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): NoInfer<TInferredQueryFnData> | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<\n    TQueryFnData,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(\n    filters: TQueryFilters,\n    updater: Updater<\n      NoInfer<TQueryFnData> | undefined,\n      NoInfer<TQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TInferredError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TInferredError>(\n      options.queryHash,\n    )?.state\n  }\n\n  removeQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n  ): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    options?: ResetOptions,\n  ): Promise<void> {\n    const queryCache = this.#queryCache\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(\n        {\n          type: 'active',\n          ...filters,\n        },\n        options,\n      )\n    })\n  }\n\n  cancelQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: InvalidateQueryFilters<TTaggedQueryKey>,\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters?.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? 'active',\n        },\n        options,\n      )\n    })\n  }\n\n  refetchQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: RefetchQueryFilters<TTaggedQueryKey>,\n    options: RefetchOptions = {},\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled() && !query.isStatic())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query),\n    )\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options as any)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  ensureInfiniteQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: EnsureInfiniteQueryDataOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n\n    return this.ensureQueryData(options as any)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n  >(\n    queryKey: QueryKey,\n    options: Partial<\n      OmitKeyof<\n        QueryObserverOptions<TQueryFnData, TError, TData, TQueryData>,\n        'queryKey'\n      >\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): OmitKeyof<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    const result: OmitKeyof<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = void,\n    TContext = unknown,\n  >(\n    mutationKey: MutationKey,\n    options: OmitKeyof<\n      MutationObserverOptions<TData, TError, TVariables, TContext>,\n      'mutationKey'\n    >,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): OmitKeyof<MutationObserverOptions<any, any, any, any>, 'mutationKey'> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    const result: OmitKeyof<\n      MutationObserverOptions<any, any, any, any>,\n      'mutationKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n","/**\n * Centralized React Query client configuration for the entire application.\n * Provides consistent defaults for caching, retries, and refetch behavior.\n * Used by QueryProvider to enable react-query functionality app-wide.\n */\nimport { QueryClient } from '@tanstack/react-query'\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      // Stale time: 5 minutes - data is considered fresh for 5 minutes\n      staleTime: 5 * 60 * 1000,\n      // Cache time: 10 minutes - data stays in cache for 10 minutes after becoming unused\n      gcTime: 10 * 60 * 1000,\n      // Retry failed requests 3 times with exponential backoff\n      retry: 3,\n      // Refetch on window focus for fresh data\n      refetchOnWindowFocus: true,\n      // Refetch on reconnect\n      refetchOnReconnect: true,\n      // Don't refetch on mount if data is fresh\n      refetchOnMount: true,\n    },\n    mutations: {\n      // Retry failed mutations once\n      retry: 1,\n    },\n  },\n}) ","'use client'\n\nimport { QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\nimport { queryClient } from '@/lib/query-client'\n\ninterface QueryProviderProps {\n  children: React.ReactNode\n}\n\nexport function QueryProvider({ children }: QueryProviderProps) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {/* Only show devtools in development */}\n      {process.env.NODE_ENV === 'development' && (\n        <ReactQueryDevtools initialIsOpen={false} />\n      )}\n    </QueryClientProvider>\n  )\n} "],"names":["queryFnContext","context","getBasePath","Analytics","ReactQueryDevtools","ReactQueryDevtoolsPanel"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]}