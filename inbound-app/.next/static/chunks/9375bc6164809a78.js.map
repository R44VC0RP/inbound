{"version":3,"sources":["turbopack:///[project]/app/actions/data:2770c6 <text/javascript>","turbopack:///[project]/app/actions/data:08fc37 <text/javascript>","turbopack:///[project]/app/actions/data:155f94 <text/javascript>","turbopack:///[project]/app/(main)/vip/vip-page-client.tsx"],"sourcesContent":["/* __next_internal_action_entry_do_not_use__ [{\"60da52dde5a2616fa146bcde823ecad23fe1644322\":\"toggleVipStatus\"},\"app/actions/vip.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var toggleVipStatus=/*#__PURE__*/createServerReference(\"60da52dde5a2616fa146bcde823ecad23fe1644322\",callServer,void 0,findSourceMapURL,\"toggleVipStatus\");","/* __next_internal_action_entry_do_not_use__ [{\"600958c8c97bc2260e7a61a589de77ee3220ef2a36\":\"updateVipConfig\"},\"app/actions/vip.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var updateVipConfig=/*#__PURE__*/createServerReference(\"600958c8c97bc2260e7a61a589de77ee3220ef2a36\",callServer,void 0,findSourceMapURL,\"updateVipConfig\");","/* __next_internal_action_entry_do_not_use__ [{\"401aa170a6c916d095059400d40e8925ec001c2a85\":\"updateAccountStripeKey\"},\"app/actions/vip.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var updateAccountStripeKey=/*#__PURE__*/createServerReference(\"401aa170a6c916d095059400d40e8925ec001c2a85\",callServer,void 0,findSourceMapURL,\"updateAccountStripeKey\");","'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Switch } from '@/components/ui/switch'\nimport { Textarea } from '@/components/ui/textarea'\nimport { formatDistanceToNow } from 'date-fns'\nimport Crown from '@/components/icons/crown'\nimport { toggleVipStatus, updateVipConfig, updateAccountStripeKey } from '@/app/actions/vip'\nimport { toast } from 'sonner'\nimport { CustomInboundIcon } from '@/components/icons/customInbound'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport ChevronDown from '@/components/icons/chevron-down'\nimport Gear2 from '@/components/icons/gear-2'\nimport CircleCheck from '@/components/icons/circle-check'\nimport Clock2 from '@/components/icons/clock-2'\nimport Link from 'next/link'\nimport { useAutumn, useCustomer } from 'autumn-js/react'\nimport ProductChangeDialog from '@/components/autumn/product-change-dialog'\nimport { useRouter, useSearchParams } from 'next/navigation'\n\ninterface VipPageClientProps {\n  addresses: Array<{\n    emailAddress: any\n    domain: any\n    vipConfig: any\n  }>\n  recentSessions: Array<{\n    session: any\n    config: any\n    emailAddress: any\n  }>\n  allowedCountMap: Record<string, number>\n  hasVipByok: boolean\n  accountStripeKey: string | null\n  emailAttempts: Array<{\n    attempt: any\n    paymentSession: any\n    vipConfig: any\n    emailAddress: any\n  }>\n}\n\nexport default function VipPageClient({\n  addresses,\n  recentSessions,\n  allowedCountMap,\n  hasVipByok,\n  accountStripeKey,\n  emailAttempts,\n}: VipPageClientProps) {\n  const [isUpdating, setIsUpdating] = useState<string | null>(null)\n  const [expandedConfigs, setExpandedConfigs] = useState<Record<string, boolean>>({})\n  const { attach } = useAutumn()\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  const handleToggleVip = async (emailAddressId: string, isEnabled: boolean) => {\n    setIsUpdating(emailAddressId)\n    try {\n      const result = await toggleVipStatus(emailAddressId, isEnabled)\n      if (result.error) {\n        toast.error(result.error)\n      } else {\n        toast.success(isEnabled ? 'VIP protection enabled' : 'VIP protection disabled')\n      }\n    } catch (error) {\n      toast.error('Failed to update VIP status')\n    } finally {\n      setIsUpdating(null)\n    }\n  }\n\n  const handleUpdateConfig = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const formData = new FormData(e.currentTarget)\n    const vipConfigId = formData.get('vipConfigId') as string\n    \n    setIsUpdating(vipConfigId)\n    try {\n      const result = await updateVipConfig(vipConfigId, {\n        price: formData.get('price') as string,\n        expirationHours: formData.get('expirationHours') as string,\n        allowAfterPayment: formData.get('allowAfterPayment') === 'on',\n        customMessage: formData.get('customMessage') as string,\n      })\n      \n      if (result.error) {\n        toast.error(result.error)\n      } else {\n        toast.success('VIP configuration updated')\n      }\n    } catch (error) {\n      toast.error('Failed to update VIP configuration')\n    } finally {\n      setIsUpdating(null)\n    }\n  }\n\n  const handleUpdateAccountStripeKey = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const formData = new FormData(e.currentTarget)\n    const stripeKey = formData.get('accountStripeKey') as string\n    \n    setIsUpdating('account-stripe-key')\n    try {\n      const result = await updateAccountStripeKey(stripeKey)\n      \n      if (result.error) {\n        toast.error(result.error)\n      } else {\n        toast.success('Account Stripe key updated')\n        // Close the form if we're replacing a key\n        setExpandedConfigs(prev => ({ ...prev, 'stripe-key-form': false }))\n        // Reset the form\n        e.currentTarget.reset()\n      }\n    } catch (error) {\n      toast.error('Failed to update account Stripe key')\n    } finally {\n      setIsUpdating(null)\n    }\n  }\n\n  const toggleExpanded = (configId: string) => {\n    setExpandedConfigs(prev => ({\n      ...prev,\n      [configId]: !prev[configId]\n    }))\n  }\n\n  const handleUpgradeToVipByok = async () => {\n    try {\n      await attach({\n        productId: \"inbound_vip\",\n        successUrl: `${window.location.origin}/vip?upgrade=true`,\n        dialog: ProductChangeDialog,\n      })\n    } catch (error) {\n      console.error('Error upgrading to VIP BYOK:', error)\n      toast.error('Failed to start upgrade process')\n    }\n  }\n\n  // Check for upgrade success parameter\n  useEffect(() => {\n    const upgradeParam = searchParams.get('upgrade')\n    if (upgradeParam === 'true') {\n      toast.success('Successfully upgraded to VIP BYOK! You can now use your own Stripe key.')\n      // Remove the parameter from URL without reloading\n      const newUrl = new URL(window.location.href)\n      newUrl.searchParams.delete('upgrade')\n      router.replace(newUrl.pathname + newUrl.search)\n    }\n  }, [searchParams, router])\n\n  return (\n    <div className=\"min-h-screen font-outfit\">\n      <div className=\"max-w-6xl mx-auto p-4\">\n        {/* Header Section */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-2xl font-semibold text-foreground mb-1 tracking-tight\">\n                VIP Email Management\n              </h2>\n              <p className=\"text-muted-foreground text-sm font-medium\">\n                Require payment from new senders to reach your inbox\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              {/* Stripe Key Status Indicator */}\n              {hasVipByok && accountStripeKey && (\n                <div className=\"flex items-center space-x-2 px-3 py-2 bg-accent border border-border rounded-lg\">\n                  <CircleCheck width=\"16\" height=\"16\" className=\"text-green-600 dark:text-green-400\" />\n                  <div className=\"text-sm\">\n                    <span className=\"font-medium text-foreground\">Stripe Key Loaded: </span>\n                    <span className=\"text-muted-foreground\">{accountStripeKey.substring(0, 5)}•••••</span>\n                  </div>\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\"\n                    className=\"h-6 px-2 text-xs\"\n                    onClick={() => setExpandedConfigs(prev => ({ ...prev, 'stripe-key-form': !prev['stripe-key-form'] }))}\n                  >\n                    Replace\n                  </Button>\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\"\n                    className=\"h-6 px-2 text-xs text-destructive hover:text-destructive/80\"\n                    onClick={async () => {\n                      if (confirm('Are you sure you want to remove your Stripe key? Future VIP payments will be processed through Inbound\\'s account.')) {\n                        setIsUpdating('account-stripe-key')\n                        try {\n                          const result = await updateAccountStripeKey('')\n                          if (result.error) {\n                            toast.error(result.error)\n                          } else {\n                            toast.success('Stripe key removed. Using Inbound\\'s account for VIP payments.')\n                          }\n                        } catch (error) {\n                          toast.error('Failed to remove Stripe key')\n                        } finally {\n                          setIsUpdating(null)\n                        }\n                      }\n                    }}\n                    disabled={isUpdating === 'account-stripe-key'}\n                  >\n                    Remove\n                  </Button>\n                </div>\n              )}\n              {!hasVipByok && (\n                <Button variant=\"outline\" size=\"sm\" onClick={handleUpgradeToVipByok}>\n                  <Crown className=\"h-3 w-3 mr-1.5 text-yellow-500\" />\n                  Upgrade to VIP BYOK\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Collapsible Stripe Key Replacement Form */}\n        {hasVipByok && accountStripeKey && expandedConfigs['stripe-key-form'] && (\n          <Card className=\"bg-card border-border rounded-xl mb-6\">\n            <CardHeader>\n              <CardTitle className=\"text-lg font-semibold text-foreground tracking-tight\">\n                Replace Stripe Key\n              </CardTitle>\n              <CardDescription className=\"text-sm text-muted-foreground\">\n                Update your Stripe restricted key for VIP payments\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleUpdateAccountStripeKey} className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"accountStripeKey\" className=\"text-sm font-medium\">\n                    New Stripe Restricted Key\n                  </Label>\n                  <Input\n                    id=\"accountStripeKey\"\n                    name=\"accountStripeKey\"\n                    type=\"password\"\n                    placeholder=\"rk_live_...\"\n                    className=\"mt-1\"\n                  />\n                  <div className=\"mt-2 flex items-center justify-between\">\n                    <p className=\"text-xs text-muted-foreground\">\n                      Enter your new Stripe restricted key\n                    </p>\n                    <Button \n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"text-xs p-0 h-auto text-primary hover:text-primary/80\"\n                      onClick={() => window.open('https://dashboard.stripe.com/apikeys/create?name=Inbound%20VIP&permissions%5B%5D=rak_charge_write&permissions%5B%5D=rak_checkout_session_write&permissions%5B%5D=rak_payment_link_write', '_blank')}\n                    >\n                      Create in Stripe →\n                    </Button>\n                  </div>\n                </div>\n                <div className=\"flex justify-end space-x-2\">\n                  <Button \n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setExpandedConfigs(prev => ({ ...prev, 'stripe-key-form': false }))}\n                  >\n                    Cancel\n                  </Button>\n                  <Button \n                    type=\"submit\" \n                    size=\"sm\"\n                    disabled={isUpdating === 'account-stripe-key'}\n                  >\n                    {isUpdating === 'account-stripe-key' ? 'Saving...' : 'Update Key'}\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Account Settings - Only show when no Stripe key is configured */}\n        {hasVipByok && !accountStripeKey && (\n          <Card className=\"bg-card border-border rounded-xl mb-6\">\n            <CardHeader>\n              <CardTitle className=\"text-lg font-semibold text-foreground tracking-tight\">\n                Account Settings\n              </CardTitle>\n              <CardDescription className=\"text-sm text-muted-foreground\">\n                Configure your account-level VIP settings\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"p-4 bg-muted border border-border rounded-lg\">\n                  <div className=\"flex items-start space-x-3\">\n                    <Clock2 width=\"20\" height=\"20\" className=\"text-orange-600 dark:text-orange-400 mt-0.5\" />\n                    <div>\n                      <p className=\"text-sm font-medium text-foreground\">\n                        Using Inbound's Stripe Account\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        VIP payments are currently processed through Inbound's Stripe account. Add your own Stripe restricted key to collect payments directly.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <form onSubmit={handleUpdateAccountStripeKey} className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"accountStripeKey\" className=\"text-sm font-medium\">\n                      Account Stripe Restricted Key (Optional)\n                    </Label>\n                    <Input\n                      id=\"accountStripeKey\"\n                      name=\"accountStripeKey\"\n                      type=\"password\"\n                      placeholder=\"rk_live_...\"\n                      className=\"mt-1\"\n                    />\n                    <div className=\"mt-2 flex items-center justify-between\">\n                      <p className=\"text-xs text-muted-foreground\">\n                        Use your own Stripe account to collect VIP payments directly\n                      </p>\n                      <Button \n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-xs p-0 h-auto text-primary hover:text-primary/80\"\n                        onClick={() => window.open('https://dashboard.stripe.com/apikeys/create?name=Inbound%20VIP&permissions%5B%5D=rak_charge_write&permissions%5B%5D=rak_checkout_session_write&permissions%5B%5D=rak_payment_link_write', '_blank')}\n                      >\n                        Create Restricted Key in Stripe →\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-end\">\n                    <Button \n                      type=\"submit\" \n                      size=\"sm\"\n                      disabled={isUpdating === 'account-stripe-key'}\n                    >\n                      {isUpdating === 'account-stripe-key' ? 'Saving...' : 'Add Stripe Key'}\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* VIP Email Addresses */}\n        <div className=\"space-y-2 mb-6\">\n          {addresses.length === 0 ? (\n            <Card className=\"bg-card border-border rounded-xl\">\n              <CardContent className=\"p-8\">\n                <div className=\"text-center\">\n                  <CustomInboundIcon\n                    Icon={Crown}\n                    size={48}\n                    backgroundColor=\"#eab308\"\n                    className=\"mx-auto mb-4\"\n                  />\n                  <p className=\"text-sm text-muted-foreground mb-4\">\n                    No email addresses configured. Add email addresses in the Domains section first.\n                  </p>\n                  <Button variant=\"secondary\" asChild>\n                    <Link href=\"/emails\">\n                      Go to Domains\n                    </Link>\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            addresses.map(({ emailAddress, domain, vipConfig }) => (\n              <Card key={emailAddress.id} className=\"bg-card border-border hover:bg-accent/5 transition-all duration-300 rounded-xl overflow-hidden group\">\n                <CardContent className=\"p-0\">\n                  {/* Email Address Header */}\n                  <div className=\"p-4 border-b border-border\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <CustomInboundIcon\n                          Icon={Envelope2}\n                          size={36}\n                          backgroundColor={emailAddress.isVipEnabled ? '#eab308' : '#64748b'}\n                        />\n                        <div>\n                          <h3 className=\"text-base font-semibold text-foreground tracking-tight\">\n                            {emailAddress.address}\n                          </h3>\n                          <div className=\"flex items-center space-x-2 mt-0.5\">\n                            <span className=\"text-xs text-muted-foreground font-medium\">\n                              {domain?.domain || 'Unknown domain'}\n                            </span>\n                            {emailAddress.isVipEnabled && vipConfig && (\n                              <>\n                                <span className=\"text-xs text-muted-foreground font-medium\">•</span>\n                                <span className=\"text-xs text-muted-foreground font-medium\">\n                                  ${(vipConfig.priceInCents / 100).toFixed(2)} per email\n                                </span>\n                                <span className=\"text-xs text-muted-foreground font-medium\">•</span>\n                                <span className=\"text-xs text-muted-foreground font-medium\">\n                                  {allowedCountMap[vipConfig.id] || 0} allowed senders\n                                </span>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {emailAddress.isVipEnabled && vipConfig && (\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => toggleExpanded(vipConfig.id)}\n                            className=\"h-8 px-2\"\n                          >\n                            <Gear2 width=\"14\" height=\"14\" className=\"mr-1\" />\n                            Config\n                            <ChevronDown \n                              width=\"14\" \n                              height=\"14\" \n                              className={`ml-1 transition-transform duration-200 ${\n                                expandedConfigs[vipConfig.id] ? 'rotate-180' : ''\n                              }`}\n                            />\n                          </Button>\n                        )}\n                        <Switch\n                          checked={emailAddress.isVipEnabled || false}\n                          disabled={isUpdating === emailAddress.id}\n                          onCheckedChange={(checked) => handleToggleVip(emailAddress.id, checked)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Expandable Configuration */}\n                  {emailAddress.isVipEnabled && vipConfig && (\n                    <div\n                      className=\"bg-muted/50 overflow-hidden transition-all duration-300 ease-in-out\"\n                      style={{\n                        maxHeight: expandedConfigs[vipConfig.id] ? '400px' : '0px',\n                        opacity: expandedConfigs[vipConfig.id] ? 1 : 0\n                      }}\n                    >\n                      <form onSubmit={handleUpdateConfig} className=\"p-4 space-y-4\">\n                        <input type=\"hidden\" name=\"vipConfigId\" value={vipConfig.id} />\n                        \n                        <div className=\"grid grid-cols-2 gap-4\">\n                          <div>\n                            <Label htmlFor={`price-${vipConfig.id}`} className=\"text-xs\">Price (USD)</Label>\n                            <div className=\"relative mt-1\">\n                              <span className=\"absolute left-2.5 top-1/2 -translate-y-1/2 text-muted-foreground text-sm\">$</span>\n                              <Input\n                                id={`price-${vipConfig.id}`}\n                                name=\"price\"\n                                type=\"number\"\n                                step=\"0.01\"\n                                min=\"0.01\"\n                                defaultValue={(vipConfig.priceInCents / 100).toFixed(2)}\n                                className=\"pl-7 h-8 text-sm\"\n                              />\n                            </div>\n                          </div>\n                          \n                          <div>\n                            <Label htmlFor={`expiration-${vipConfig.id}`} className=\"text-xs\">Link Expiration (hours)</Label>\n                            <Input\n                              id={`expiration-${vipConfig.id}`}\n                              name=\"expirationHours\"\n                              type=\"number\"\n                              min=\"1\"\n                              max=\"168\"\n                              defaultValue={vipConfig.paymentLinkExpirationHours || 24}\n                              className=\"h-8 text-sm mt-1\"\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch\n                            id={`allow-future-${vipConfig.id}`}\n                            name=\"allowAfterPayment\"\n                            defaultChecked={vipConfig.allowAfterPayment || false}\n                          />\n                          <Label htmlFor={`allow-future-${vipConfig.id}`} className=\"text-sm\">\n                            Allow all future emails after payment\n                          </Label>\n                        </div>\n\n                        <div>\n                          <Label htmlFor={`message-${vipConfig.id}`} className=\"text-xs\">Custom Message (optional)</Label>\n                          <Textarea\n                            id={`message-${vipConfig.id}`}\n                            name=\"customMessage\"\n                            placeholder=\"Add a custom message to the payment request email...\"\n                            defaultValue={vipConfig.customMessage || ''}\n                            rows={2}\n                            className=\"text-sm mt-1\"\n                          />\n                        </div>\n\n\n\n                        <div className=\"flex justify-end pt-2\">\n                          <Button \n                            type=\"submit\" \n                            size=\"sm\"\n                            disabled={isUpdating === vipConfig.id}\n                          >\n                            {isUpdating === vipConfig.id ? 'Saving...' : 'Save Changes'}\n                          </Button>\n                        </div>\n                      </form>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))\n          )}\n        </div>\n\n        {/* VIP Email Attempts Log */}\n        <div className=\"mt-8\">\n          <h3 className=\"text-lg font-semibold text-foreground mb-3\">VIP Email Log</h3>\n          <p className=\"text-sm text-muted-foreground mb-4\">\n            Track all emails that hit your VIP protection and their payment status\n          </p>\n          {emailAttempts.length > 0 ? (\n            <Card className=\"bg-card border-border rounded-xl\">\n              <Table>\n                <TableHeader>\n                  <TableRow className=\"border-b border-border\">\n                    <TableHead className=\"text-xs\">Sender</TableHead>\n                    <TableHead className=\"text-xs\">Recipient</TableHead>\n                    <TableHead className=\"text-xs\">Subject</TableHead>\n                    <TableHead className=\"text-xs\">Status</TableHead>\n                    <TableHead className=\"text-xs\">Payment Status</TableHead>\n                    <TableHead className=\"text-xs text-right\">Received</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {emailAttempts.map(({ attempt, paymentSession }) => (\n                    <TableRow key={attempt.id} className=\"border-b border-border\">\n                      <TableCell className=\"text-sm py-3\">\n                        <div className=\"max-w-[150px] truncate\">\n                          {attempt.senderEmail}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-sm py-3\">\n                        <div className=\"max-w-[150px] truncate\">\n                          {attempt.recipientEmail}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-sm py-3\">\n                        <div className=\"max-w-[200px] truncate\">\n                          {attempt.emailSubject || 'No subject'}\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"py-3\">\n                        <Badge\n                          variant={\n                            attempt.status === 'allowed' \n                              ? 'secondary' \n                              : attempt.status === 'payment_required'\n                              ? 'outline'\n                              : 'secondary'\n                          }\n                          className=\"text-xs\"\n                        >\n                          {attempt.status === 'allowed' && <CircleCheck width=\"10\" height=\"10\" className=\"mr-1\" />}\n                          {attempt.status === 'payment_required' && <Clock2 width=\"10\" height=\"10\" className=\"mr-1\" />}\n                          {attempt.status === 'allowed' ? 'Allowed' : \n                           attempt.status === 'payment_required' ? 'Payment Required' : \n                           attempt.status}\n                        </Badge>\n                      </TableCell>\n                      <TableCell className=\"py-3\">\n                        {paymentSession ? (\n                          <Badge\n                            variant={\n                              paymentSession.status === 'paid' \n                                ? 'secondary' \n                                : paymentSession.status === 'pending'\n                                ? 'outline'\n                                : paymentSession.status === 'expired'\n                                ? 'destructive'\n                                : 'secondary'\n                            }\n                            className=\"text-xs\"\n                          >\n                            {paymentSession.status === 'paid' && <CircleCheck width=\"10\" height=\"10\" className=\"mr-1\" />}\n                            {paymentSession.status === 'pending' && <Clock2 width=\"10\" height=\"10\" className=\"mr-1\" />}\n                            {paymentSession.status}\n                          </Badge>\n                        ) : (\n                          <span className=\"text-xs text-muted-foreground\">N/A</span>\n                        )}\n                      </TableCell>\n                      <TableCell className=\"text-sm text-muted-foreground text-right py-3\">\n                        {formatDistanceToNow(new Date(attempt.createdAt), { addSuffix: true })}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Card>\n          ) : (\n            <Card className=\"bg-card border-border rounded-xl\">\n              <CardContent className=\"p-8\">\n                <div className=\"text-center\">\n                  <CustomInboundIcon\n                    Icon={Envelope2}\n                    size={48}\n                    backgroundColor=\"#64748b\"\n                    className=\"mx-auto mb-4\"\n                  />\n                  <p className=\"text-sm text-muted-foreground mb-4\">\n                    No VIP email attempts yet. Once you enable VIP protection on your email addresses, all incoming emails will be logged here.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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"}