{"version":3,"sources":["turbopack:///[project]/node_modules/@radix-ui/react-menu/src/menu.tsx","turbopack:///[project]/node_modules/@radix-ui/react-dropdown-menu/src/dropdown-menu.tsx","turbopack:///[project]/components/ui/dropdown-menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ComponentRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir' | 'onPlaced'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEntryFocus?: RovingFocusGroupProps['onEntryFocus'];\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst Slot = createSlot('MenuContent.ScrollLock');\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEntryFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus({ preventScroll: true });\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={composeEventHandlers(onEntryFocus, (event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                })}\n                preventScrollOnEntryFocus\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  data-radix-menu-content=\"\"\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside =\n                      target.closest('[data-radix-menu-content]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ComponentRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus({ preventScroll: true });\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\n\ntype CheckedState = boolean | 'indeterminate';\n\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: CheckedState;\n  // `onCheckedChange` can never be called with `\"indeterminate\"` from the inside\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(isIndeterminate(checked) ? true : !checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ComponentRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ComponentRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\ntype CheckboxContextValue = { checked: CheckedState };\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext<CheckboxContextValue>(\n  ITEM_INDICATOR_NAME,\n  { checked: false }\n);\n\ntype MenuItemIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence\n        present={\n          forceMount ||\n          isIndeterminate(indicatorContext.checked) ||\n          indicatorContext.checked === true\n        }\n      >\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ComponentRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'onEntryFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n                rootContext.onClose();\n                // ensure pressing escape in submenu doesn't escape full screen mode\n                event.preventDefault();\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0]! : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const ii = polygon[i]!;\n    const jj = polygon[j]!;\n    const xi = ii.x;\n    const yi = ii.y;\n    const xj = jj.x;\n    const yj = jj.y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: DROPDOWN_MENU_NAME,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ComponentRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ComponentRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ComponentRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ComponentRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ComponentRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ComponentRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ComponentRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ComponentRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ComponentRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ComponentRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: 'DropdownMenuSub',\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ComponentRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ComponentRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport Check2 from \"@/components/icons/check-2\"\nimport ChevronRight from \"@/components/icons/chevron-right\"\nimport CircleDots from \"@/components/icons/circle-dots\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" width=\"16\" height=\"16\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check2 width=\"16\" height=\"16\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CircleDots width=\"8\" height=\"8\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":["Root","Anchor","Content","Item","Arrow","Portal","Group","Label","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Sub","SubTrigger","SubContent"],"mappings":"+tBAAA,IAAA,EAAuB,EAAA,CAAA,CAAA,EAAX,MACZ,EAAqC,EAAA,CAA5B,AAA4B,AADd,CACc,QACrC,EAAiC,EAAA,CAAA,AAAxB,CAAwB,OACjC,EAA6C,EAAA,CAApC,AAAoC,CAAA,AAFR,QAGrC,EAAmC,AAFF,EAEE,CAAA,AAA1B,CAA0B,EADT,MAE1B,EAA6B,EAAA,CAAA,AAApB,CAAoB,OAFgB,CAG7C,EAAiC,CAFE,CAEF,CAAxB,AAAwB,CAAA,KADJ,GAE7B,EAA+B,EAAA,CAAtB,AAAsB,CAAA,QAC/B,CAFiC,CAEN,EAAA,CAAlB,AAAkB,CAAA,OADI,CAE/B,EAAsB,EAAA,CAAb,AAAa,CAAA,GADK,KAE3B,EAAiC,EADX,AACW,CAAA,CAAA,EAArB,KAEZ,EAA0C,EAAA,CAAjC,AAAiC,CAAA,QAC1C,CADmB,CACM,AAHQ,EAGR,CAAA,AAAhB,CAAgB,QACzB,EAAoB,EAAmC,CAA9C,AAA8C,CAAA,CAD9B,GADiB,CAEa,GACvD,EADoB,AACc,EAAA,CAAA,CAAA,EAAtB,MAEZ,EAA2B,EAAA,CAAlB,AAAkB,CAAA,QAC3B,EAA+B,AAHG,EAGH,CAAtB,AAAsB,CAAA,GADJ,KAE3B,EAA2B,EAAA,CAAlB,AAAkB,CAAA,OADI,CAE/B,EAA6B,EAAA,CAApB,AAAoB,CAAA,GADF,IAqGnB,EAAA,EAAA,CAAA,CAAA,MApGqB,EAMvB,EAAiB,CAAC,QAAS,GAAG,CAAA,CAE9B,EAAY,CAAC,UAAW,WAAY,KAAK,CAAA,CACzC,EAAkB,CAFJ,AAEK,YAFQ,SAAU,MAAM,IAEN,EAAS,CAC9C,EAA6C,CACjD,GAFkD,CAE7C,CAAC,GAAG,EAAgB,YAAY,CAAA,CACrC,IAAK,CAAC,GAAG,EAAgB,WAAW,CAAA,AACtC,EACM,EAA8C,CAClD,IAAK,CAAC,WAAW,CAAA,CACjB,IAAK,CAAC,YAAY,CAAA,AACpB,EAMM,EAAY,OAGZ,CAAC,EAAY,EAAe,EAAqB,CAAA,CAAA,EAAA,EAAI,aAAJ,GAAI,EAGzD,GAGI,CAAC,EAAmB,EAAe,CAH9B,AAGkC,CAAA,EAAA,EAAA,IANc,GAMlB,WAAI,EAAmB,EAAW,CACzE,IACA,iBAAA,GACA,2BAAA,CACD,EACK,EAAA,CAAA,EAAA,EAAiB,iBAAA,CAAkB,GACnC,EAAA,CAAA,EAAA,EAA2B,2BAAA,CAA4B,GASvD,CAAC,EAAc,EAAc,CAAI,EAAoC,GASrE,CAAC,EAAkB,EAAkB,CATR,AAAiD,AASrC,EAAwC,GAUjF,EAA4B,AAAC,IAV6D,AAW9F,GAAM,CAXmC,EAU0B,UAC3D,CAAA,MAAa,GAAO,CAAA,UAAO,CAAA,CAAU,KAAA,CAAK,cAAA,OAAc,GAAQ,CAAA,CAAK,CAAI,EAC3E,EAAc,EAAe,GAC7B,CAAC,EAAS,EAAU,CAAA,CAAA,CADoB,CACpB,EAAU,EAAV,MAAU,EAAoC,IAAI,EACtE,EAAA,CAAA,EAAA,EAA2B,MAAA,GAAO,GAClC,EAAA,AAF8B,AACS,CACvC,EAAA,EAAmB,cAAA,EAAe,GAClC,EAAA,CAAA,EAAA,EAAY,EADkC,UAClC,EAAa,GAAG,AAmBlC,OACE,IAlBI,SAAA,AAkBJ,EAlBc,KAGd,CAHoB,GAGd,EAAgB,KACpB,CAD0B,CACP,OAAA,EAAU,EAC7B,SAAS,gBAAA,CAAiB,cAAe,EAAe,CAAE,SAAS,EAAM,MAAM,CAAK,CAAC,EACrF,SAAS,gBAAA,CAAiB,cAAe,EAAe,CAAE,SAAS,EAAM,MAAM,CAAK,CAAC,CACvF,EACM,EAAgB,IAAO,EAAmB,OAAA,EAAU,EAE1D,OADA,SAAS,gBAAA,CAAiB,UAAW,EAAe,CAAE,SAAS,CAAK,CAAC,EAC9D,KACL,CADW,QACF,mBAAA,CAAoB,UAAW,EAAe,CAAE,SAAS,CAAK,CAAC,EACxE,SAAS,mBAAA,CAAoB,cAAe,EAAe,CAAE,SAAS,CAAK,CAAC,EAC5E,SAAS,mBAAA,CAAoB,cAAe,EAAe,CAAE,SAAS,CAAK,CAAC,CAC9E,CACF,EAAG,CAAC,CAAC,EAGH,GAAA,EAAA,GAAA,EAAA,EAAiB,IAAA,CAAhB,CAAsB,GAAG,CAAA,CACxB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,AADH,EACG,CACC,CADF,KACS,OACP,EACA,aAAc,CAHhB,SAIE,EACA,gBAAiB,EAEjB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACC,CADF,KACS,EACP,QAAe,CAAA,EAAA,EAAA,QAFjB,GAEiB,EAAY,IAAM,GAAiB,GAAQ,CAAC,CAAJ,CAAqB,cAAD,OAC3E,EACA,IAAK,EACL,iBAEC,CAAA,EACH,EACF,CACF,CAEJ,EAEA,EAAK,WAAA,CAAc,EAYnB,IAAM,EAAA,CAAA,EAAA,EAAmB,UAAA,EACvB,CAAC,EAAqC,KACpC,GAAM,SAD+C,IAC7C,CAAA,CAAa,GAAG,EAAY,CAAI,EAClC,EAAc,EAAe,GADC,AAEpC,MAAO,CAAA,CADuC,CACvC,EAAA,GAAA,EAAA,EAAiB,EAAjB,IAAiB,CAAhB,CAAwB,GAAG,CAAA,CAAc,GAAG,CAAA,CAAa,IAAK,CAAA,CAAc,CACtF,GAGF,EAAW,AAJA,WAIA,CAdS,EAcK,WAMzB,IAAM,EAAc,aAGd,CAAC,EAAgB,EAAgB,CAAI,EAAsC,EAAa,CAC5F,QADqC,GACzB,KAAA,CACd,CAAC,EAgBK,EAAyC,AAAD,IAC5C,GAAM,GAD+E,UAC7E,CAAA,YAAa,CAAA,CAAY,UAAA,WAAU,CAAA,CAAU,CAAI,EACnD,EAAU,EAAe,EAAa,GAC5C,MACE,CAAA,CAFqD,CAErD,EAAA,GAAA,EAAC,EAAA,CAAe,CAAhB,KAAuB,aAAa,EAClC,QADF,CACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,MAAC,CAAA,CAAS,QAAS,GAAc,EAAQ,IAAA,CACvC,EADF,OACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,IAAC,CAAA,CAAgB,SAAO,YAAC,CAAzB,UACG,CAAA,CACH,CAAA,CACF,CAAA,CACF,CAEJ,EAEA,EAAW,WAAA,CAAc,EAMzB,IAAM,EAAe,cAUf,CAAC,EAAqB,EAAqB,CAC/C,EAA2C,GAgBvC,EAAA,CAAA,EAAA,EAAoB,EAhB+B,IADR,IAiBvB,EACxB,CAAC,EAAsC,KACrC,IAAM,EAAgB,EAAiB,EAAc,EAAM,AADL,KADhC,MAEgD,EAChE,YAAE,EAAa,EAAc,UAAA,CAAY,GAAG,EAAa,CAAI,EAC7D,EAAU,EAAe,EAAc,EADkB,AACZ,WAAW,EACxD,EAAc,EAAmB,EAAc,EAAM,WAAW,EAEtE,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,EAAZ,MAAY,CAAX,CAAoB,MAAO,EAAM,WAAA,CAAlC,AACE,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,MAAC,CAAA,CAAS,QAAS,GAAc,EAAQ,IAAA,CACvC,EADF,OACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,EAAZ,EAAY,CAAX,CAAgB,MAAO,EAAM,WAAA,CAC3B,IADH,KACG,EAAY,KAAA,CACX,CAAA,CAAA,CAAA,EAAA,GAAA,EAAC,EAAA,CAAsB,EAAvB,CAA0B,CAAA,CAAc,IAAK,CAAA,CAAc,EAE3D,CAAA,CAAA,CAAA,EAAA,GAAA,EAAC,EAAA,CAAyB,EAA1B,CAA6B,AAF7B,CAE6B,CAAc,IAAK,CAAA,CAAc,CAAA,CAElE,CAAA,CACF,CAAA,CACF,CAEJ,GASI,EAAA,CAAA,EAAA,EAA6B,CAfrB,SAeqB,EACjC,CAAC,EAA8C,KAC7C,IAAM,EAAU,EAAe,EAAc,EADiB,AACX,WAAW,EACxD,EAAA,CAAA,EAAA,EAAY,MAAA,EAAmC,IAAI,EACnD,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,GAQnD,AARsD,OASpD,IANI,SAMJ,AANI,EAAU,KACd,CADoB,GACd,EAAU,EAAI,OAAA,CACpB,GAAI,EAAS,MAAA,CAAA,EAAA,EAAO,UAAA,EAAW,EACjC,EAAG,CAAC,CAAC,CADmC,CAItC,GAAA,EAAA,GAAA,EAAC,EAAA,CACE,GAAG,CALc,AAKd,CACJ,IAAK,EAGL,UAAW,EAAQ,IAAA,CAGnB,CARF,2BAQ+B,EAAQ,IAAA,CACrC,sBAAoB,EAGpB,eAAgB,CAAA,EAAA,EAAA,oBAAA,EACd,EAAM,cAAA,CACN,AAAC,GAAU,EAAM,cAAA,CAAe,EAChC,CAAE,0BAA0B,CAAM,GAEpC,UAAW,IAAM,EAAQ,YAAA,EAAa,EAAK,EAGjD,CAHiD,EAM7C,EAAA,CAAA,EAAA,EAAgC,UAAA,EAGpC,CAAC,EAA8C,KAC/C,IAAM,EAAU,EAAe,EAAc,EAAM,AADa,KAH5B,MAI0B,EAC9D,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACE,CADH,EACM,CAAA,CACJ,IAAK,EACL,WAAW,EACX,KAJF,wBAI+B,EAC7B,sBAAsB,EACtB,UAAW,IAAM,EAAQ,YAAA,EAAa,EAAK,EAGjD,CAAC,AAHgD,EAmD3C,EAAA,CAAO,EAAA,EAAA,UAAA,EAAW,wBAAwB,EAE1C,EAAA,CAAA,EAAA,EAAwB,UAAA,EAC5B,CAAC,EAA0C,KACzC,GAAM,CACJ,QAFwD,KAExD,CACA,QAAO,CAAA,WACP,CAAA,iBACA,CAAA,kBACA,CAAA,6BACA,CAAA,cACA,CAAA,CACA,iBAAA,sBACA,CAAA,gBACA,CAAA,mBACA,CAAA,WACA,CAAA,CACA,sBAAA,CACA,GAAG,EACL,CAAI,EACE,EAAU,EAAe,EAAc,GACvC,EAAc,EAAmB,EAAc,EADG,CAElD,EAAc,EAAe,GAC7B,CAF0D,CAElC,EAAyB,GACjD,CAFwC,CAE7B,EAAc,GACzB,CAF4D,AAE3D,EAAe,EAAgB,CAAA,CAAA,CADI,CACJ,EAAU,QAAA,AAAV,EAAkC,IAAI,EACtE,EAAA,CAAmB,EAAA,EAAA,MAAA,EAAuB,IAAI,EAC9C,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,EAAY,EAAQ,cAAlD,CAAiE,EAChF,EAAA,CAAA,EAAA,EAAiB,MAAA,EAAO,CAAC,EACzB,EAAA,CAAA,EAAA,EAAkB,MAAA,EAAO,EAAE,EAC3B,EAA6B,CAAA,EAAA,EAAA,MAAA,EAAO,CAAC,EACrC,EAAA,CAAA,EAAA,EAA8B,MAAA,EAA2B,IAAI,EAC7D,EAAsB,CAAA,EAAA,EAAA,MAAA,EAAa,OAAO,EAC1C,EAAA,CAAA,EAAA,EAAwB,MAAA,EAAO,CAAC,EAEhC,EAAoB,EAAuB,EAAA,YAAA,CAAA,EAAqB,QAAA,CAKhE,EAAwB,AAAC,IAC7B,IAD6C,AACvC,EAAS,EAAU,OAAA,CAAU,EAC7B,EAAQ,IAAW,KAAF,CAAE,CAAO,AAAC,GAAS,CAAC,EAAK,QAAQ,EAClD,EAAc,SAAS,aAAA,CACvB,EAAe,EAAM,IAAA,CAAK,AAAC,GAAS,EAAK,GAAA,CAAI,OAAA,GAAY,IAAc,OAAH,GAEpE,EAAY,AAw2BxB,SAAS,AAAa,CAAA,CAAkB,CAAA,CAx2BH,AAw2BmB,CAAA,EAAuB,MAE7E,IAAM,EADa,AACM,EADC,MAAA,CAAS,GAAK,MAAM,IAAA,CAAK,GAAQ,GAAF,EAAE,CAAM,AAAC,GAAS,IAAS,CAAA,CAAO,CAAC,CAAC,EACvD,CAAA,CAAO,CAAC,CAAA,CAAK,EAC7C,EAAoB,EAAe,EAAO,OAAA,CAAQ,GAAgB,CAAA,EACpE,GAzB4B,EAyBM,CAD8B,IACzB,GAAA,AAzBX,CAyBe,CAzBK,CAyBhC,AAA8C,CAAC,CAAC,CAxB7D,EAAM,GAAA,CAAO,CAAC,EAAG,IAAU,CAAA,CAAA,CAAO,EAAa,CAAA,CAAA,CAAS,AAwBjC,EAxBuC,MAAM,CAAE,EA0BzE,CADoD,IAA5B,EAAiB,MAAA,GACpB,EAAgB,EAAhB,AAA8B,MAAA,CAAQ,AAAD,GAAO,IAAM,EAAY,EACvF,IAAM,EAAY,EAAc,IAAA,CAAK,AAAC,GACpC,EAAM,WAAA,CAAY,EAAE,UAAA,CAAW,EAAiB,WAAA,CAAY,CAAC,GAE/D,OAAO,IAAc,EAAe,EAAY,KAAA,CAClD,EAp3BqB,EAAM,GAAA,CAAK,AAAD,GAAU,EAAK,SAAS,EACV,EAAQ,GACzC,EAAU,EAAM,IAAA,CADqC,AAChC,AAAC,GAAS,EAAK,SAAA,GAAc,IAAY,IAAI,CAAP,QAGjE,AAAC,SAAS,EAAa,CAAA,EACrB,AADoC,EAC1B,OAAA,CAAU,EACpB,OAAO,YAAA,CAAa,EAAS,OAAO,EACtB,GAAI,EAAd,IAAc,EAAS,OAAA,CAAU,OAAO,UAAA,CAAW,IAAM,EAAa,EAAE,EAAG,IAAI,CACrF,CAAA,CAAG,GAEC,GAFK,AAOP,MALW,KAKA,IAAO,EAAwB,KAAA,CAAM,CAAC,CAErD,OAEM,SAAA,EAAU,IACP,EADa,EACP,OAAO,YAAA,CAAa,EAAS,OAAO,EAChD,CAAC,CAAC,EAIL,CAAA,EAAA,EAAA,cAAA,CAAe,GAEf,IAAM,EAAA,CAAA,EAAiC,EAAA,QAFvC,GAEuC,EAAY,AAAC,GAE3C,AADiB,EAAc,KAD0C,EAC1C,GAAY,EAAsB,OAAA,EAAS,MACvD,AAk3BhC,SAAS,AAAqB,CAAA,CAA2B,CAAA,EAAgB,MACvE,CAAI,CAAC,GApBP,AAsBS,EAFI,CAAA,MApBJ,AAAiB,CAAA,AAoBN,CApBoB,CAAA,EAAkB,AACxD,GAqBwB,AArBlB,GAAE,CAAA,GAAG,CAAA,CAAE,CAAI,EACb,GAAS,EACb,IAAA,IAAS,EAAI,EAAG,EAAI,EAAQ,MAAA,CAAS,EAAG,EAAI,EAAQ,MAAA,CAAQ,EAAI,IAAK,CACnE,IAAM,EAAK,CAAA,CAAQ,CAAC,CAAA,CACd,EAAK,CAAA,CAAQ,CAAC,CAAA,CACd,EAAK,EAAG,CAAA,CACR,EAAK,EAAG,CAAA,CACR,EAAK,EAAG,CAAA,CACR,EAAK,EAAG,CAAA,AAIV,CADgB,EAAK,GAAQ,EAAK,EACvB,CAD+B,EAAA,CAAK,EAAK,CAAA,CAAA,CAAO,GAAP,AAAW,CAAA,CAAA,EAAO,EAAP,AAAY,CAAA,CAAA,CAAM,IACtE,EAAS,CAAC,CAAA,CAC3B,CAEA,OAAO,CACT,EAIoB,CAAE,EAAG,EAAM,OAAA,CAAS,EAAG,EAAM,OAAA,AAAQ,EACpB,EACrC,EAt3BqD,AAq3BZ,EAr3BmB,EAAsB,OAAA,EAAS,IAAI,EACxF,CAAC,CAAC,EAEL,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACC,CADF,KACS,EACP,YACA,SAHF,GAGE,CAAA,EAAA,EAAmB,WAAA,EACjB,AAAC,IACK,EAAyB,IADpB,AAC4B,CAAH,CAAS,CAAN,aAAM,CAAe,CAC5D,EACA,CAAC,EAAwB,EAE3B,YAAA,CAAA,EAAA,EAAmB,GAFQ,QAER,EACjB,AAAC,IACK,EAAyB,IADpB,CACyB,AAClC,EADqC,AAC1B,CAD0B,MAC1B,EAAS,MAAM,EAC1B,EAAiB,IAAI,EACvB,EACA,CAAC,EAAwB,EAE3B,eAAA,CAAA,EAAA,EAF2B,AAEL,WAAA,EACnB,AAAD,IACM,EAAyB,IADpB,AAC4B,CAAH,CAAS,CAAN,WAFnB,EAEyB,CAAe,CAC5D,EACA,CAAC,EAAwB,sBAAA,CAE3B,EACA,2BAAA,CAAA,EAAA,EAAkC,WAAA,EAAY,AAAC,IAC7C,EAAsB,KADkC,EAClC,CAAU,CAClC,EAAG,CAAC,CAAC,EAEL,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CArED,CAqEA,EAvE2B,EAC3B,CAAE,GAAI,EAAM,eAAgB,EAAK,CAsEjC,CArEA,KAAA,CAqEoB,CAClB,EADqB,OACrB,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,CADqB,OACpB,CAAA,CACC,SAAO,EACP,OAFF,CAEW,EACT,iBAAA,CAAA,EAAA,EAAkB,oBAAA,EAAqB,EAAiB,AAAC,IAGvD,EAAM,IAH2D,UAG3D,CAAe,EACrB,EAAW,OAAA,EAAS,MAAM,CAAE,eAAe,CAAK,CAAC,CACnD,CAAC,EACD,mBAAoB,EAEpB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,cAAC,CAAA,CACC,SAAO,EACP,CAFF,6CAGE,uBACA,iBACA,oBACA,YACA,EAEA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAkB,EAAlB,EAAkB,CAAjB,CACC,SAAO,EACN,GAAG,CAAA,CACJ,IAAK,EAAY,EAHnB,CAGmB,CACjB,YAAY,gBACZ,EACA,iBAAkB,EAClB,yBAA0B,EAC1B,aAAA,CAAA,EAAc,EAAA,oBAAA,EAAqB,EAAc,AAAC,IAE5C,AAAC,EAAY,IAFyC,cAEzC,CAAmB,OAAA,CAAS,CAAA,EAAM,cAAA,CAAe,CACpE,CAAC,EACD,2BAAyB,EAEzB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAiB,EAAjB,KAAiB,CAAhB,CACC,KAAK,OACL,SAFF,UAEmB,WACjB,aAAY,GAAa,EAAQ,IAAI,EACrC,0BAAwB,GACxB,IAAK,EAAY,GAAA,CAChB,GAAG,CAAA,CACH,GAAG,CAAA,CACJ,IAAK,EACL,MAAO,CAAE,QAAS,OAAQ,GAAG,EAAa,KAAA,AAAM,EAChD,UAAA,CAAA,EAAA,EAAW,oBAAA,EAAqB,EAAa,SAAA,CAAW,AAAC,IAGvD,IAAM,EAH2D,AAElD,AAEb,EAFmB,MAAA,CAEZ,OAAA,CAAQ,2BAA2B,IAAM,EAAM,aAAA,CAClD,EAAgB,EAAM,OAAA,EAAW,EAAM,MAAA,EAAU,EAAM,OAAA,CACvD,EAAsC,IAArB,EAAM,GAAA,CAAI,MAAA,CAC7B,IAEE,AAAc,MAAO,IAAf,GAFS,AAET,EAAe,EAAM,cAAA,CAAe,EAC1C,CAAC,GAAiB,GAAgB,EAAsB,EAAM,GAAG,GAGvE,EAHwC,EAGlC,EAAU,EAAW,OAAA,CAC3B,GAAI,EAAM,MAAA,GAAW,GACjB,CAAC,EAAgB,EADS,MACT,CAAS,EAAM,GAAG,EAAG,AADZ,CACY,MAC1C,EAAM,cAAA,CAAe,EAErB,IAAM,EADQ,AACS,IADE,KAAF,CAAE,CAAO,AAAC,GAAS,CAAC,EAAK,QAAQ,EAC3B,GAAA,CAAI,AAAC,GAAS,EAAK,GAAA,CAAI,OAAQ,EACxD,EAAU,QAAA,CAAS,EAAM,GAAG,EAAG,CAAA,EAAe,OAAA,CAAQ,EAC1D,AAusBpB,SAAS,AAAW,CAAA,EAA2B,AAC7C,IAAM,EAA6B,SAAS,aAAA,CAC5C,IAAA,IAAW,KAAa,EAEtB,GAAI,IAAc,EAFgB,EAGlC,EAAU,KAAA,CAAM,EACZ,SAAS,IAFiC,SAEjC,GAAkB,GAFe,MAIlD,EA/sB+B,EACb,CAAC,EACD,OAAA,CAAA,CAF2B,CAE3B,CA2sB6C,CAAA,AA3sBrC,oBAAA,EAAqB,EAAM,MAAA,CAAQ,AAAC,IAErC,EAAM,IAFyC,SAEzC,CAAc,QAAA,CAAS,EAAM,MAAM,GAAG,CAC/C,OAAO,YAAA,CAAa,EAAS,OAAO,EACpC,EAAU,OAAA,CAAU,GAExB,CAAC,EACD,cAAA,CAAA,EAAA,EAAe,oBAAA,EACb,EAAM,aAAA,CACN,GAAU,AAAC,IACT,IAAM,EADa,AACJ,EAAM,MAAA,CACf,EAAqB,EAAgB,OAAA,GAAY,EAAM,OAAA,CAIzD,EAAM,aAAA,CAAc,QAAA,CAAS,IAAW,EAAL,EAErC,EAAc,OAAA,CADC,EAAM,AACG,IAFsC,GACzC,CAAU,EAAgB,OAAA,CAAU,QAAU,OAEnE,EAAgB,OAAA,CAAU,EAAM,OAAA,CAEpC,CAAC,EACH,EACF,EACF,EACF,EACF,CACF,CAAA,EAGN,EAGF,GAAY,WAAA,CAAc,EAY1B,IAAM,GAAkB,CAAA,EAAA,EAAA,UAAA,EACtB,CAAC,EAAoC,KACnC,GAAM,CAAE,QAD4C,KAC5C,CAAa,GAAG,EAAW,CAAI,EACvC,MADmC,AAC5B,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CAAc,KAAK,QAAS,EAA7B,CAAgC,CAAA,CAAY,IAAK,CAAA,CAAc,CACxE,GAGF,GAAU,WAAA,CAbS,EAaK,UAWxB,IAAM,GAAkB,CAAA,EAAA,EAAA,UAAA,EACtB,CAAC,EAAoC,KACnC,GAAM,SAD8C,IAC5C,CAAA,CAAa,GAAG,EAAW,CAAI,EACvC,MADmC,AAC5B,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CAAe,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CAC3D,GADS,AAIX,GAAU,WAAA,CAZS,EAYK,UAMxB,IAAM,GAAY,WACZ,GAAc,kBAOd,GAAA,CAAA,EAAiB,EAAA,UAAA,EACrB,CAAC,EAAmC,KAClC,GAAM,SAD6C,CAC3C,GAAW,CAAA,UAAO,CAAA,CAAU,GAAG,EAAU,CAAI,EAC/C,EAAA,CAAA,EAD2C,AAC3C,EAAY,MAAA,EAAuB,IAAI,EACvC,EAAc,EAAmB,GAAW,EAAM,WAAW,EAC7D,EAAiB,EAAsB,GAAW,EAAM,WAAW,EACnE,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,GAAG,AAChD,EAAA,CAAA,EAAA,EAAyB,MAAA,GAAO,GAgBtC,EAhB2C,IAiBzC,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACG,GAAG,CAAA,CACJ,IAAK,WACL,EACA,MAJF,EAIE,AAAS,GAAA,EAAA,oBAAA,EAAqB,EAAM,OAAA,CAnBnB,CAmB4B,IAlB/C,CADyB,GACnB,EAAW,EAkB0C,AAlBtC,OAAA,CACrB,GAAI,CAAC,GAAY,EAAU,CACzB,IAAM,EAAkB,IAAI,YAAY,GAAa,CAAE,SAAS,EAAM,YAAY,CAAK,CAAC,EACxF,EAAS,gBAAA,CAAiB,GAAa,AAAC,GAAU,IAAW,GAAQ,CAAE,CAAL,KAAW,CAAK,CAAC,EACnF,CAAA,EAAA,EAAA,2BAAA,EAA4B,EAAU,GAClC,EAAgB,CADpB,SAAqD,MACjC,CAClB,CADoC,CACnB,OAAA,EAAU,EAE3B,EAAY,OAAA,CAAQ,CAExB,CACF,GAQI,cAAe,AAAC,IACd,EAAM,IADkB,SAClB,GAAgB,GACtB,EAD2B,AACV,OAAA,EAAU,CAC7B,EACA,YAAA,CAAA,EAAA,EAAa,oBAAA,EAAqB,EAAM,WAAA,CAAa,AAAC,IAIhD,AAAC,EAAiB,IAJwC,GAIxC,CAAS,CAAA,EAAM,aAAA,EAAe,MAAM,CAC5D,CAAC,EACD,UAAW,CAAA,EAAA,EAAA,oBAAA,EAAqB,EAAM,SAAA,CAAW,AAAC,IAChD,IAAM,EADoD,AACC,KAArC,EAAe,SAAA,CAAU,OAAA,CAC3C,GAAa,GAA+B,IAAM,CAAA,CAApB,EAAM,GAAA,EACpC,EAAe,QAAA,CAAS,EAAM,GAAG,GAAG,CACtC,EAAM,aAAA,CAAc,KAAA,CAAM,EAO1B,EAAM,cAAA,CAAe,EAEzB,CAAC,CAAA,EAGP,GAGF,GAAS,WAAA,CAAc,GAUvB,IAAM,GAAA,CAAA,EAAA,EAAqB,UAAA,EACzB,CAAC,EAAuC,KACtC,GAAM,CAAE,QAD+C,KAC/C,CAAa,YAAW,CAAA,WAAO,CAAA,CAAW,GAAG,EAAU,CAAI,EAC7D,EAAiB,EAAsB,CADkB,EACP,GAClD,EAAwB,EAAyB,GACjD,CAF6D,CAE7D,CAAA,EAAA,EAAY,CADgD,KAChD,EAAuB,IAAI,EACvC,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,GAC7C,AADgD,CAC/C,EAAW,EAAY,CAAA,CAAA,EAAA,EAAU,IAAV,IAAU,GAAS,GAG3C,CAAC,CAH+C,CAGlC,EAAc,CAAA,CAAA,EAAU,EAAA,MAAV,EAAU,EAAS,EAAE,EAQvD,OACE,IARI,SAAA,AAQJ,EARc,KACd,CADoB,GACd,EAAW,EAAI,OAAA,CACjB,GACF,EAAA,CAAgB,EAAS,EADb,SACa,EAAe,EAAA,CAAA,CAAI,IAAA,CAAK,CAAC,CAEtD,EAAG,CAAC,EAAU,QAAQ,CAAC,EAGrB,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,QAAA,CAAX,CACC,MAAO,WACP,EACA,CAHF,SAGa,GAAa,EAExB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAkB,EAAlB,EAAkB,CAAjB,CAAsB,SAAO,EAAE,GAAG,CAAA,CAAuB,QAA1D,EAAqE,CAAC,EACpE,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CACC,KAAK,UADP,CAEE,mBAAkB,EAAY,GAAK,KAAA,EACnC,gBAAe,GAAY,KAAA,EAC3B,gBAAe,EAAW,GAAK,KAAA,EAC9B,GAAG,CAAA,CACJ,IAAK,EAYL,cAAA,CAAA,EAAA,EAAe,oBAAA,EACb,EAAM,aAAA,CACN,GAAU,AAAC,IACL,EACF,EAAe,EAFE,IACL,KACG,CAAY,IAE3B,CAFgC,CAEjB,WAAA,CAAY,GACtB,EAD2B,AACrB,gBAAA,EAET,AAF2B,AACd,EAAM,aAAA,CACd,KAAA,CAAM,CAAE,eAAe,CAAK,CAAC,EAGxC,CAAC,GAEH,eAAA,CAAA,EAAA,EAAgB,oBAAA,EACd,EAAM,cAAA,CACN,GAAU,AAAC,GAAU,EAAe,WAAA,CAAY,KAAK,AAEvD,CAFwD,OAExD,CAAA,EAAA,EAAS,oBAAA,EAAqB,EAAM,OAAA,CAAS,IAAM,GAAa,IAAI,AACpE,CADqE,MACrE,CAAA,EAAA,EAAQ,oBAAA,EAAqB,EAAM,MAAA,CAAQ,IAAM,GAAa,GAAM,EAAD,AACrE,CADsE,AAExE,CAAA,EAGN,GAmBI,GAAyB,CAAA,EAAA,EAAA,UAAA,EAC7B,CAAC,EAA2C,KAC1C,GAAM,SADqD,AACnD,GAAU,CAAA,iBAAO,CAAA,CAAiB,GAAG,EAAkB,CAAI,EACnE,MACE,CAAA,EAAA,EAAA,EAF6D,CAE7D,EAAC,GAAA,CAAD,AAAuB,MAAO,EAAM,WAAA,SAApC,AAAiD,EAC/C,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACE,KAAK,mBACL,IAFF,WAEgB,GAAgB,GAAW,IAAJ,IAAc,EAClD,GAAG,CAAA,CACJ,IAAK,EACL,aAAY,GAAgB,GAC5B,IADmC,KACnC,CAAA,EAAA,EAAU,oBAAA,EACR,EAAkB,QAAA,CAClB,IAAM,MAAkB,GAAgB,IAAkB,CAAC,EAAZ,CAC/C,CAAE,EADiD,CAAe,uBACtC,CAAM,EACpC,EACF,CACF,CAEJ,GAGF,GAAiB,WAAA,CAlCU,EAkCI,iBAM/B,IAAM,GAAmB,iBAEnB,CAAC,GAAoB,GAAoB,CAAI,EACjD,GACA,CAAE,MAAO,IAFoC,CAEpC,EAAW,cAAe,KAAO,CAAD,AAAG,GASxC,GAAA,CAAA,EAAuB,EAAA,UAAA,EAC3B,CAAC,EAAyC,KACxC,GAAM,OAAE,CAAA,CADiD,AAC1C,eAAA,CAAe,GAAG,EAAW,CAAI,EAC1C,EAAA,CAAA,EAAA,CADsC,CAClB,cAAA,EAAe,GACzC,MACE,CAAA,EAAA,CAFoD,CAEpD,GAAA,EAAC,GAAA,CAAD,AAAoB,MAAO,EAAM,WAAA,OAAa,EAA9C,AAA4D,cAAe,EACzE,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AAAY,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CAAA,CAChD,CAEJ,GAGF,GAAe,QANP,GAMO,CAAc,GAM7B,IAAM,GAAkB,gBAOlB,GAAA,CAAA,EAAA,EAAsB,UAAA,EAC1B,CAAC,EAAwC,KACvC,GAAM,OAAE,CAAA,CAAO,AADyC,GACtC,EAAe,CAAI,EAC/B,EAAU,GAAqB,GAAiB,EADrB,AAC2B,WAAW,EACjE,EAAU,IAAU,EAAQ,KAAA,CAClC,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AAAuB,MAAO,EAAM,WAAA,SAAa,AAAjD,EACE,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACE,KAAK,gBACL,OAFF,QAEgB,EACb,GAAG,CAAA,CACJ,IAAK,EACL,aAAY,GAAgB,GAC5B,IADmC,KACzB,CAAA,EAAA,EAAA,oBAAA,EACR,EAAe,QAAA,CACf,IAAM,EAAQ,aAAA,GAAgB,GAC9B,CAAE,CADiC,wBACP,EAAM,EACpC,EACF,CACF,CAEJ,GAGF,GAAc,WAAA,CAAc,GAM5B,IAAM,GAAsB,oBAItB,CAAC,GAAuB,GAAuB,CAAI,EACvD,GACA,CAAE,SAAS,CAAM,GAFkC,AAe/C,GAAA,CAAA,EAAA,EAA0B,UAAA,EAC9B,CAAC,EAA4C,KAC3C,GAAM,SADsD,IACpD,CAAA,YAAa,CAAA,CAAY,GAAG,EAAmB,CAAI,EACrD,EAAmB,GAAwB,GAAqB,GACtE,GAFuD,GAGrD,CAAA,CAF+E,CAE/E,EAAA,GAAA,EAAA,EAAC,EAAD,MAAC,CAAA,CACC,QACE,GACA,GAAgB,EAAiB,IAHrC,GAG4C,IACX,IAA7B,EAAiB,OAAA,CAGnB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,IAAA,CAAV,CACE,GAAG,CAAA,CACJ,IAAK,EACL,GAHF,UAGc,GAAgB,EAAiB,OAAO,CAAA,EACtD,EAGN,GAGF,GAAkB,WAAA,CAAc,GAWhC,IAAM,GAAA,CAAA,EAAA,EAAsB,UAAA,EAC1B,CAAC,EAAwC,KACvC,GAAM,SADkD,IAChD,CAAA,CAAa,GAAG,EAAe,CAAI,EAC3C,MACE,CAAA,EAAA,CAFqC,CAErC,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CACC,KAAK,UADP,EAEE,mBAAiB,aAChB,GAAG,CAAA,CACJ,IAAK,CAAA,EAGX,GAGF,GAAc,WAAA,CAnBS,EAmBK,cAY5B,IAAM,GAAA,CAAA,EAAA,EAAkB,UAAA,EACtB,CAAC,EAAoC,KACnC,GAAM,SAD8C,IAC5C,CAAA,CAAa,GAAG,EAAW,CAAI,EACjC,EAAc,EAAe,EADA,CAEnC,MAAO,CAAA,CADuC,CACvC,EAAA,GAAA,EAAA,EAAiB,EAAjB,GAAiB,CAAhB,CAAuB,GAAG,CAAA,CAAc,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CACpF,GAGF,GAJW,AAID,WAAA,CAdS,EAcK,UAMxB,IAAM,GAAW,UASX,CAAC,GAAiB,GAAiB,CAAI,EAAuC,IAQ9E,GAAkC,AAAC,CARmD,GAAnD,AASvC,GAAM,GADsE,UACpE,CAAA,UAAa,CAAA,MAAU,GAAO,CAAA,cAAO,CAAA,CAAa,CAAI,EACxD,EAAoB,EAAe,GAAU,GAC7C,EAAc,EAAe,GAC7B,CAFwD,AAEvD,EAAS,EAAU,CAAA,CAAA,CADoB,CACpB,EAAU,EAAV,MAAU,EAAuC,IAAI,EACzE,CAAC,EAAS,EAAU,CAAA,CAAA,EAAU,EAAA,EAAV,MAAU,EAAoC,IAAI,EACtE,EAAA,CAAA,EAAA,EAAmB,cAAA,EAAe,GAQxC,OACE,EATkD,EAG9C,SAMJ,AANI,EAAU,KACiB,AAA3B,CADgB,KACkB,CAAhB,IAAA,EAAgB,GAAiB,GAChD,EADqD,EAC/C,GAAiB,IAC7B,CADkC,AACjC,EAAkB,IAAA,CAAM,EAAiB,EAG3C,CAAA,EAAA,EAAA,GAAA,EAAiB,EAAA,AAHyB,IAGzB,CAAhB,CAAsB,GAAG,CAAA,CACxB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,AADH,EACG,CACC,CADF,KACS,OACP,EACA,aAAc,CAHhB,SAIE,EACA,gBAAiB,EAEjB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACE,MAAO,EACP,UAAA,CAAA,EAAA,EAAW,KAFb,AAEa,CAAM,GACjB,UAAA,CAAA,EAAA,EAAW,KAAA,CAAM,WACjB,EACA,gBAAiB,WAEhB,CAAA,EACH,EACF,CACF,CAEJ,EAEA,GAAQ,WAAA,CAAc,GAMtB,IAAM,GAAmB,iBAKnB,GAAA,CAAA,EAAuB,EAAA,UAAA,EAC3B,CAAC,EAAyC,KACxC,IAAM,EAAU,EAAe,GAAkB,CADQ,CACF,WAAW,EAC5D,EAAc,EAAmB,GAAkB,EAAM,WAAW,EACpE,EAAa,GAAkB,GAAkB,EAAM,WAAW,EAClE,EAAiB,EAAsB,GAAkB,EAAM,WAAW,EAC1E,EAAA,CAAA,EAAA,EAAqB,MAAA,EAAsB,IAAI,EAC/C,sBAAE,CAAA,4BAAsB,CAAA,CAA2B,CAAI,EACvD,EAAQ,CAAE,YAAa,EAAM,WAAA,AAAY,EAEzC,EAAA,CAAA,EAAA,EAAuB,WAAA,EAAY,KACnC,CADyC,CAC5B,OAAA,CAAS,CAAA,OAAO,YAAA,CAAa,EAAa,OAAO,EAClE,EAAa,OAAA,CAAU,IACzB,EAAG,CAAC,CAAC,EAYL,OACE,EAXI,EAAA,SAAA,AAWJ,EAXc,IAAM,EAAgB,CAAC,EAAe,OAEhD,KAF+C,IAE/C,EAAU,KACd,CADoB,GACd,EAAoB,EAAqB,OAAA,CAC/C,MAAO,KACL,CADW,MACJ,YAAA,CAAa,GACpB,EAA2B,IAAI,CACjC,CACF,EAAG,CAAC,EAAsB,CAHe,CAGY,EAGnD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAW,QAAO,CAH+B,EAG7B,GAAG,CAAA,CACtB,SAAA,CAAA,EAAA,CADF,CACE,GAAA,EAAC,GAAA,CAAD,AACE,GAAI,EAAW,SAAA,CACf,aAFF,GAEgB,OACd,gBAAe,EAAQ,IAAA,CACvB,gBAAe,EAAW,SAAA,CAC1B,aAAY,GAAa,EAAQ,IAAI,EACpC,GAAG,CAAA,CACJ,IAAA,CAAA,EAAA,EAAK,WAAA,EAAY,EAAc,EAAW,eAAe,EAGzD,QAAS,AAAC,IACR,EAAM,IADY,GACZ,GAAU,GACZ,EAAM,AADW,QACX,EAAY,EAAM,gBAAA,CAAkB,CAAA,CAM9C,EAAM,aAAA,CAAc,KAAA,CAAM,EACtB,AAAC,EAAQ,IAAA,CAAM,CAAA,EAAQ,YAAA,EAAa,GAC1C,CAD8C,CAE9C,cAAA,CAAA,EAAe,EAAA,oBAAA,EACb,EAAM,aAAA,CACN,GAAU,AAAC,IACT,EAAe,IADI,OACJ,CAAY,IACvB,CAD4B,CACtB,gBAAA,CAAkB,CAAA,CACvB,EAAM,QAAA,EAAa,EAAD,AAAS,IAAA,EAAS,EAAD,AAAc,OAAA,EAAS,CAC7D,EAAe,0BAAA,CAA2B,IAAI,EAC9C,EAAa,OAAA,CAAU,OAAO,UAAA,CAAW,KACvC,CAD6C,CACrC,YAAA,EAAa,GACrB,CADyB,EAE3B,EAAG,GAAG,GAEV,CAAC,GAHoB,AAKvB,eAAgB,CAAA,EAAA,EAAA,oBAAA,EACd,EAAM,cAAA,CACN,GAAU,AAAC,IACT,IAEA,EAHmB,EAGb,EAAc,EAAQ,GAFb,IAEa,EAAS,sBAAsB,EAC3D,GAAI,EAAa,CAEf,IAAM,EAAO,EAAQ,OAAA,EAAS,QAAQ,KAChC,EAAqB,UAAT,EAEZ,EAAkB,CAAA,CAAY,EAAY,OAAS,OAAO,CAAA,CAC1D,EAAiB,CAAA,CAAY,EAAY,QAAU,MAAM,CAAA,CAE/D,EAAe,0BAAA,CAA2B,CACxC,KAAM,CAGJ,CAAE,EAAG,EAAM,OAAA,EARD,CAQW,CARC,CAAA,GAAK,EAQC,EAAG,EAAM,OAAA,AAAQ,EAC7C,CAAE,EAAG,EAAiB,EAAG,EAAY,GAAA,AAAI,EACzC,CAAE,EAAG,EAAgB,EAAG,EAAY,GAAA,AAAI,EACxC,CAAE,EAAG,EAAgB,EAAG,EAAY,MAAA,AAAO,EAC3C,CAAE,EAAG,EAAiB,EAAG,EAAY,MAAA,AAAO,EAC9C,MACA,CACF,CAAC,EAED,OAAO,YAAA,CAAa,EAAqB,OAAO,EAChD,EAAqB,OAAA,CAAU,OAAO,UAAA,CACpC,IAAM,EAAe,0BAAA,CAA2B,IAAI,EACpD,IAEJ,KAAO,CAEL,GADA,EAAe,cAAA,CAAe,GAC1B,EAD+B,AACzB,gBAAA,CAAkB,OAG5B,EAAe,0BAAA,CAA2B,IAAI,CAChD,CACF,CAAC,GAEH,UAAA,CAAA,EAAA,EAAW,oBAAA,EAAqB,EAAM,SAAA,CAAW,AAAC,IAChD,IAAM,EADoD,AACC,KAArC,EAAe,SAAA,CAAU,OAAA,CAC3C,EAAM,QAAA,EAAa,GAAiB,AAAc,IAAM,CAAA,GAAd,GAAA,EAC1C,CAAA,CAAc,EAAY,GAAG,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,GAAG,CACtD,EAAQ,YAAA,EAAa,GAGrB,CAHyB,CAGjB,OAAA,EAAS,MAAM,EAEvB,EAAM,cAAA,CAAe,EAEzB,CAAC,CAAA,EACH,CACF,CAEJ,GAGF,GAAe,WAAA,CAAc,GAM7B,IAAM,GAAmB,iBAenB,GAAA,CAAA,EAAA,EAAuB,UAAA,EAC3B,CAAC,EAAyC,KACxC,IAAM,EAAgB,EAAiB,EAAc,EADI,AACE,WAAW,EAChE,YAAE,EAAa,EAAc,UAAA,CAAY,GAAG,EAAgB,CAAI,EAChE,EAAU,EAAe,EAAc,EAAM,GADe,QACJ,EACxD,EAAc,EAAmB,EAAc,EAAM,WAAW,EAChE,EAAa,GAAkB,GAAkB,EAAM,WAAW,EAClE,EAAA,CAAA,EAAA,EAAY,MAAA,EAA8B,IAAI,EAC9C,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,GAAG,AACtD,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,EAAZ,MAAY,CAAX,CAAoB,MAAO,EAAM,WAAA,CAAlC,AACE,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,MAAC,CAAA,CAAS,QAAS,GAAc,EAAQ,IAAA,CACvC,EADF,OACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,EAAZ,EAAY,CAAX,CAAgB,MAAO,EAAM,WAAA,CAC5B,IADF,KACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACC,CADF,EACM,EAAW,SAAA,CACf,cAFF,IAEmB,EAAW,SAAA,CAC3B,GAAG,CAAA,CACJ,IAAK,EACL,MAAM,QACN,KAA0B,QAApB,EAAY,GAAA,CAAgB,OAAS,QAC3C,6BAA6B,EAC7B,sBAAsB,EACtB,WAAW,EACX,gBAAiB,AAAC,IAEZ,EAAY,IAFU,cAEV,CAAmB,OAAA,CAAS,CAAA,EAAI,OAAA,EAAS,MAAM,EAC/D,EAAM,cAAA,CAAe,CACvB,EAGA,iBAAkB,AAAC,GAAU,EAAM,cAAA,CAAe,EAClD,eAAA,CAAA,EAAA,EAAgB,oBAAA,EAAqB,EAAM,cAAA,CAAgB,AAAC,IAGtD,EAAM,IAH0D,EAG1D,GAAW,EAAW,OAAA,CAAS,CAAA,EAAQ,YAAA,EAAa,EAChE,CAAC,EADoE,AAErE,gBAAA,CAAA,EAAA,EAAiB,oBAAA,EAAqB,EAAM,eAAA,CAAiB,AAAC,IAC5D,EAAY,IAD0D,GAC1D,CAAQ,EAEpB,EAAM,cAAA,CAAe,CACvB,CAAC,EACD,UAAA,CAAA,EAAA,EAAW,oBAAA,EAAqB,EAAM,SAAA,CAAW,AAAC,IAEhD,IAAM,EAAkB,AAFkC,EAE5B,aAAA,CAAc,QAAA,CAAS,EAAM,MAAqB,EAC1E,EAAa,CAAA,CAAe,EAAY,GAAG,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,EACjE,GAAmB,IACrB,EAAQ,MADyB,MACzB,EAAa,GAErB,EAF0B,AAEf,OAAA,EAAS,MAAM,EAE1B,EAAM,cAAA,CAAe,EAEzB,CAAC,CAAA,EACH,CACF,CAAA,CACF,CAAA,CACF,CAEJ,GAOF,SAAS,GAAa,CAAA,EAAe,AACnC,OAAO,EAAO,OAAS,QACzB,CAEA,SAAS,GAAgB,CAAA,EAAoD,AAC3E,MAAmB,kBAAZ,CACT,CAEA,SAAS,GAAgB,CAAA,EAAuB,AAC9C,OAAO,GAAgB,GAAW,IAAJ,YAAsB,EAAU,UAAY,WAC5E,CAkFA,SAAS,GAAa,CAAA,EAAqE,AACzF,OAAO,AAAC,GAAiC,UAAtB,EAAM,WAAA,CAA0B,EAAQ,GAAS,EAAJ,GAAI,CACtE,CAlGA,GAAe,WAAA,CAAc,GAoG7B,IAAMA,GAAO,EACPC,GAAS,EACT,GAAS,EACTC,GAAU,EACV,GAAQ,GACR,GAAQ,GACRC,GAAO,GACP,GAAe,GACf,GAAa,GACb,GAAY,GACZ,GAAgB,GAChB,GAAY,GACZC,GAAQ,GACR,GAAM,GACN,GAAa,GACb,GAAa,guBC1zCnB,IAAA,EAAuB,EAAA,CAAA,CAAA,EAAX,MACZ,EAAqC,EAAA,CAA5B,AAA4B,AADd,CACc,QACrC,EAA4B,EAAA,CAAnB,AAAmB,CAAA,QAC5B,EAAmC,EAAA,CAFE,AAE5B,AAA0B,CAAA,IADP,IAE5B,EAAqC,EAAA,CAA5B,AAA4B,CAAA,QACrC,EAA0B,CAFS,CAET,CAAA,AAAjB,CAAiB,QAC1B,EAA+B,EAAA,CAAA,AAFM,CAEN,EADL,AACd,MAEZ,EAAsB,EAAA,CAAA,AAAb,CAAa,OAFS,CAyEzB,EAAA,EAAA,AAvEgB,CAuEhB,CAAA,QA7DA,EAAqB,eAGrB,CAAC,EAA2B,EAAuB,CAAA,CAAA,EAAA,EAAI,eAAJ,GAAI,EAC3D,EACA,GAAC,eAAe,CAAA,EAEZ,EAAA,CAAA,EAAA,EAAe,eAAA,CAAgB,GAY/B,CAAC,EAAsB,EAAsB,CACjD,EAAoD,GAWhD,EAA4C,AAAC,IACjD,GAAM,GADqF,EAZ1C,CACqB,eAapE,CAAA,UACA,CAAA,KACA,CAAA,CACA,KAAM,CAAA,aACN,CAAA,CACA,cAAA,OACA,GAAQ,CAAA,CACV,CAAI,EACE,EAAY,EAAa,GACzB,EAAmB,CAAA,EAAA,EAAA,MAAA,EAA0B,CADD,GACK,EACjD,CAAC,EAAM,EAAO,CAAA,CAAA,EAAA,CAAA,CAAI,oBAAA,EAAqB,CAC3C,KAAM,EACN,YAAa,IAAe,EAC5B,SAAU,EACV,OAAQ,CACV,CAAC,EAED,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACC,CADF,KACS,EACP,UAAA,CAAA,EAAA,EAAW,KAAA,CAAM,AAFnB,cAGE,EACA,UAAA,CAAA,EAAA,EAAW,KAAA,CAAM,QACjB,EACA,aAAc,EACd,MAHW,OAGX,CAAA,EAAA,EAAoB,WAAA,EAAY,IAAM,EAAQ,AAAC,GAAa,CAAC,GAAW,CAAC,EAAQ,EAAZ,GAAW,GAChF,EAEA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAe,EAAf,EAAe,CAAd,CAAoB,GAAG,CAAA,MAAW,EAAY,YAA/C,CAA6D,MAAS,QAAU,WAC7E,CAAA,CACH,CAAA,EAGN,EAEA,EAAa,WAAA,CAAc,EAM3B,IAAM,EAAe,sBAMf,EAA4B,CAAA,EAAA,EAAA,UAAA,EAChC,CAAC,EAA8C,KAC7C,GAAM,SADwD,YACtD,CAAA,UAAqB,GAAW,CAAA,CAAO,GAAG,EAAa,CAAI,EAC7D,EAAU,EAAuB,EAAc,EADU,CAEzD,EAAY,EAAa,GAC/B,MACE,CAAA,EAAA,AAHsE,EAGtE,GAAA,EAAA,AAFgD,EAEjC,EAAf,IAAe,CAAd,CAAqB,SAAO,EAAE,GAAG,CAAA,CAChC,MADF,GACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,MAAA,CAAV,CACC,KAAK,OADP,EAEE,GAAI,EAAQ,SAAA,CACZ,gBAAc,OACd,gBAAe,EAAQ,IAAA,CACvB,gBAAe,EAAQ,IAAA,CAAO,EAAQ,SAAA,CAAY,KAAA,EAClD,aAAY,EAAQ,IAAA,CAAO,OAAS,SACpC,gBAAe,EAAW,GAAK,KAAA,EAC/B,WACC,GAAG,CAAA,CACJ,IAAK,CAAA,EAAA,EAAA,WAAA,EAAY,EAAc,EAAQ,UAAU,EACjD,cAAA,CAAA,EAAA,EAAe,oBAAA,EAAqB,EAAM,aAAA,CAAe,AAAC,IAGpD,CAAC,GAAY,AAAiB,EAHgC,IAG3C,MAAA,GAAkC,IAAlB,EAAM,CAAmB,MAAnB,GAC3C,EAAQ,YAAA,CAAa,EAGhB,AAAD,EAAS,IAAA,CAAM,CAAA,EAAM,cAAA,CAAe,EAE5C,CAAC,EACD,UAAA,CAAA,EAAW,EAAA,oBAAA,EAAqB,EAAM,SAAA,CAAW,AAAC,KAC5C,IACA,CAAC,AAFqD,IAC5C,CAAA,GACA,GAAG,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,EAAG,CAAA,EAAQ,YAAA,CAAa,EAC3C,YAAa,EAA3B,EAAM,GAAA,EAAqB,EAAQ,YAAA,EAAa,GAGhD,CAHoD,AAGnD,QAAS,IAAK,WAAW,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,EAAG,CAAA,EAAM,cAAA,CAAe,EAC5E,CAAC,CAAA,EACH,CACF,CAEJ,GAGF,EAAoB,WAAA,CAAc,EAWlC,IAAM,EAAwD,AAC5D,IAEA,GAAM,GADH,kBACK,CAAA,CAAqB,GAAG,EAAY,CAAI,EAC1C,EAAY,EAAa,GADa,AAE5C,MAAO,CAAA,EAAA,EAAA,GAAA,EAAA,AAD2C,EAC5B,EAAf,IAAe,CAAd,CAAsB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAa,CAC/D,EAEA,EAAmB,OAHV,IAGU,CAbC,EAaa,mBAMjC,IAAM,EAAe,sBAMf,EAAA,CAAA,EAAA,EAA4B,UAAA,EAChC,CAAC,EAA8C,KAC7C,GAAM,SADwD,YACtD,CAAA,CAAqB,GAAG,EAAa,CAAI,EAC3C,EAAU,EAAuB,EAAc,EADR,CAEvC,EAAY,EAAa,GACzB,EAAA,CAAA,EAAA,EAAgC,EAFkC,IAElC,GADY,AACL,GAE7C,EAFkD,IAGhD,CAAA,EAAA,EAAA,GAAA,EAAA,EAAe,EAAf,KAAe,CAAd,CACC,GAAI,EAAQ,SAAA,CACZ,MAFF,YAEmB,EAAQ,SAAA,CACxB,GAAG,CAAA,CACH,GAAG,CAAA,CACJ,IAAK,EACL,iBAAA,CAAA,EAAA,EAAkB,oBAAA,EAAqB,EAAM,gBAAA,CAAkB,AAAC,IAC1D,AAAC,EAAwB,IAD2C,GAC3C,CAAS,CAAA,EAAQ,UAAA,CAAW,OAAA,EAAS,MAAM,EACxE,EAAwB,OAAA,EAAU,EAElC,EAAM,cAAA,CAAe,CACvB,CAAC,EACD,kBAAA,CAAA,EAAA,EAAmB,oBAAA,EAAqB,EAAM,iBAAA,CAAmB,AAAC,IAChE,IAAM,EADoE,AACpD,EAAM,MAAA,CAAO,aAAA,CAC7B,EAAyC,IAAzB,EAAc,MAAA,EAA0C,AAA1B,OAAc,OAAA,CAC5D,EAAwC,IAAzB,EAAc,MAAA,EAAgB,GAC/C,CAAC,EAAQ,KAAA,EAAS,CAAA,EAAc,CAAA,GAAwB,OAAA,EAAU,CAAA,CACxE,CAAC,EACD,MAAO,CACL,GAAG,EAAM,KAAA,CAGP,iDACE,uCACF,gDAAiD,sCACjD,iDACE,uCACF,sCAAuC,mCACvC,uCAAwC,mCAE5C,CAAA,EAGN,GAGF,EAAoB,WAAA,CAAc,EAYlC,IAAM,EAAA,CAAA,EAAA,EAA0B,UAAA,EAC9B,CAAC,EAA4C,KAC3C,GAAM,SADsD,YACpD,CAAA,CAAqB,GAAG,EAAW,CAAI,EACzC,EAAY,EAAa,EADY,CAE3C,MAAO,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC3C,EAAe,EAAf,GAAe,CAAd,CAAqB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CAChF,GAGF,EAAkB,CAJP,UAIO,CAdC,EAca,kBAYhC,IAAM,EAAA,CAAA,EAA0B,EAAA,UAAA,EAC9B,CAAC,EAA4C,KAC3C,GAAM,SADsD,YACpD,CAAA,CAAqB,GAAG,EAAW,CAAI,EACzC,EAAY,EAAa,EADY,CAE3C,MAAO,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC3C,EAAe,EAAf,GAAe,CAAd,CAAqB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CAChF,GAGF,EAAkB,CAJP,UAIO,CAdC,EAca,kBAYhC,IAAM,EAAA,CAAA,EAAA,EAAyB,UAAA,EAC7B,CAAC,EAA2C,KAC1C,GAAM,SADqD,YACnD,CAAA,CAAqB,GAAG,EAAU,CAAI,EACxC,EAAY,EAAa,CADW,EAE1C,MAAO,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC5B,EAAA,EAAf,EAAe,CAAd,CAAoB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAW,IAAK,CAAA,CAAc,CAC9E,EAGF,GAAiB,EAJN,SAIM,CAdC,EAca,iBAY/B,IAAM,EAAA,CAAA,EAAA,EAAiC,UAAA,EAGrC,CAAC,EAAmD,KACpD,GAAM,SAD+D,YAC7D,CAAA,CAAqB,GAAG,EAAkB,CAAI,EAChD,EAAY,EAAa,GAC/B,MAFkD,AAE3C,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC5B,EAAA,EAAf,UAAe,CAAd,CAA4B,GAAG,CAAA,CAAY,GAAG,CAAA,CAAmB,IAAK,CAAA,CAAc,AAArF,CACT,CAAC,EAED,EAAyB,WAAA,CAfE,EAeY,yBAYvC,IAAM,EAAA,CAAA,EAAA,EAA+B,UAAA,EAGnC,CAAC,EAAiD,KAClD,GAAM,SAD6D,KAHhC,OAI3B,CAAA,CAAqB,GAAG,EAAgB,CAAI,EAC9C,EAAY,EAAa,GAC/B,IAFgD,EAEzC,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC3C,EAAe,EAAf,QAAe,CAAd,CAA0B,GAAG,CAAA,CAAY,GAAG,CAAA,CAAiB,IAAK,CAAA,CAAc,CAC1F,CAAC,AADQ,EAGT,EAAuB,WAAA,CAfE,EAeY,uBAYrC,IAAM,EAAA,CAAA,EAAA,EAA8B,UAAA,EAGlC,CAAC,EAAgD,KACjD,GAAM,SAD4D,YAC1D,CAAA,CAAqB,GAAG,EAAe,CAAI,EAC7C,EAAY,EAAa,GAC/B,GAF+C,GAExC,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC3C,EAAe,EAAf,OAAe,CAAd,CAAyB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAgB,IAAK,CAAA,CAAc,CACxF,CAAC,CADQ,CAGT,EAAsB,WAAA,CAfE,EAeY,sBAYpC,IAAM,EAAA,CAAkC,EAAA,EAAA,UAAA,EAGtC,CAAC,EAAoD,KACrD,GAAM,SADgE,YAC9D,CAAA,CAAqB,GAAG,EAAmB,CAAI,EACjD,EAAY,EAAa,GAC/B,MAAO,CAF4C,AAE5C,EAAA,EAAA,GAAA,EAD2C,AAC3C,EAAe,EAAf,WAAe,CAAd,CAA6B,GAAG,CAAA,CAAY,GAAG,CAAA,CAAoB,IAAK,CAAA,AAAzE,CAAuF,CAChG,CAAC,EAED,EAA0B,WAAA,CAfH,EAeiB,0BAYxC,IAAM,EAAA,CAAA,EAAA,EAA8B,UAAA,EAGlC,CAAC,EAAgD,KACjD,GAAM,SAD4D,YAC1D,CAAA,CAAqB,GAAG,EAAe,CAAI,EAC7C,EAAY,EAAa,GAC/B,GAF+C,GAExC,CAAA,EAAA,EAAA,GAAA,EAAA,AAD2C,EAC5B,EAAf,OAAe,CAAd,CAAyB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAgB,IAAK,CAAA,CAAc,CACxF,CAAC,CADQ,CAGT,EAAsB,WAAA,CAfC,EAea,sBAYpC,IAAM,EAAA,CAAA,EAAA,EAA0B,UAAA,EAC9B,CAAC,EAA4C,KAC3C,GAAM,SADsD,YACpD,CAAA,CAAqB,GAAG,EAAW,CAAI,EACzC,EAAY,EAAa,EADY,CAE3C,MAAO,CAAA,EAAA,EAAA,GAAA,EAD2C,AAC3C,EAAe,EAAf,GAAe,CAAd,CAAqB,GAAG,CAAA,CAAY,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CAChF,GAGF,EAAkB,CAJP,UAIO,CAdC,EAca,kBAahC,IAAM,EAAkD,AACtD,IAEA,GAAM,CAAE,EADL,mBACK,UAAqB,CAAA,CAAU,KAAM,CAAA,cAAU,CAAA,aAAc,CAAA,CAAY,CAAI,EAC/E,EAAY,EAAa,GACzB,CAAC,EAAM,EAAO,CAAA,CAAA,EAAA,CAAA,CAAI,KAD0B,eAC1B,EAAqB,CAC3C,KAAM,EACN,YAAa,IAAe,EAC5B,SAAU,EACV,OAAQ,iBACV,CAAC,EAED,MACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAe,EAAf,CAAe,CAAd,CAAmB,GAAG,CAAA,MAAW,EAAY,aAA9C,AAA4D,OAA7C,IACZ,CAAA,CACH,CAEJ,EAYM,EAAA,CAAA,EAAA,EAA+B,UAAA,EAGnC,CAAC,EAAiD,KAClD,GAAM,SAD6D,YAC3D,CAAA,CAAqB,GAAG,EAAgB,CAAI,EAC9C,EAAY,EAAa,GAC/B,IAFgD,EAEzC,CAAA,EAAA,EAAA,GAAA,EAAe,AAD4B,EAC5B,EAAf,QAAe,CAAd,CAA0B,GAAG,CAAA,CAAY,GAAG,CAAA,CAAiB,IAAK,CAAA,CAAc,CAC1F,CAAC,AADQ,EAGT,EAAuB,WAAA,CAfE,EAeY,uBAYrC,IAAM,EAAA,CAAA,EAAA,EAA+B,UAAA,EAGnC,CAAC,EAAiD,KAClD,GAAM,SAD6D,YAC3D,CAAA,CAAqB,GAAG,EAAgB,CAAI,EAC9C,EAAY,EAAa,GAE/B,IAHgD,EAI9C,CAAA,EAAA,EAAA,GAAA,EAAA,AAHgD,EAGjC,EAAf,QAAe,CAAd,CACE,GAAG,CAAA,CACH,GAAG,CAAA,CACJ,IAAK,EACL,EAJF,IAIS,CACL,GAAG,EAAM,KAAA,CAGP,iDAAkD,uCAClD,gDAAiD,sCACjD,iDAAkD,uCAClD,sCAAuC,mCACvC,uCAAwC,mCAE5C,CAAA,EAGN,CAAC,EAED,EAAuB,WAAA,CAjCE,EAiCY,uBAIrC,IAAMJ,EAAO,EACP,EAAU,EACVK,EAAS,EACTH,EAAU,EACVI,EAAQ,EACRC,EAAQ,EACRJ,EAAO,EACPK,EAAe,EACfC,EAAa,EACbC,EAAY,EACZC,EAAgB,EAChBC,EAAY,EACZR,EAAQ,EACRS,EAAM,EACNC,EAAa,EACbC,EAAa,kdC3fnB,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,MACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAEA,EAAA,EAAA,CAAA,CAAA,QAEA,IAAM,EAAe,EAAA,IAA0B,CAEzC,EAAsB,EAAA,OAA6B,CAEnD,EAAoB,EAAA,KAA2B,CAE/C,EAAqB,EAAA,IANN,EAMkC,CAEjD,EAAkB,EAAA,EANI,CAMqB,CAE3C,EAAyB,EAAA,MANL,IAMqC,CAEzD,EAAyB,CAAA,EANJ,AAMI,EAAA,SAJP,CAIO,AAAe,EAK5C,CAAC,IAP4B,OAO1B,CAAS,OAAE,CAAK,IALU,MAKR,CAAQ,CAAE,GAAG,EAAO,CAAE,IAC3C,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,UAAgC,CAAA,CAC/B,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAC,AAFb,AAEY,EACT,iCADS,wKAET,GAAS,OACT,GAED,GAAG,CAAK,WAER,EACD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAY,CAAA,CAAC,UAAU,UAAU,MAAM,EAAvC,GAA4C,OAAO,UAGxD,GAAuB,WAAW,CAChC,EAAA,UAAgC,CAAC,WAAW,CAE9C,IAAM,EAAyB,CAAA,EAAA,EAAA,CAF7B,SAE6B,AAAe,EAG5C,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJ6B,AAI7B,EAAA,EAAA,GAAA,EAAC,EAAA,UAAgC,CAAA,CAC/B,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAFZ,AAEY,AAAC,EACV,iCADS,+cAET,GAED,GAAG,CAAK,GAGb,GAAuB,WAAW,CAChC,EAAA,UAAgC,CAAC,WAAW,CAE9C,IAAM,EAAsB,CAAA,EAAA,EAAA,CAF1B,SAE0B,AAAe,EAGzC,CAAC,CAAE,WAAS,CAAE,WAHY,EAGC,CAAC,CAAE,GAAG,EAAO,CAAE,IAC1C,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAA4B,CAAA,UAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MADF,CAC+B,CAAA,CAC5B,IAAK,EACL,WAAY,EACZ,OAHD,GAGY,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,iCADS,oJAET,2YACA,GAED,GAAG,CAAK,MAIf,EAAoB,WAAW,CAAG,EAAA,OAA6B,CAAC,WAAW,CAE3E,IAAM,EAAmB,GAAA,EAAA,IAFS,MAET,AAAe,EAKtC,CAAC,WAAE,CAAS,OAAE,CAAK,CAAE,GAAG,AALD,EAKQ,CAAE,IACjC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,IAA0B,CAAA,CACzB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,IAHH,6BAEY,uOAET,GAAS,OACT,GAED,GAAG,CAAK,IAGb,EAAiB,WAAW,CAAG,EAAA,IAA0B,CAAC,WAAW,CAErE,IAAM,EAA2B,CAAA,EAAA,EAAA,OAFF,GAEE,AAAe,EAG9C,CAAC,WAAE,CAAS,UAAE,CAAQ,CAHS,QAGP,CAAO,CAAE,GAAG,EAAO,CAAE,IAC7C,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,YAAkC,CAAA,CACjC,IAAK,EACL,UAAW,CAAA,EAAA,EAFZ,AAEY,EAAA,AAAC,EACV,iCADS,sMAET,GAEF,QAAS,EACR,GAAG,CAAK,WAET,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,wEACd,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAmC,CAAA,UAClC,CAAA,EAAA,EAAA,GAAA,EAAC,CADF,CACE,OAAM,CAAA,CAAC,MAAM,KAAK,OAAO,UAAzB,CAGJ,MAGL,EAAyB,WAAW,CAClC,EAAA,YAAkC,CAAC,WAAW,CAEhD,IAAM,EAAwB,CAAA,EAAA,CAF5B,CAE4B,UAAA,AAAe,EAG3C,CAAC,CAAE,WAAS,CAAE,UAAQ,CAHM,AAGJ,GAAG,EAAO,CAAE,IACpC,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,SAA+B,CAAA,CAC9B,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,CAFb,CAGG,iCADS,sMAET,GAED,GAAG,CAAK,WAET,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,wEACd,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAAmC,CAAA,UAClC,CAAA,EAAA,EAAA,GAAA,EAAC,CADF,CACE,OAAU,CAAA,CAAC,MAAM,IAAI,OAAO,UAGhC,CAHI,KAMT,EAAsB,WAAW,CAAG,EAAA,SAA+B,CAAC,WAAW,CAE/E,IAAM,EAAoB,CAAA,EAAA,EAAA,EAFU,QAEV,AAAe,EAKvC,CAAC,CAAE,WAAS,OAAE,CAAK,CAAE,GALG,AAKA,EAAO,CAAE,IACjC,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,KAA2B,CAAA,CAC1B,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,GAHH,8BAEY,GAET,GAAS,OACT,GAED,GAAG,CAAK,IAGb,EAAkB,WAAW,CAAG,EAAA,KAA2B,CAAC,WAAW,CAEvE,IAAM,EAAwB,CAAA,EAAA,EAAA,MAFE,IAEF,AAAe,EAG3C,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAAA,AAJ4B,EAI5B,EAAA,GAAA,EAAC,EAAA,SAA+B,CAAA,CAC9B,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,CAFb,CAEe,2BAA4B,GACzC,GAAG,AADO,CACF,IAGb,EAAsB,WAAW,CAAG,EAAA,SAA+B,CAAC,WAAW,CAE/E,IAAM,EAAuB,CAAC,MAFM,KAGlC,CAAS,CACT,GAAG,EACmC,GAEpC,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CACC,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EAAE,iCAAH,YAAiD,GAC3D,GAAG,CAAK,GAIf,EAAqB,WAAW,CAAG","ignoreList":[0,1]}