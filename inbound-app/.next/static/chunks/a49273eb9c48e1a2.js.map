{"version":3,"sources":["turbopack:///[project]/node_modules/@radix-ui/react-label/src/label.tsx","turbopack:///[project]/components/ui/label.tsx","turbopack:///[project]/node_modules/@vercel/analytics/src/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/package.json","turbopack:///[project]/node_modules/@vercel/analytics/src/queue.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/generic.ts","turbopack:///[project]/components/ui/card.tsx","turbopack:///[project]/components/icons/circle-check.tsx","turbopack:///[project]/components/icons/customInbound.tsx","turbopack:///[project]/features/domains/hooks/useDomainV2Hooks.ts","turbopack:///[project]/components/icons/file-2.tsx","turbopack:///[project]/components/icons/arrow-bold-left.tsx","turbopack:///[project]/components/icons/download-2.tsx","turbopack:///[project]/app/actions/data:21ea3f <text/javascript>","turbopack:///[project]/components/email-attachments.tsx","turbopack:///[project]/lib/email-management/email-thread-parser.ts","turbopack:///[project]/app/(main)/mail/[id]/page.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ComponentRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import type { AllowedPropertyValues, AnalyticsProps, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest }\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown> | undefined,\n  options: {\n    strip?: boolean;\n  }\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  if (!properties) return undefined;\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', '\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: AnalyticsProps & { basePath?: string }\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/script.debug.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/insights/script.js`;\n  }\n  return '/_vercel/insights/script.js';\n}\n","{\n  \"name\": \"@vercel/analytics\",\n  \"version\": \"1.5.0\",\n  \"description\": \"Gain real-time traffic insights with Vercel Web Analytics\",\n  \"keywords\": [\n    \"analytics\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/analytics\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"MPL-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./server\": {\n      \"node\": \"./dist/server/index.mjs\",\n      \"edge-light\": \"./dist/server/index.mjs\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"server\": [\n        \"dist/server/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"@vercel/eslint-config\"\n    ],\n    \"rules\": {\n      \"tsdoc/syntax\": \"off\"\n    },\n    \"ignorePatterns\": [\n      \"jest.setup.ts\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.0\",\n    \"@types/react\": \"^18.3.12\",\n    \"@vercel/eslint-config\": \"workspace:0.0.0\",\n    \"server-only\": \"^0.0.1\",\n    \"svelte\": \"^5.1.10\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.12\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2\",\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@remix-run/react\": {\n      \"optional\": true\n    },\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type {\n  AllowedPropertyValues,\n  AnalyticsProps,\n  FlagsDataInput,\n  BeforeSend,\n  BeforeSendEvent,\n} from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n  computeRoute,\n  getScriptSrc,\n} from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n * @param [props.disableAutoTrack] - Whether the injected script should track page views from pushState events. Disable if route is updated after pushState, a manually call page pageview().\n */\nfunction inject(\n  props: AnalyticsProps & {\n    framework?: string;\n    disableAutoTrack?: boolean;\n    basePath?: string;\n  } = {\n    debug: true,\n  }\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = '1';\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/insights`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = (): void => {\n    const errorMessage = isDevelopment()\n      ? 'Please check if any ad blockers are enabled and try again.'\n      : 'Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.';\n\n    // eslint-disable-next-line no-console -- Logging to console is intentional\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nfunction track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n  options?: {\n    flags?: FlagsDataInput;\n  }\n): void {\n  if (!isBrowser()) {\n    const msg =\n      '[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment';\n\n    if (isProduction()) {\n      // eslint-disable-next-line no-console -- Show warning in production\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name, options });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n      options,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console -- Logging to console is intentional\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview({\n  route,\n  path,\n}: {\n  route?: string | null;\n  path?: string;\n}): void {\n  window.va?.('pageview', { route, path });\n}\n\nexport { inject, track, pageview, computeRoute };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n\n// eslint-disable-next-line import/no-default-export -- Default export is intentional\nexport default {\n  inject,\n  track,\n  computeRoute,\n};\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction CircleCheck({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M9,1C4.589,1,1,4.589,1,9s3.589,8,8,8,8-3.589,8-8S13.411,1,9,1Zm3.843,5.708l-4.25,5.5c-.136,.176-.343,.283-.565,.291-.01,0-.019,0-.028,0-.212,0-.415-.09-.558-.248l-2.25-2.5c-.277-.308-.252-.782,.056-1.06,.309-.276,.781-.252,1.06,.056l1.648,1.832,3.701-4.789c.253-.328,.725-.388,1.052-.135,.328,.253,.388,.724,.135,1.052Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default CircleCheck;","import React from 'react';\n\ninterface CustomInboundIconProps {\n  /** Size of the icon container in pixels */\n  size?: number;\n  /** Background color of the rounded container */\n  backgroundColor?: string;\n  /** React icon component to display (optional if using text) */\n  Icon?: React.ComponentType<{ width: string | number; height: string | number; className?: string; style?: React.CSSProperties }>;\n  /** Text to display (1-2 letters, optional if using Icon) */\n  text?: string;\n  /** Size of the inner icon relative to container (0-1) */\n  iconScale?: number;\n  /** Color of the inner icon or text */\n  iconColor?: string;\n  /** Additional CSS classes */\n  className?: string;\n}\n\nexport const CustomInboundIcon: React.FC<CustomInboundIconProps> = ({\n  size = 64,\n  backgroundColor = '#A50A3E',\n  Icon,\n  text,\n  iconScale = 0.5,\n  iconColor = 'white',\n  className = '',\n}) => {\n  const iconSize = size * iconScale;\n  const borderRadius = size * 0.3; // Maintains the rounded rectangle proportion\n  \n  // Calculate font size based on container size\n  const fontSize = size * 0.4; // Adjust this ratio as needed\n\n  return (\n    <div\n      className={`inline-flex items-center justify-center ${className}`}\n      style={{\n        width: size,\n        height: size,\n        backgroundColor,\n        borderRadius,\n        // Add subtle gradient overlay like the original\n        background: `linear-gradient(180deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0) 100%), ${backgroundColor}`,\n        // Add subtle shadow for depth\n        boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n      }}\n    >\n      {Icon ? (\n        // Render icon with Nucleo-compatible props\n        <Icon\n          width={iconSize}\n          height={iconSize}\n          style={{ \n            color: iconColor,\n            filter: 'drop-shadow(0px 1px 2px rgba(0,0,0,0.1))'\n          }}\n        />\n      ) : text ? (\n        // Render text\n        <span\n          style={{\n            fontSize: fontSize,\n            fontWeight: 'bold',\n            color: iconColor,\n            textTransform: 'uppercase',\n            letterSpacing: '0.5px',\n            textShadow: '0 1px 2px rgba(0,0,0,0.1)',\n          }}\n        >\n          {text.slice(0, 2)}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CustomInboundIcon;\n","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { track } from '@vercel/analytics'\nimport type { \n    GetDomainsResponse,\n    GetDomainsRequest,\n    DomainWithStats\n} from '@/app/api/v2/domains/route'\nimport type { \n    GetDomainByIdResponse,\n    PutDomainByIdRequest\n} from '@/app/api/v2/domains/[id]/route'\nimport type {\n    PostEmailAddressesRequest,\n    PostEmailAddressesResponse\n} from '@/app/api/v2/email-addresses/route'\nimport type {\n    PutEmailAddressByIdRequest,\n    PutEmailAddressByIdResponse,\n    DeleteEmailAddressByIdResponse\n} from '@/app/api/v2/email-addresses/[id]/route'\n\n// Query keys for v2 domain API\nexport const domainV2Keys = {\n    all: ['v2', 'domains'] as const,\n    list: (params?: GetDomainsRequest) => [...domainV2Keys.all, 'list', params] as const,\n    detail: (domainId: string) => [...domainV2Keys.all, domainId] as const,\n    verification: (domainId: string) => [...domainV2Keys.all, domainId, 'verification'] as const,\n    emailAddresses: (domainId: string) => [...domainV2Keys.all, domainId, 'email-addresses'] as const,\n}\n\n// Hook for domains list (replacement for useDomainStatsQuery)\nexport const useDomainsListV2Query = (params?: GetDomainsRequest) => {\n    return useQuery<GetDomainsResponse>({\n        queryKey: domainV2Keys.list(params),\n        queryFn: async () => {\n            const searchParams = new URLSearchParams()\n            if (params?.limit) searchParams.set('limit', params.limit.toString())\n            if (params?.offset) searchParams.set('offset', params.offset.toString())\n            if (params?.status) searchParams.set('status', params.status)\n            if (params?.canReceive) searchParams.set('canReceive', params.canReceive)\n            if (params?.check) searchParams.set('check', params.check)\n\n            const response = await fetch(`/api/v2/domains?${searchParams}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        staleTime: 2 * 60 * 1000, // 2 minutes\n        gcTime: 5 * 60 * 1000, // 5 minutes\n    })\n}\n\n// Hook for domain details query\nexport const useDomainDetailsV2Query = (domainId: string) => {\n    return useQuery<GetDomainByIdResponse>({\n        queryKey: domainV2Keys.detail(domainId),\n        queryFn: async () => {\n            const response = await fetch(`/api/v2/domains/${domainId}`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || `HTTP error! status: ${response.status}`)\n            }\n            return response.json()\n        },\n        enabled: !!domainId,\n        staleTime: 2 * 60 * 1000, // 2 minutes\n        gcTime: 10 * 60 * 1000, // 10 minutes\n    })\n}\n\n// Hook for domain verification check (using GET with check=true)\nexport const useDomainVerificationCheckV2 = (domainId: string) => {\n    const queryClient = useQueryClient()\n\n    return useMutation({\n        mutationFn: async () => {\n            const response = await fetch(`/api/v2/domains?status=pending&check=true`)\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to check verification')\n            }\n            return response.json()\n        },\n        onSuccess: () => {\n            // Invalidate domain details to refresh the data\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n        },\n    })\n}\n\n// Hook for domain deletion\nexport const useDeleteDomainV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation({\n        mutationFn: async (domainId: string) => {\n            const response = await fetch(`/api/v2/domains/${domainId}`, {\n                method: 'DELETE',\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to delete domain')\n            }\n            return response.json()\n        },\n        onMutate: async (domainId: string) => {\n            console.log('🗑️ Starting optimistic domain deletion for:', domainId)\n            \n            // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n            await queryClient.cancelQueries({ queryKey: domainV2Keys.all })\n\n            // Snapshot the previous values for rollback\n            const previousQueriesData: Array<{ queryKey: any; data: GetDomainsResponse }> = []\n\n            // Get all cached domain list queries and update them\n            const queries = queryClient.getQueriesData<GetDomainsResponse>({ queryKey: domainV2Keys.all })\n            console.log('📊 Found', queries.length, 'cached domain queries to update')\n            \n            for (const [queryKey, queryData] of queries) {\n                // Only process queries that have the expected GetDomainsResponse structure\n                if (queryData && \n                    Array.isArray(queryData.data) && \n                    typeof queryData.meta === 'object' && \n                    queryData.meta !== null) {\n                    \n                    console.log('✅ Updating query with', queryData.data.length, 'domains, totalCount:', queryData.meta.totalCount)\n                    \n                    // Store previous data for rollback\n                    previousQueriesData.push({ queryKey, data: queryData })\n\n                    // Optimistically update by removing the domain\n                    const updatedDomains: GetDomainsResponse = {\n                        ...queryData,\n                        data: queryData.data.filter(domain => domain.id !== domainId),\n                        meta: {\n                            ...queryData.meta,\n                            totalCount: Math.max((queryData.meta?.totalCount || 0) - 1, 0)\n                        }\n                    }\n                    queryClient.setQueryData(queryKey, updatedDomains)\n                    \n                    console.log('✅ Updated query - new count:', updatedDomains.data.length, 'totalCount:', updatedDomains.meta.totalCount)\n                } else {\n                    console.warn('⚠️ Skipping invalid query data:', { \n                        hasData: !!queryData,\n                        isDataArray: queryData ? Array.isArray(queryData.data) : false,\n                        hasMeta: queryData ? typeof queryData.meta === 'object' && queryData.meta !== null : false\n                    })\n                }\n            }\n\n            console.log('✅ Optimistic update complete - updated', previousQueriesData.length, 'queries')\n            \n            // Return a context object with the snapshotted values\n            return { previousQueriesData }\n        },\n        onError: (err, domainId, context) => {\n            console.error('❌ Domain deletion failed, rolling back optimistic updates:', err.message)\n            \n            // If the mutation fails, use the context returned from onMutate to roll back\n            if (context?.previousQueriesData) {\n                console.log('🔄 Rolling back', context.previousQueriesData.length, 'queries')\n                for (const { queryKey, data } of context.previousQueriesData) {\n                    queryClient.setQueryData(queryKey, data)\n                }\n                console.log('✅ Rollback complete')\n            }\n        },\n        onSuccess: (_, domainId) => {\n            // Remove domain from cache and invalidate related queries\n            queryClient.removeQueries({ queryKey: domainV2Keys.detail(domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.all })\n            \n            // Also invalidate legacy domain stats queries for backward compatibility\n            queryClient.invalidateQueries({ queryKey: ['domains'] })\n            queryClient.invalidateQueries({ queryKey: ['domainStats'] })\n        },\n    })\n}\n\n// Hook for adding email address\nexport const useAddEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<PostEmailAddressesResponse, Error, PostEmailAddressesRequest>({\n        mutationFn: async (data) => {\n            const response = await fetch('/api/v2/email-addresses', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to add email address')\n            }\n            return response.json()\n        },\n        onSuccess: (data) => {\n            // Track email address addition\n            track('Email Address Added', {\n                address: data.address,\n                domainId: data.domainId,\n                emailAddressId: data.id\n            })\n            \n            // Invalidate domain details to refresh email addresses\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(data.domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.emailAddresses(data.domainId) })\n        },\n    })\n}\n\n// Hook for deleting email address\nexport const useDeleteEmailAddressV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<DeleteEmailAddressByIdResponse, Error, { emailAddressId: string; domainId: string }>({\n        mutationFn: async ({ emailAddressId }) => {\n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`, {\n                method: 'DELETE',\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to delete email address')\n            }\n            return response.json()\n        },\n        onSuccess: (_, { domainId }) => {\n            // Invalidate domain details to refresh email addresses\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.emailAddresses(domainId) })\n        },\n    })\n}\n\n// Hook for updating email endpoint/webhook\nexport const useUpdateEmailEndpointV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<PutEmailAddressByIdResponse, Error, PutEmailAddressByIdRequest & { emailAddressId: string; domainId: string }>({\n        mutationFn: async ({ emailAddressId, domainId, ...data }) => {\n            console.log('🚀 Sending update request:', {\n                url: `/api/v2/email-addresses/${emailAddressId}`,\n                body: data\n            })\n            \n            const response = await fetch(`/api/v2/email-addresses/${emailAddressId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to update endpoint')\n            }\n            const result = await response.json()\n            console.log('📥 Update response:', result)\n            return result\n        },\n        onSuccess: (_, { domainId }) => {\n            // Invalidate domain details to refresh email addresses\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.emailAddresses(domainId) })\n        },\n    })\n}\n\n// Hook for updating domain catch-all settings\nexport const useUpdateDomainCatchAllV2Mutation = () => {\n    const queryClient = useQueryClient()\n\n    return useMutation<any, Error, PutDomainByIdRequest & { domainId: string }>({\n        mutationFn: async ({ domainId, ...data }) => {\n            const response = await fetch(`/api/v2/domains/${domainId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data),\n            })\n            if (!response.ok) {\n                const error = await response.json()\n                throw new Error(error.error || 'Failed to update catch-all settings')\n            }\n            return response.json()\n        },\n        onSuccess: (_, { domainId, isCatchAllEnabled, catchAllEndpointId }) => {\n            // Track catch-all toggle\n            track(isCatchAllEnabled ? 'Catch All Enabled' : 'Catch All Disabled', {\n                domainId: domainId,\n                endpointId: catchAllEndpointId || null\n            })\n            \n            // Invalidate domain details to refresh catch-all status\n            queryClient.invalidateQueries({ queryKey: domainV2Keys.detail(domainId) })\n        },\n    })\n} ","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction File2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"12\" width=\"12\" {...props} viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"m10.428,2.867l-2.295-2.294c-.363-.364-.867-.573-1.382-.573h-3.001C2.233,0,1,1.233,1,2.75v6.5c0,1.517,1.233,2.75,2.75,2.75h4.5c1.517,0,2.75-1.233,2.75-2.75v-5.001c0-.521-.203-1.012-.572-1.382Zm-3.355-1.233l2.294,2.293c.021.021.032.049.049.073h-2.415V1.585c.024.016.051.027.071.048,0,0,0,0,0,0Z\" fill={fill} strokeWidth=\"0\"/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default File2;","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction ArrowBoldLeft({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M15.25,6h-5.25v-1.993c0-.478-.266-.907-.694-1.12-.427-.212-.93-.165-1.311,.124L1.414,8.004c-.314,.238-.494,.601-.494,.996s.18,.757,.494,.996l6.581,4.993c.223,.169,.487,.255,.754,.255,.188,0,.38-.043,.557-.131,.429-.213,.694-.642,.694-1.12v-1.993h5.25c.965,0,1.75-.785,1.75-1.75v-2.5c0-.965-.785-1.75-1.75-1.75Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default ArrowBoldLeft;","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction Download2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M13.75,2.5h-1.5c-.414,0-.75,.336-.75,.75s.336,.75,.75,.75h1.5c.689,0,1.25,.561,1.25,1.25v7.5c0,.689-.561,1.25-1.25,1.25H4.25c-.689,0-1.25-.561-1.25-1.25V5.25c0-.689,.561-1.25,1.25-1.25h1.5c.414,0,.75-.336,.75-.75s-.336-.75-.75-.75h-1.5c-1.517,0-2.75,1.233-2.75,2.75v7.5c0,1.517,1.233,2.75,2.75,2.75H13.75c1.517,0,2.75-1.233,2.75-2.75V5.25c0-1.517-1.233-2.75-2.75-2.75Z\" fill={fill}/>\n\t\t<path d=\"M5.47,8.22c-.293,.293-.293,.768,0,1.061l3,3c.146,.146,.338,.22,.53,.22s.384-.073,.53-.22l3-3c.293-.293,.293-.768,0-1.061s-.768-.293-1.061,0l-1.72,1.72V3.25c0-.414-.336-.75-.75-.75s-.75,.336-.75,.75v6.689l-1.72-1.72c-.293-.293-.768-.293-1.061,0Z\" fill={secondaryfill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default Download2;","/* __next_internal_action_entry_do_not_use__ [{\"6021894a83b2e73334806bae731dbe3ae3e2d52354\":\"downloadAttachment\"},\"app/actions/primary.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var downloadAttachment=/*#__PURE__*/createServerReference(\"6021894a83b2e73334806bae731dbe3ae3e2d52354\",callServer,void 0,findSourceMapURL,\"downloadAttachment\");","\"use client\"\n\nimport { Button } from '@/components/ui/button'\nimport File2 from '@/components/icons/file-2'\nimport Download2 from '@/components/icons/download-2'\nimport { downloadAttachment } from '@/app/actions/primary'\nimport { CustomInboundIcon } from '@/components/icons/customInbound'\n\ninterface EmailAttachment {\n  filename?: string\n  contentType?: string\n  size?: number\n  contentId?: string\n  isInline?: boolean\n  contentDisposition?: string\n}\n\ninterface EmailAttachmentsProps {\n  emailId: string\n  attachments: EmailAttachment[]\n}\n\nfunction formatBytes(bytes: number) {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\nasync function handleDownloadAttachment(emailId: string, attachmentFilename: string) {\n  try {\n    const result = await downloadAttachment(emailId, attachmentFilename)\n    \n    if (!result.success || !result.data) {\n      console.error('Failed to download attachment:', result.error)\n      \n      // Show user-friendly error message\n      if (result.error?.includes('content not available')) {\n        alert('This attachment cannot be downloaded because the email was processed without full binary data storage. This typically happens with older emails or emails processed during system maintenance.')\n      } else {\n        alert(`Failed to download attachment: ${result.error}`)\n      }\n      return\n    }\n\n    // Convert base64 to blob\n    const binaryString = atob(result.data.content)\n    const bytes = new Uint8Array(binaryString.length)\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i)\n    }\n    \n    const blob = new Blob([bytes], { type: result.data.contentType })\n    \n    // Create download link\n    const url = URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = result.data.filename\n    link.style.display = 'none'\n    \n    // Trigger download\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    \n    // Clean up\n    URL.revokeObjectURL(url)\n  } catch (error) {\n    console.error('Error downloading attachment:', error)\n    alert('An unexpected error occurred while downloading the attachment.')\n  }\n}\n\nexport function EmailAttachments({ emailId, attachments }: EmailAttachmentsProps) {\n  if (!attachments || attachments.length === 0) {\n    return null\n  }\n\n  // Filter out attachments without filenames\n  const validAttachments = attachments.filter(attachment => attachment.filename)\n\n  if (validAttachments.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"mt-6 pt-6 border-t border-gray-200\">\n      <h3 className=\"text-sm font-medium text-gray-900 mb-3\">\n        {validAttachments.length} Attachment{validAttachments.length > 1 ? 's' : ''}\n      </h3>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n        {validAttachments.map((attachment, index) => (\n          <div key={index} className=\"flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\">\n            <CustomInboundIcon\n              Icon={File2}\n              backgroundColor=\"#6b7280\"\n              size={32}\n              className=\"flex-shrink-0\"\n            />\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"font-medium text-sm text-gray-900 truncate\">{attachment.filename}</div>\n              <div className=\"text-xs text-gray-500\">\n                {attachment.contentType || 'Unknown type'} • {formatBytes(attachment.size || 0)}\n              </div>\n            </div>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className=\"text-gray-600 hover:bg-gray-100\"\n              onClick={() => handleDownloadAttachment(emailId, attachment.filename!)}\n              disabled={!attachment.filename}\n            >\n              <Download2 className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n} ","/**\n * Email Thread Parser Utilities\n * \n * Utilities for parsing email content to separate new content from quoted content\n * in threaded conversations. This helps display clean email threads in the UI.\n * \n * Enhanced to handle complex threading scenarios including:\n * - Gmail-style nested quotes\n * - Forwarded message chains\n * - Multiple attribution formats\n * - International quote prefixes\n */\n\nexport interface ParsedEmailContent {\n  newContent: string\n  quotedContent: string\n  hasQuotedContent: boolean\n  quoteLevels: number // How many levels of nesting detected\n}\n\n/**\n * Enhanced patterns for detecting quoted content start\n * Based on RFC 2822 and common email client practices\n */\nconst QUOTE_PATTERNS = [\n  // Standard attribution lines\n  /^On .+, .+ wrote:$/m, // \"On Mon, 27 Jan 2025 10:30:00 +0000, John Doe wrote:\"\n  /^Am .+ schrieb .+:$/m, // German format\n  /^Le .+ .+ a écrit :$/m, // French format\n  /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}.*wrote:/m, // Date format variations\n  /^\\d{1,2}\\/\\d{1,2}\\/\\d{4} \\d{1,2}:\\d{2}.*wrote:/m, // US date format\n  \n  // Email header patterns\n  /^From: .+$/m, // \"From: sender@example.com\"\n  /^To: .+$/m, // \"To: recipient@example.com\"\n  /^Subject: .+$/m, // \"Subject: Re: Something\"\n  /^Date: .+$/m, // \"Date: Mon, 27 Jan 2025\"\n  \n  // Forwarded message patterns\n  /^----- ?Original Message ?-----/m, // Outlook format\n  /^----- ?Forwarded [Mm]essage ?-----/m, // Forward indicators\n  /^Begin forwarded message:/m, // Apple Mail format\n  /^---------- Forwarded message ----------/m, // Gmail format\n  \n  // Quote prefixes\n  /^> /m, // Standard email quoting\n  /^>\\s*$/m, // Empty quoted line\n  /^-----+/m, // Common divider lines\n  /^_{3,}/m, // Underline dividers\n  /^={3,}/m, // Equal sign dividers\n  \n  // Mobile client patterns\n  /^Sent from my /m, // \"Sent from my iPhone\"\n  /^Get Outlook for /m, // Outlook mobile\n]\n\n/**\n * Patterns that indicate attribution lines (who wrote what)\n */\nconst ATTRIBUTION_PATTERNS = [\n  /On .+, .+ wrote:/,\n  /Am .+ schrieb .+:/,\n  /Le .+ .+ a écrit :/,\n  /\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}.*wrote:/,\n  /\\d{1,2}\\/\\d{1,2}\\/\\d{4} \\d{1,2}:\\d{2}.*wrote:/,\n  /----- ?Original Message ?-----/,\n  /----- ?Forwarded [Mm]essage ?-----/,\n  /Begin forwarded message:/,\n  /---------- Forwarded message ----------/,\n]\n\n/**\n * Parse text email content to separate new content from quoted content\n * Enhanced to handle complex nested threading\n */\nexport function parseTextEmailContent(content: string): ParsedEmailContent {\n  if (!content || typeof content !== 'string') {\n    return {\n      newContent: '',\n      quotedContent: '',\n      hasQuotedContent: false,\n      quoteLevels: 0\n    }\n  }\n\n  const lines = content.split('\\n')\n  const newContentLines: string[] = []\n  const quotedContentLines: string[] = []\n  let foundQuoteStart = false\n  let quoteLevels = 0\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i]\n    const trimmedLine = line.trim()\n    \n    // Check if this line starts quoted content\n    if (!foundQuoteStart) {\n      // Check for attribution patterns\n      const isAttributionLine = ATTRIBUTION_PATTERNS.some(pattern => pattern.test(line))\n      \n      // Check for quote prefixes\n      const isQuoteLine = line.startsWith('>') || \n                         (trimmedLine === '' && lines[i + 1]?.startsWith('>'))\n      \n      // Check for other quote indicators\n      const isQuoteIndicator = QUOTE_PATTERNS.some(pattern => pattern.test(line))\n      \n      if (isAttributionLine || isQuoteLine || isQuoteIndicator) {\n        foundQuoteStart = true\n        quotedContentLines.push(line)\n        \n        // Count quote levels\n        if (line.startsWith('>')) {\n          const quoteLevel = (line.match(/^>+/)?.[0]?.length || 0)\n          quoteLevels = Math.max(quoteLevels, quoteLevel)\n        }\n      } else {\n        newContentLines.push(line)\n      }\n    } else {\n      quotedContentLines.push(line)\n      \n      // Update quote levels for nested content\n      if (line.startsWith('>')) {\n        const quoteLevel = (line.match(/^>+/)?.[0]?.length || 0)\n        quoteLevels = Math.max(quoteLevels, quoteLevel)\n      }\n    }\n  }\n\n  // Clean up the content - remove trailing empty lines from new content\n  while (newContentLines.length > 0 && newContentLines[newContentLines.length - 1].trim() === '') {\n    newContentLines.pop()\n  }\n\n  const newContent = newContentLines.join('\\n').trim()\n  const quotedContent = quotedContentLines.join('\\n').trim()\n\n  return {\n    newContent,\n    quotedContent,\n    hasQuotedContent: quotedContent.length > 0,\n    quoteLevels\n  }\n}\n\n/**\n * Parse HTML email content to separate new content from quoted content\n * Enhanced to handle Gmail and other modern email clients\n */\nexport function parseHtmlEmailContent(content: string): ParsedEmailContent {\n  if (!content || typeof content !== 'string') {\n    return {\n      newContent: '',\n      quotedContent: '',\n      hasQuotedContent: false,\n      quoteLevels: 0\n    }\n  }\n\n  // Look for common HTML quote patterns\n  const quotePatterns = [\n    // Gmail style quotes\n    /<div[^>]*class=\"[^\"]*gmail_quote[^\"]*\"[^>]*>/i,\n    /<blockquote[^>]*class=\"[^\"]*gmail_quote[^\"]*\"[^>]*>/i,\n    \n    // General blockquote patterns\n    /<blockquote[^>]*>/i,\n    \n    // Div with quote styling\n    /<div[^>]*style=\"[^\"]*border-left[^\"]*\"[^>]*>/i,\n    /<div[^>]*style=\"[^\"]*margin-left[^\"]*\"[^>]*>/i,\n    \n    // Outlook quote patterns\n    /<div[^>]*style=\"[^\"]*border-top[^\"]*\"[^>]*>/i,\n    \n    // Quote class patterns\n    /<div[^>]*class=\"[^\"]*quote[^\"]*\"[^>]*>/i,\n    /<div[^>]*class=\"[^\"]*moz-cite-prefix[^\"]*\"[^>]*>/i,\n  ]\n\n  // Also look for text-based attribution patterns in HTML\n  const textPatterns = [\n    /On .+, .+ wrote:/,\n    /From: .+/,\n    /----- ?Original Message ?-----/,\n    /----- ?Forwarded [Mm]essage ?-----/,\n    /Begin forwarded message:/,\n    /---------- Forwarded message ----------/,\n    /Sent from my /,\n    /Get Outlook for /,\n  ]\n\n  // Find the earliest quote pattern\n  let quoteStartIndex = -1\n  let quoteLevels = 0\n  \n  // Check HTML patterns\n  for (const pattern of quotePatterns) {\n    const match = content.match(pattern)\n    if (match && match.index !== undefined) {\n      if (quoteStartIndex === -1 || match.index < quoteStartIndex) {\n        quoteStartIndex = match.index\n        quoteLevels = 1 // HTML quotes are typically one level\n      }\n    }\n  }\n\n  // Check text patterns as fallback\n  for (const pattern of textPatterns) {\n    const match = content.match(pattern)\n    if (match && match.index !== undefined) {\n      if (quoteStartIndex === -1 || match.index < quoteStartIndex) {\n        quoteStartIndex = match.index\n        quoteLevels = 1\n      }\n    }\n  }\n\n  // Check for nested blockquotes to determine levels\n  if (quoteStartIndex !== -1) {\n    const quotedPortion = content.substring(quoteStartIndex)\n    const blockquoteMatches = quotedPortion.match(/<blockquote[^>]*>/gi)\n    if (blockquoteMatches) {\n      quoteLevels = Math.max(quoteLevels, blockquoteMatches.length)\n    }\n  }\n\n  if (quoteStartIndex !== -1) {\n    const newContent = content.substring(0, quoteStartIndex).trim()\n    const quotedContent = content.substring(quoteStartIndex).trim()\n    \n    return {\n      newContent,\n      quotedContent,\n      hasQuotedContent: quotedContent.length > 0,\n      quoteLevels\n    }\n  }\n\n  return {\n    newContent: content.trim(),\n    quotedContent: '',\n    hasQuotedContent: false,\n    quoteLevels: 0\n  }\n}\n\n/**\n * Parse email content (auto-detects HTML vs text)\n * Enhanced with better detection and nesting support\n */\nexport function parseEmailContent(content: string): ParsedEmailContent {\n  if (!content) {\n    return {\n      newContent: '',\n      quotedContent: '',\n      hasQuotedContent: false,\n      quoteLevels: 0\n    }\n  }\n\n  // More sophisticated HTML detection\n  const hasHtmlTags = /<[^>]+>/g.test(content)\n  const hasHtmlEntities = /&[a-zA-Z0-9#]+;/g.test(content)\n  const isLikelyHtml = hasHtmlTags || hasHtmlEntities\n\n  if (isLikelyHtml) {\n    return parseHtmlEmailContent(content)\n  } else {\n    return parseTextEmailContent(content)\n  }\n}\n\n/**\n * Extract just the new content from an email (strips quoted content)\n * Enhanced to handle complex threading\n */\nexport function extractNewContent(content: string): string {\n  const parsed = parseEmailContent(content)\n  return parsed.newContent\n}\n\n/**\n * Check if email content contains quoted content\n */\nexport function hasQuotedContent(content: string): boolean {\n  const parsed = parseEmailContent(content)\n  return parsed.hasQuotedContent\n}\n\n/**\n * Get the number of quote levels in the content\n */\nexport function getQuoteLevels(content: string): number {\n  const parsed = parseEmailContent(content)\n  return parsed.quoteLevels\n}\n\n/**\n * Split email content into individual messages based on attribution patterns\n * Useful for complex forwarded email chains\n */\nexport function splitIntoMessages(content: string): Array<{\n  content: string\n  attribution?: string\n  isForwarded: boolean\n}> {\n  if (!content) return []\n\n  const messages: Array<{\n    content: string\n    attribution?: string\n    isForwarded: boolean\n  }> = []\n\n  const lines = content.split('\\n')\n  let currentMessage: string[] = []\n  let currentAttribution: string | undefined\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i]\n    \n    // Check if this line is an attribution line\n    const isAttribution = ATTRIBUTION_PATTERNS.some(pattern => pattern.test(line))\n    \n    if (isAttribution && currentMessage.length > 0) {\n      // Save the current message\n      messages.push({\n        content: currentMessage.join('\\n').trim(),\n        attribution: currentAttribution,\n        isForwarded: /forward|fwd/i.test(currentAttribution || '')\n      })\n      \n      // Start a new message\n      currentMessage = []\n      currentAttribution = line.trim()\n    } else if (isAttribution) {\n      currentAttribution = line.trim()\n    } else {\n      currentMessage.push(line)\n    }\n  }\n\n  // Add the final message\n  if (currentMessage.length > 0) {\n    messages.push({\n      content: currentMessage.join('\\n').trim(),\n      attribution: currentAttribution,\n      isForwarded: /forward|fwd/i.test(currentAttribution || '')\n    })\n  }\n\n  return messages.filter(msg => msg.content.length > 0)\n} ","\"use client\"\n\nimport { useParams, useRouter } from 'next/navigation'\nimport { useSession } from '@/lib/auth/auth-client'\nimport { useEffect, useState } from 'react'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Label } from '@/components/ui/label'\nimport Link from 'next/link'\nimport ArrowBoldLeft from '@/components/icons/arrow-bold-left'\nimport File2 from '@/components/icons/file-2'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport Download2 from '@/components/icons/download-2'\nimport CircleCheck from '@/components/icons/circle-check'\nimport ArrowUpRight2 from '@/components/icons/arrow-up-right-2'\nimport { format } from 'date-fns'\nimport { CustomInboundIcon } from '@/components/icons/customInbound'\nimport { EmailAttachments } from '@/components/email-attachments'\nimport { useEmailThreadV2Query, useMarkEmailAsReadV2Mutation, useReplyToEmailV2Mutation, useDomainsListV2Query } from '@/features/emails/hooks'\nimport { toast } from 'sonner'\nimport { extractNewContent } from '@/lib/email-management/email-thread-parser'\nimport type { ThreadMessage } from '@/app/api/v2/mail/[id]/thread/route'\n\ninterface ThreadMessageProps {\n  message: ThreadMessage\n  isLatest?: boolean\n  showAttachments?: boolean\n}\n\nfunction ThreadMessageItem({ message, isLatest = false, showAttachments = true }: ThreadMessageProps) {\n  // Extract initials for avatar\n  const getInitials = (name: string) => {\n    const words = name.trim().split(/\\s+/)\n    if (words.length >= 2) {\n      return (words[0].charAt(0) + words[1].charAt(0)).toUpperCase()\n    } else {\n      return name.slice(0, 2).toUpperCase()\n    }\n  }\n\n  const getAvatarColor = (name: string) => {\n    const colors = [\n      '#6366f1', '#8b5cf6', '#06b6d4', '#10b981', \n      '#f59e0b', '#ef4444', '#ec4899', '#84cc16'\n    ]\n    const hash = name.split('').reduce((a, b) => {\n      a = ((a << 5) - a) + b.charCodeAt(0)\n      return a & a\n    }, 0)\n    return colors[Math.abs(hash) % colors.length]\n  }\n\n  const senderName = message.fromName || message.from.split('<')[0].trim() || message.from.split('@')[0]\n  const initials = getInitials(senderName)\n  const avatarColor = getAvatarColor(senderName)\n  const displayDate = message.receivedAt || message.sentAt\n\n  // For threaded view, extract only the new content (not quoted content)\n  const displayContent = message.content.htmlBody \n    ? extractNewContent(message.content.htmlBody) || message.content.htmlBody\n    : extractNewContent(message.content.textBody || '') || message.content.textBody\n\n  return (\n    <div className={`border-l-2 pl-4 pb-6 ${\n      message.type === 'outbound' \n        ? 'border-l-blue-200 bg-blue-50/30' \n        : 'border-l-gray-200'\n    }`}>\n      <div className=\"flex items-start gap-3 mb-3\">\n        <CustomInboundIcon \n          text={initials}\n          size={32} \n          backgroundColor={avatarColor} \n        />\n        <div className=\"flex-1\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"font-medium text-foreground text-sm\">\n                {senderName}\n              </span>\n              <span className=\"text-muted-foreground text-xs\">\n                &lt;{message.addresses.from?.addresses?.[0]?.address || message.from}&gt;\n              </span>\n              {message.type === 'outbound' && (\n                <Badge className=\"bg-blue-500 text-white rounded-full px-2 py-0.5 text-xs\">\n                  Sent\n                </Badge>\n              )}\n            </div>\n            <div className=\"text-xs text-muted-foreground\">\n              {displayDate ? format(new Date(displayDate), 'MMM d, h:mm a') : 'Unknown date'}\n            </div>\n          </div>\n          <div className=\"text-xs text-muted-foreground mt-1\">\n            to {message.to}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"ml-8\">\n        {displayContent ? (\n          message.content.htmlBody ? (\n            <div \n              className=\"prose prose-sm max-w-none rounded-lg\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                textAlign: 'left'\n              }}\n              dangerouslySetInnerHTML={{ __html: displayContent }}\n            />\n          ) : (\n            <div \n              className=\"whitespace-pre-wrap text-foreground leading-relaxed text-sm\"\n              style={{ \n                fontFamily: 'Inter, system-ui, sans-serif',\n                textAlign: 'left'\n              }}\n            >\n              {displayContent}\n            </div>\n          )\n        ) : (\n          <div className=\"text-center py-4 text-muted-foreground text-sm\">\n            <Envelope2 className=\"h-4 w-4 mx-auto mb-1\" />\n            <p>No content available</p>\n          </div>\n        )}\n\n        {/* Attachments for the latest message or if explicitly requested */}\n        {showAttachments && message.content.attachments && message.content.attachments.length > 0 && (\n          <div className=\"mt-4\">\n            <EmailAttachments \n              emailId={message.id} \n              attachments={message.content.attachments} \n            />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default function EmailViewPage() {\n  const params = useParams()\n  const router = useRouter()\n  const { data: session } = useSession()\n  const emailId = params.id as string\n  \n  // State for reply form\n  const [replyText, setReplyText] = useState('')\n  const [selectedFromAddress, setSelectedFromAddress] = useState<string>('')\n  const [showAdvanced, setShowAdvanced] = useState(false)\n  const [customFromAddress, setCustomFromAddress] = useState('')\n\n  // Use thread query instead of single email query\n  const {\n    data: threadData,\n    isLoading,\n    error: threadError,\n    refetch\n  } = useEmailThreadV2Query(emailId)\n\n  const markAsReadMutation = useMarkEmailAsReadV2Mutation()\n  const replyMutation = useReplyToEmailV2Mutation()\n  \n  // Get user's verified domains for the from dropdown\n  const { data: domainsData } = useDomainsListV2Query({ status: 'verified' })\n\n  // Handle authentication\n  useEffect(() => {\n    if (!session) {\n      router.push('/login')\n    }\n  }, [session, router])\n\n  // Auto-mark original email as read when viewing\n  useEffect(() => {\n    if (threadData?.messages) {\n      const originalMessage = threadData.messages.find(m => m.id === emailId)\n      if (originalMessage && !originalMessage.isRead && originalMessage.type === 'inbound') {\n        markAsReadMutation.mutate(emailId)\n      }\n    }\n  }, [threadData, emailId, markAsReadMutation])\n  \n  // Set default from address when thread data is loaded\n  useEffect(() => {\n    if (threadData?.messages && !selectedFromAddress && !showAdvanced) {\n      // Use the recipient email address from the latest inbound message\n      const latestInbound = threadData.messages\n        .filter(m => m.type === 'inbound')\n        .sort((a, b) => new Date(b.receivedAt || 0).getTime() - new Date(a.receivedAt || 0).getTime())[0]\n      \n      if (latestInbound) {\n        const recipientAddress = latestInbound.addresses.to?.addresses?.[0]?.address || latestInbound.to\n        setSelectedFromAddress(recipientAddress)\n      }\n    }\n  }, [threadData, selectedFromAddress, showAdvanced])\n\n  // Validate custom email address domain\n  const isCustomAddressValid = () => {\n    if (!customFromAddress) return false\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(customFromAddress)) return false\n    \n    const domain = customFromAddress.split('@')[1]\n    const verifiedDomains = domainsData?.data?.filter(d => d.status === 'verified') || []\n    return verifiedDomains.some(d => d.domain === domain)\n  }\n\n  const handleReply = async () => {\n    if (!replyText.trim()) {\n      toast.error('Please enter a reply message')\n      return\n    }\n    \n    const fromAddress = showAdvanced && customFromAddress ? customFromAddress : selectedFromAddress\n    \n    if (!fromAddress) {\n      toast.error('Please select a from address')\n      return\n    }\n    \n    if (showAdvanced && !isCustomAddressValid()) {\n      toast.error('Invalid email address or domain not verified')\n      return\n    }\n    \n    // Extract the original sender's email address from the latest inbound message\n    const latestInbound = threadData?.messages\n      ?.filter(m => m.type === 'inbound')\n      ?.sort((a, b) => new Date(b.receivedAt || 0).getTime() - new Date(a.receivedAt || 0).getTime())[0]\n    \n    const originalSenderAddress = latestInbound?.addresses.from?.addresses?.[0]?.address || \n                                 (latestInbound?.from.includes('<') ? \n                                  latestInbound.from.split('<')[1].replace('>', '') : \n                                  latestInbound?.from)\n    \n    try {\n      await replyMutation.mutateAsync({\n        emailId,\n        from: fromAddress,\n        to: originalSenderAddress,\n        text: replyText,\n        include_original: true\n      })\n      \n      toast.success('Reply sent successfully!')\n      setReplyText('')\n      setCustomFromAddress('')\n      setShowAdvanced(false)\n      \n      // Refetch the thread to show the new reply\n      refetch()\n    } catch (error) {\n      console.error('Failed to send reply:', error)\n      toast.error(error instanceof Error ? error.message : 'Failed to send reply')\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"p-4 font-outfit\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"text-muted-foreground\">Loading conversation...</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (threadError || !threadData) {\n    return (\n      <div className=\"p-4 font-outfit\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"flex items-center gap-4 mb-6\">\n            <Link href=\"/mail\">\n              <Button variant=\"primary\">\n                <ArrowBoldLeft className=\"h-4 w-4 mr-2\" />\n                Back to Mail\n              </Button>\n            </Link>\n          </div>\n\n          <Card className=\"border-destructive/50 bg-destructive/10 rounded-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center gap-2 text-destructive\">\n                <Envelope2 className=\"h-4 w-4\" />\n                <span>{threadError?.message || 'Failed to load conversation'}</span>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n\n  // Get the subject from the first message\n  const conversationSubject = threadData.messages[0]?.subject || 'No Subject'\n  const messageCount = threadData.messages.length\n\n  return (\n    <div className=\"p-4 font-outfit\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center gap-4 mb-6\">\n          <Link href=\"/mail\">\n            <Button variant=\"primary\">\n              <ArrowBoldLeft className=\"h-4 w-4 mr-2\" />\n              Back to Mail\n            </Button>\n          </Link>\n        </div>\n\n        {/* Conversation Header */}\n        <Card className=\"rounded-xl overflow-hidden mb-4\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-semibold text-foreground mb-2 tracking-tight\">\n                  {conversationSubject}\n                </h1>\n                <div className=\"text-sm text-muted-foreground\">\n                  {messageCount} message{messageCount !== 1 ? 's' : ''} in conversation\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Badge className=\"bg-blue-500 text-white rounded-full px-2.5 py-0.5 text-xs font-medium\">\n                  <Envelope2 className=\"w-3 h-3 mr-1\" />\n                  Thread\n                </Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Conversation Thread */}\n        <Card className=\"rounded-xl overflow-hidden\">\n          <CardContent className=\"p-6\">\n            <div className=\"space-y-0\">\n              {threadData.messages.map((message, index) => (\n                <ThreadMessageItem\n                  key={message.id}\n                  message={message}\n                  isLatest={index === threadData.messages.length - 1}\n                  showAttachments={index === threadData.messages.length - 1} // Only show attachments on latest\n                />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Reply Card */}\n        <Card className=\"rounded-xl overflow-hidden mt-4\">\n          <CardContent className=\"p-6\">\n            <div className=\"space-y-4\">\n              {/* Reply Header */}\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-foreground\">Reply</h3>\n                <div className=\"text-sm text-muted-foreground\">\n                  From: {showAdvanced && customFromAddress ? customFromAddress : selectedFromAddress}\n                </div>\n              </div>\n\n              {/* Reply Textarea */}\n              <div className=\"relative\">\n                <Textarea\n                  value={replyText}\n                  onChange={(e) => setReplyText(e.target.value)}\n                  placeholder=\"Type your reply here...\"\n                  rows={6}\n                  className=\"w-full resize-none pr-16\"\n                  disabled={replyMutation.isPending}\n                />\n                \n                {/* Send Button - Bottom Right of Textarea */}\n                <Button\n                  onClick={handleReply}\n                  disabled={replyMutation.isPending || !replyText.trim() || (!showAdvanced && !selectedFromAddress) || (showAdvanced && (!customFromAddress || !isCustomAddressValid()))}\n                  size=\"icon\"\n                  className=\"absolute bottom-2 right-2\"\n                  title=\"Send Reply\"\n                >\n                  {replyMutation.isPending ? (\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\" />\n                  ) : (\n                    <ArrowUpRight2 className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n\n              {/* Advanced Section Toggle */}\n              <div className=\"pt-2 border-t border-border\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowAdvanced(!showAdvanced)}\n                  className=\"text-xs text-muted-foreground hover:text-foreground\"\n                >\n                  {showAdvanced ? 'Hide' : 'Show'} Advanced Options\n                </Button>\n              </div>\n\n              {/* Advanced Options */}\n              {showAdvanced && (\n                <div className=\"space-y-4 pt-2\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"custom-from\">Custom From Address</Label>\n                    <div className=\"flex items-center gap-2\">\n                      <input\n                        type=\"email\"\n                        id=\"custom-from\"\n                        value={customFromAddress}\n                        onChange={(e) => setCustomFromAddress(e.target.value)}\n                        placeholder=\"custom@yourdomain.com\"\n                        className=\"flex-1 px-3 py-2 border border-border rounded-md bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-primary\"\n                      />\n                      <div className=\"flex items-center justify-center w-8 h-8\">\n                        {customFromAddress && (\n                          isCustomAddressValid() ? (\n                            <CircleCheck className=\"h-5 w-5 text-green-500\" />\n                          ) : (\n                            <span className=\"text-red-500\">❌</span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                    {customFromAddress && !isCustomAddressValid() && (\n                      <p className=\"text-xs text-red-500\">\n                        Email address must use one of your verified domains: {domainsData?.data?.filter(d => d.status === 'verified').map(d => d.domain).join(', ')}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* Available Domains Reference */}\n                  <div className=\"space-y-2\">\n                    <Label className=\"text-xs text-muted-foreground\">Your Verified Domains</Label>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {domainsData?.data?.filter(d => d.status === 'verified').map(domain => (\n                        <Badge\n                          key={domain.id}\n                          variant=\"secondary\"\n                          className=\"text-xs cursor-pointer hover:bg-secondary/80\"\n                          onClick={() => {\n                            const prefix = customFromAddress.split('@')[0] || 'noreply'\n                            setCustomFromAddress(`${prefix}@${domain.domain}`)\n                          }}\n                        >\n                          @{domain.domain}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Info Text */}\n              <p className=\"text-xs text-muted-foreground\">\n                Your reply will be added to this conversation thread.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n} "],"names":["name"],"mappings":"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","ignoreList":[0,2,3,4,5]}