module.exports={280269:e=>{"use strict";var{g:t,__dirname:r}=e;e.s({blockEmail:()=>l,getBlockedEmailsForDomain:()=>c,getBlockedEmailsForUser:()=>m,isEmailBlocked:()=>n,unblockEmail:()=>d});var o=e.i(557440);e.i(468686);var a=e.i(55379),i=e.i(176825),s=e.i(318812);async function n(e){try{return(await o.db.select({id:a.blockedEmails.id}).from(a.blockedEmails).where((0,i.eq)(a.blockedEmails.emailAddress,e.toLowerCase())).limit(1)).length>0}catch(e){return console.error("Error checking if email is blocked:",e),!1}}async function l(e,t,r){try{if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e))return{success:!1,error:"Invalid email format"};let l=e.toLowerCase(),d=l.split("@")[1]?.toLowerCase()||"";if(!d)return{success:!1,error:"Could not extract domain from email address"};if(await n(l))return{success:!1,error:"Email address is already blocked"};let c=await o.db.select({id:a.emailDomains.id,domain:a.emailDomains.domain,isCatchAllEnabled:a.emailDomains.isCatchAllEnabled,userId:a.emailDomains.userId}).from(a.emailDomains).where((0,i.eq)(a.emailDomains.domain,d)).limit(1);if(!c[0])return{success:!1,error:`Domain ${d} not found in the system`};let m=c[0];if((await o.db.select({id:a.emailAddresses.id}).from(a.emailAddresses).where((0,i.and)((0,i.eq)(a.emailAddresses.address,l),(0,i.eq)(a.emailAddresses.domainId,m.id))).limit(1))[0])return{success:!1,error:"Cannot block manually added email addresses. Only catch-all emails can be blocked."};if(!m.isCatchAllEnabled)return{success:!1,error:`Domain ${d} does not have catch-all enabled. Only emails from catch-all domains can be blocked.`};let u={id:(0,s.nanoid)(),emailAddress:l,domainId:m.id,reason:r||null,blockedBy:t,createdAt:new Date,updatedAt:new Date};return await o.db.insert(a.blockedEmails).values(u),console.log(`‚úÖ Email blocking - Successfully blocked ${l} on catch-all domain ${d}`),{success:!0,message:`Successfully blocked ${l} from catch-all domain ${d}`}}catch(e){return console.error("Error blocking email:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred while blocking email"}}}async function d(e){try{let t=e.toLowerCase();if(!(await o.db.select({id:a.blockedEmails.id}).from(a.blockedEmails).where((0,i.eq)(a.blockedEmails.emailAddress,t)).limit(1))[0])return{success:!1,error:"Email address is not blocked"};return await o.db.delete(a.blockedEmails).where((0,i.eq)(a.blockedEmails.emailAddress,t)),console.log(`‚úÖ Email blocking - Successfully unblocked ${t}`),{success:!0,message:`Successfully unblocked ${t}`}}catch(e){return console.error("Error unblocking email:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred while unblocking email"}}}async function c(e){try{let t=await o.db.select({id:a.blockedEmails.id,emailAddress:a.blockedEmails.emailAddress,reason:a.blockedEmails.reason,blockedBy:a.blockedEmails.blockedBy,createdAt:a.blockedEmails.createdAt}).from(a.blockedEmails).where((0,i.eq)(a.blockedEmails.domainId,e));return{success:!0,blockedEmails:t}}catch(e){return console.error("Error getting blocked emails for domain:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred"}}}async function m(e){try{let t=await o.db.select({id:a.blockedEmails.id,emailAddress:a.blockedEmails.emailAddress,domain:a.emailDomains.domain,reason:a.blockedEmails.reason,blockedBy:a.blockedEmails.blockedBy,createdAt:a.blockedEmails.createdAt}).from(a.blockedEmails).innerJoin(a.emailDomains,(0,i.eq)(a.blockedEmails.domainId,a.emailDomains.id)).where((0,i.eq)(a.emailDomains.userId,e));return{success:!0,blockedEmails:t}}catch(e){return console.error("Error getting blocked emails for user:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred"}}}},370796:e=>{"use strict";var{g:t,__dirname:r}=e;e.s({EmailBanner:()=>a,generateEmailBannerHTML:()=>i});var o=e.i(692339);function a({recipientEmail:e,senderEmail:t,className:r=""}){let a=`https://inbound.new/addtoblocklist?email=${encodeURIComponent(e)}`;return(0,o.jsxs)("div",{className:`text-center my-5 px-2.5 py-2 text-xs text-gray-500 border-t border-gray-200 ${r}`,children:["sent via"," ",(0,o.jsx)("a",{href:"https://inbound.new",className:"text-purple-500 hover:text-purple-600 no-underline",children:"inbound.new"}),","," ",(0,o.jsxs)("a",{href:a,target:"_blank",rel:"noopener noreferrer",className:"text-purple-500 hover:text-purple-600 no-underline",children:["block ",e]})]})}function i(e,t){let r=`https://inbound.new/addtoblocklist?email=${encodeURIComponent(e)}`;return`
    <div style="
      text-align: center;
      margin: 20px 0;
      padding: 10px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
      font-size: 12px;
      color: #6b7280;
      border-top: 1px solid #e5e7eb;
    ">
      sent via <a href="https://inbound.new" style="color: #8b5cf6; text-decoration: none;">inbound.new</a>, <a href="${r}" target="_blank" rel="noopener noreferrer" style="color: #8b5cf6; text-decoration: none;">block ${e}</a>
    </div>
  `}},1680:e=>{"use strict";var{g:t,__dirname:r}=e;{e.s({EmailForwarder:()=>t});var o=e.i(877465),a=e.i(48597),i=e.i(370796);class t{sesClient;constructor(){this.sesClient=new o.SESClient({region:process.env.AWS_REGION||"us-east-2"})}async forwardEmail(e,t,r,o){console.log(`üì® EmailForwarder - Forwarding email from ${t} to ${r.length} recipients`);let i=o?.subjectPrefix?`${o.subjectPrefix}${e.subject||"No Subject"}`:e.subject||"No Subject",s=await this.buildRawEmailMessage({from:t,to:r,replyTo:e.from?.addresses?.[0]?.address||t,subject:i,originalEmail:e,includeAttachments:o?.includeAttachments??!0,recipientEmail:o?.recipientEmail});console.log(`üì§ EmailForwarder - Sending email message (${s.length} bytes) with ${e.htmlBody?"HTML":"text"} content and ${e.attachments?.length||0} attachments`);let n=new a.SendRawEmailCommand({RawMessage:{Data:Buffer.from(s)},Source:t,Destinations:r});try{let t=await this.sesClient.send(n);console.log(`‚úÖ EmailForwarder - Successfully forwarded email to ${r.length} recipients`,{messageId:t.MessageId,toAddresses:r,attachmentCount:e.attachments?.length||0})}catch(e){throw console.error(`‚ùå EmailForwarder - Failed to forward email:`,e),Error(`Email forwarding failed: ${e instanceof Error?e.message:"Unknown error"}`)}}async buildRawEmailMessage(e){let t=`----=_NextPart_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,r=[`From: ${e.from}`,`To: ${e.to.join(", ")}`,`Reply-To: ${e.replyTo}`,`Subject: ${this.encodeSubject(e.subject)}`,`Date: ${new Date().toUTCString()}`,"MIME-Version: 1.0"];e.originalEmail.messageId&&r.push(`In-Reply-To: ${e.originalEmail.messageId}`),e.originalEmail.references?.length&&r.push(`References: ${e.originalEmail.references.join(" ")}`);let o=e.includeAttachments&&e.originalEmail.attachments&&e.originalEmail.attachments.length>0,a=!!e.originalEmail.htmlBody,i=!!e.originalEmail.textBody;if(!(o||a&&i))if(a)return r.push("Content-Type: text/html; charset=UTF-8"),r.push("Content-Transfer-Encoding: 8bit"),[...r,"",this.addBannerToHtml(e.originalEmail.htmlBody||"",e)].join("\r\n");else if(i)return r.push("Content-Type: text/plain; charset=UTF-8"),r.push("Content-Transfer-Encoding: 8bit"),[...r,"",this.addBannerToText(e.originalEmail.textBody||"",e)].join("\r\n");else return r.push("Content-Type: text/plain; charset=UTF-8"),r.push("Content-Transfer-Encoding: 8bit"),[...r,"","[This email has no content]"].join("\r\n");r.push(`Content-Type: multipart/mixed; boundary="${t}"`);let s=[...r,"","This is a multi-part message in MIME format.",""];if(a&&i){let r=`----=_NextPart_Alt_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;s.push(`--${t}`,`Content-Type: multipart/alternative; boundary="${r}"`,"",`--${r}`,"Content-Type: text/plain; charset=UTF-8","Content-Transfer-Encoding: 8bit","",this.addBannerToText(e.originalEmail.textBody||"",e),"",`--${r}`,"Content-Type: text/html; charset=UTF-8","Content-Transfer-Encoding: 8bit","",this.addBannerToHtml(e.originalEmail.htmlBody||"",e),"",`--${r}--`,"")}else a?s.push(`--${t}`,"Content-Type: text/html; charset=UTF-8","Content-Transfer-Encoding: 8bit","",this.addBannerToHtml(e.originalEmail.htmlBody||"",e),""):i?s.push(`--${t}`,"Content-Type: text/plain; charset=UTF-8","Content-Transfer-Encoding: 8bit","",this.addBannerToText(e.originalEmail.textBody||"",e),""):s.push(`--${t}`,"Content-Type: text/plain; charset=UTF-8","Content-Transfer-Encoding: 8bit","","[This email has no content]","");if(o)for(let r of(console.log(`üìé EmailForwarder - Including ${e.originalEmail.attachments.length} attachments in forwarded email`),e.originalEmail.attachments)){if(!r.filename){console.warn(`‚ö†Ô∏è EmailForwarder - Skipping attachment without filename`);continue}let o=await this.getAttachmentContent(e.originalEmail,r.filename);if(!o){console.warn(`‚ö†Ô∏è EmailForwarder - Could not retrieve content for attachment: ${r.filename}`);continue}s.push(`--${t}`,`Content-Type: ${r.contentType||"application/octet-stream"}`,"Content-Transfer-Encoding: base64",`Content-Disposition: attachment; filename="${this.encodeFilename(r.filename)}"`,"");let a=Buffer.from(o).toString("base64").match(/.{1,76}/g)||[];s.push(...a,"")}return s.push(`--${t}--`),s.join("\r\n")}async getAttachmentContent(t,r){try{if(t.raw){let{simpleParser:o}=await e.r(710168)(e.i),a=await o(t.raw),i=a.attachments?.find(e=>e.filename===r);if(i&&i.content)return i.content}return console.warn(`‚ö†Ô∏è EmailForwarder - No raw email content available to extract attachment: ${r}`),null}catch(e){return console.error(`‚ùå EmailForwarder - Error extracting attachment ${r}:`,e),null}}encodeSubject(e){return e.replace(/[\r\n]/g," ").trim()}encodeFilename(e){return e.replace(/"/g,'\\"')}htmlToText(e){return e.replace(/<br\s*\/?>/gi,"\n").replace(/<\/p>/gi,"\n\n").replace(/<[^>]*>/g,"").replace(/&nbsp;/g," ").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").trim()}addBannerToHtml(e,t){if(!t.recipientEmail||!t.originalEmail.from?.addresses?.[0]?.address)return e;let r=t.originalEmail.from.addresses[0].address,o=t.recipientEmail,a=(0,i.generateEmailBannerHTML)(o,r);return e.includes("</body>")?e.replace("</body>",`${a}</body>`):e.includes("</html>")?e.replace("</html>",`${a}</html>`):`${e}${a}`}addBannerToText(e,t){if(!t.recipientEmail||!t.originalEmail.from?.addresses?.[0]?.address)return e;let r=t.recipientEmail,o=`

---
sent via inbound.new, block ${r}: https://inbound.new/addtoblocklist?email=${encodeURIComponent(r)}
`;return`${e}${o}`}}}},177827:e=>{"use strict";var{g:t,__dirname:r}=e;e.s({routeEmail:()=>c});var o=e.i(557440);e.i(468686);var a=e.i(55379),i=e.i(176825),s=e.i(774954),n=e.i(1680),l=e.i(318812),d=e.i(374460);async function c(e){console.log(`üéØ routeEmail - Processing email ID: ${e}`);try{let t=await m(e);if(!t)throw Error("Email not found or missing structured data");if(!t.recipient)throw Error("Email recipient not found");let r=await u(t.recipient,t.userId);if(!r){console.warn(`‚ö†Ô∏è routeEmail - No endpoint configured for ${t.recipient}, falling back to legacy webhook lookup`);let r=await (0,s.triggerEmailAction)(e);r.success||(console.warn(`‚ö†Ô∏è routeEmail - No webhook configured for ${t.recipient}: ${r.error||"Legacy webhook processing failed"}`),console.log(`üìß routeEmail - Email ${e} processed but not routed (no webhook/endpoint configured)`));return}switch(console.log(`üìç routeEmail - Found endpoint: ${r.name} (type: ${r.type}) for ${t.recipient}`),r.type){case"webhook":await p(e,r);break;case"email":case"email_group":await h(e,r,t);break;default:throw Error(`Unknown endpoint type: ${r.type}`)}console.log(`‚úÖ routeEmail - Successfully routed email ${e} via ${r.type} endpoint`)}catch(t){throw console.error(`‚ùå routeEmail - Error processing email ${e}:`,t),t}}async function m(t){if(!(await o.db.select({recipient:a.structuredEmails.emailId,userId:a.structuredEmails.userId}).from(a.structuredEmails).where((0,i.eq)(a.structuredEmails.emailId,t)).limit(1))[0])return null;let{receivedEmails:r}=await e.r(491517)(e.i),s=await o.db.select({recipient:r.recipient}).from(r).where((0,i.eq)(r.id,t)).limit(1),n=s[0]?.recipient,l=(await o.db.select({emailId:a.structuredEmails.emailId,userId:a.structuredEmails.userId,structuredId:a.structuredEmails.id,messageId:a.structuredEmails.messageId,date:a.structuredEmails.date,subject:a.structuredEmails.subject,fromData:a.structuredEmails.fromData,toData:a.structuredEmails.toData,ccData:a.structuredEmails.ccData,bccData:a.structuredEmails.bccData,replyToData:a.structuredEmails.replyToData,inReplyTo:a.structuredEmails.inReplyTo,references:a.structuredEmails.references,textBody:a.structuredEmails.textBody,htmlBody:a.structuredEmails.htmlBody,rawContent:a.structuredEmails.rawContent,attachments:a.structuredEmails.attachments,headers:a.structuredEmails.headers,priority:a.structuredEmails.priority,parseSuccess:a.structuredEmails.parseSuccess,parseError:a.structuredEmails.parseError}).from(a.structuredEmails).where((0,i.eq)(a.structuredEmails.emailId,t)).limit(1))[0];return l?{...l,recipient:n||null}:null}async function u(e,t){try{console.log(`üîç findEndpointForEmail - Looking for endpoint for ${e} (userId: ${t})`);let r=await o.db.select({endpointId:a.emailAddresses.endpointId,webhookId:a.emailAddresses.webhookId,address:a.emailAddresses.address,isActive:a.emailAddresses.isActive,domainId:a.emailAddresses.domainId}).from(a.emailAddresses).where((0,i.and)((0,i.eq)(a.emailAddresses.address,e),(0,i.eq)(a.emailAddresses.isActive,!0),(0,i.eq)(a.emailAddresses.userId,t))).limit(1);if(r[0]){let{endpointId:s,webhookId:n}=r[0];if(s){let r=await o.db.select().from(a.endpoints).where((0,i.and)((0,i.eq)(a.endpoints.id,s),(0,i.eq)(a.endpoints.isActive,!0),(0,i.eq)(a.endpoints.userId,t))).limit(1);if(r[0])return console.log(`üìç findEndpointForEmail - Found email-specific endpoint: ${r[0].name} for ${e}`),r[0]}if(n)return console.log(`üîÑ findEndpointForEmail - Using legacy webhook ${n} for ${e}`),null}let s=e.split("@")[1];if(!s)return console.warn(`‚ö†Ô∏è findEndpointForEmail - Invalid email format: ${e}`),null;console.log(`üåê findEndpointForEmail - Checking catch-all configuration for domain: ${s}`);let n=await o.db.select({isCatchAllEnabled:a.emailDomains.isCatchAllEnabled,catchAllEndpointId:a.emailDomains.catchAllEndpointId,catchAllWebhookId:a.emailDomains.catchAllWebhookId,domain:a.emailDomains.domain}).from(a.emailDomains).where((0,i.and)((0,i.eq)(a.emailDomains.domain,s),(0,i.eq)(a.emailDomains.isCatchAllEnabled,!0),(0,i.eq)(a.emailDomains.userId,t))).limit(1);if(n[0]){let{catchAllEndpointId:r,catchAllWebhookId:l}=n[0];if(console.log(`üåê findEndpointForEmail - Found catch-all domain: ${s}, endpointId: ${r}, webhookId: ${l}`),r){let s=await o.db.select().from(a.endpoints).where((0,i.and)((0,i.eq)(a.endpoints.id,r),(0,i.eq)(a.endpoints.isActive,!0),(0,i.eq)(a.endpoints.userId,t))).limit(1);if(s[0])return console.log(`üåê findEndpointForEmail - Found catch-all endpoint: ${s[0].name} for ${e}`),s[0];console.warn(`‚ö†Ô∏è findEndpointForEmail - Catch-all endpoint ${r} not found or inactive`)}if(l)return console.log(`üîÑ findEndpointForEmail - Using catch-all legacy webhook ${l} for ${e}`),null}else console.warn(`‚ö†Ô∏è findEndpointForEmail - No catch-all domain configuration found for ${s} (userId: ${t})`);return console.warn(`‚ö†Ô∏è findEndpointForEmail - No endpoint, webhook, or catch-all configuration found for ${e}`),null}catch(t){return console.error(`‚ùå findEndpointForEmail - Error finding endpoint for ${e}:`,t),null}}async function p(e,t){try{console.log(`üì° handleWebhookEndpoint - Processing webhook endpoint: ${t.name}`);let r=await m(e);if(!r)throw Error("Email not found or missing structured data");let o=JSON.parse(t.config),a=o.url,i=o.timeout||30;o.retryAttempts;let s=o.headers||{};if(!a)throw Error("Webhook URL not configured");console.log(`üì§ handleWebhookEndpoint - Sending email ${r.messageId} to webhook: ${t.name} (${a})`);let n=f(r),l={event:"email.received",timestamp:new Date().toISOString(),email:{id:r.structuredId,messageId:r.messageId,from:r.fromData?JSON.parse(r.fromData):null,to:r.toData?JSON.parse(r.toData):null,recipient:r.recipient,subject:r.subject,receivedAt:r.date,parsedData:n,cleanedContent:{html:n.htmlBody?(0,d.sanitizeHtml)(n.htmlBody):null,text:n.textBody||null,hasHtml:!!n.htmlBody,hasText:!!n.textBody,attachments:n.attachments||[],headers:n.headers||{}}},endpoint:{id:t.id,name:t.name,type:t.type}},c=JSON.stringify(l),u={"Content-Type":"application/json","User-Agent":"InboundEmail-Webhook/1.0","X-Webhook-Event":"email.received","X-Endpoint-ID":t.id,"X-Webhook-Timestamp":l.timestamp,"X-Email-ID":r.structuredId,"X-Message-ID":r.messageId||"",...s},p=Date.now(),h=!1,b=0,E="",y="",w=0;try{let e=await fetch(a,{method:"POST",headers:u,body:c,signal:AbortSignal.timeout(1e3*i)});w=Date.now()-p,b=e.status,E=await e.text().catch(()=>"Unable to read response body"),h=e.ok,console.log(`${h?"‚úÖ":"‚ùå"} handleWebhookEndpoint - Delivery ${h?"succeeded":"failed"} for ${r.recipient}: ${b} in ${w}ms`)}catch(e){w=Date.now()-p,h=!1,y=e instanceof Error?"AbortError"===e.name?`Request timeout after ${i}s`:e.message:"Unknown error",console.error(`‚ùå handleWebhookEndpoint - Delivery failed for ${r.recipient}:`,y)}if(await g(e,t.id,"webhook",h?"success":"failed",{responseCode:b,responseBody:E?E.substring(0,2e3):null,deliveryTime:w,error:y||null,url:a,deliveredAt:new Date().toISOString()}),!h)throw Error(y||"Webhook delivery failed");console.log(`‚úÖ handleWebhookEndpoint - Successfully delivered email ${e} to webhook ${t.name}`)}catch(e){throw console.error(`‚ùå handleWebhookEndpoint - Error processing webhook endpoint:`,e),e}}async function h(e,t,r){try{console.log(`üì® handleEmailForwardEndpoint - Processing ${t.type} endpoint: ${t.name}`);let o=JSON.parse(t.config),a=new n.EmailForwarder,i=f(r),s="email_group"===t.type?o.emails:[o.forwardTo],l=o.fromAddress||r.recipient;console.log(`üì§ handleEmailForwardEndpoint - Forwarding to ${s.length} recipients from ${l}`),await a.forwardEmail(i,l,s,{subjectPrefix:o.subjectPrefix,includeAttachments:o.includeAttachments,recipientEmail:r.recipient}),await g(e,t.id,"email_forward","success",{toAddresses:s,fromAddress:l,forwardedAt:new Date().toISOString()}),console.log(`‚úÖ handleEmailForwardEndpoint - Successfully forwarded email to ${s.length} recipients`)}catch(r){throw console.error(`‚ùå handleEmailForwardEndpoint - Error forwarding email:`,r),await g(e,t.id,"email_forward","failed",{error:r instanceof Error?r.message:"Unknown error",failedAt:new Date().toISOString()}),r}}function f(e){return{messageId:e.messageId||void 0,date:e.date||void 0,subject:e.subject||void 0,from:e.fromData?JSON.parse(e.fromData):null,to:e.toData?JSON.parse(e.toData):null,cc:e.ccData?JSON.parse(e.ccData):null,bcc:e.bccData?JSON.parse(e.bccData):null,replyTo:e.replyToData?JSON.parse(e.replyToData):null,inReplyTo:e.inReplyTo||void 0,references:e.references?JSON.parse(e.references):void 0,textBody:e.textBody||void 0,htmlBody:e.htmlBody||void 0,raw:e.rawContent||void 0,attachments:e.attachments?JSON.parse(e.attachments):[],headers:e.headers?JSON.parse(e.headers):{},priority:"false"!==e.priority&&(e.priority||void 0)}}async function g(e,t,r,i,s){try{let n={id:(0,l.nanoid)(),emailId:e,endpointId:t,deliveryType:r,status:i,attempts:1,lastAttemptAt:new Date,responseData:s?JSON.stringify(s):null,createdAt:new Date,updatedAt:new Date};await o.db.insert(a.endpointDeliveries).values(n),console.log(`üìä trackEndpointDelivery - Tracked ${r} delivery: ${i}`)}catch(e){console.error("‚ùå trackEndpointDelivery - Error tracking delivery:",e)}}},774954:e=>{"use strict";var{g:t,__dirname:r}=e;e.s({POST:()=>E,triggerEmailAction:()=>b});var o=e.i(125427),a=e.i(557440);e.i(468686);var i=e.i(55379),s=e.i(318812),n=e.i(176825),l=e.i(459351),d=e.i(329295),c=e.i(374460),m=e.i(280269),u=e.i(177827);async function p(e){try{if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e))return console.warn(`‚ö†Ô∏è Webhook - Invalid email format: ${e}`),"system";let t=e.split("@")[1]?.toLowerCase()||"";if(!t)return console.warn(`‚ö†Ô∏è Webhook - Could not extract domain from recipient: ${e}`),"system";console.log(`üîç Webhook - Looking up domain owner for: ${t}`);let r=await a.db.select({userId:i.emailDomains.userId,status:i.emailDomains.status,canReceiveEmails:i.emailDomains.canReceiveEmails}).from(i.emailDomains).where((0,n.eq)(i.emailDomains.domain,t)).limit(1);if(!r[0]?.userId)return console.warn(`‚ö†Ô∏è Webhook - No domain owner found for ${t} (recipient: ${e}), using system`),"system";{let{userId:e,status:o,canReceiveEmails:a}=r[0];return console.log(`‚úÖ Webhook - Found domain ${t}: status=${o}, canReceiveEmails=${a}, userId=${e}`),a||console.warn(`‚ö†Ô∏è Webhook - Domain ${t} is not configured to receive emails, but processing anyway`),e}}catch(t){return console.error(`‚ùå Webhook - Error mapping recipient ${e} to user:`,t),"system"}}async function h(e,t){if("system"===e)return console.log(`üìß Webhook - Skipping inbound trigger check for system email: ${t}`),{allowed:!0};try{let{data:r,error:o}=await l.Autumn.check({customer_id:e,feature_id:"inbound_triggers"});if(o)return console.error(`‚ùå Webhook - Autumn inbound trigger check error for user ${e}:`,o),{allowed:!1,error:`Failed to check inbound trigger limits: ${o}`};if(!r?.allowed)return console.warn(`‚ö†Ô∏è Webhook - User ${e} not allowed to use inbound triggers for email: ${t}`),{allowed:!1,error:"Inbound trigger limit reached. Please upgrade your plan to process more emails."};if(r.unlimited)console.log(`‚ôæÔ∏è Webhook - User ${e} has unlimited inbound triggers, no tracking needed for: ${t}`);else{let{error:r}=await l.Autumn.track({customer_id:e,feature_id:"inbound_triggers",value:1});if(r)return console.error(`‚ùå Webhook - Failed to track inbound trigger usage for user ${e}:`,r),{allowed:!1,error:`Failed to track inbound trigger usage: ${r}`};console.log(`üìä Webhook - Tracked inbound trigger usage for user ${e}, email: ${t}`)}return{allowed:!0}}catch(t){return console.error(`‚ùå Webhook - Error checking/tracking inbound trigger for user ${e}:`,t),{allowed:!1,error:`Inbound trigger check failed: ${t instanceof Error?t.message:"Unknown error"}`}}}async function f(e,t){try{console.log(`üìù Webhook - Creating parsed email record for ${e}`);let r=(e=>{if(!e||!e.addresses||0===e.addresses.length)return{address:null,name:null};let t=e.addresses[0];return{address:t.address||null,name:t.name||null}})(t.from),o=t.attachments?.length||0,n={id:(0,s.nanoid)(),emailId:e,messageId:t.messageId||null,fromText:t.from?.text||null,fromAddress:r.address,fromName:r.name,toText:t.to?.text||null,toAddresses:t.to?.addresses?JSON.stringify(t.to.addresses):null,ccText:t.cc?.text||null,ccAddresses:t.cc?.addresses?JSON.stringify(t.cc.addresses):null,bccText:t.bcc?.text||null,bccAddresses:t.bcc?.addresses?JSON.stringify(t.bcc.addresses):null,replyToText:t.replyTo?.text||null,replyToAddresses:t.replyTo?.addresses?JSON.stringify(t.replyTo.addresses):null,subject:t.subject||null,textBody:t.textBody||null,htmlBody:t.htmlBody||null,inReplyTo:t.inReplyTo||null,references:t.references?JSON.stringify(t.references):null,priority:"string"==typeof t.priority?t.priority:null,emailDate:t.date||null,attachments:t.attachments?JSON.stringify(t.attachments):null,attachmentCount:o,hasAttachments:o>0,headers:t.headers?JSON.stringify(t.headers):null,hasTextBody:!!t.textBody,hasHtmlBody:!!t.htmlBody,parseSuccess:!0,parseError:null,createdAt:new Date,updatedAt:new Date};await a.db.insert(i.parsedEmails).values(n),console.log(`‚úÖ Webhook - Created parsed email record ${n.id} for email ${e}`)}catch(t){console.error(`‚ùå Webhook - Error creating parsed email record for ${e}:`,t);try{let r={id:(0,s.nanoid)(),emailId:e,parseSuccess:!1,parseError:t instanceof Error?t.message:"Unknown parsing error",createdAt:new Date,updatedAt:new Date};await a.db.insert(i.parsedEmails).values(r),console.log(`‚ö†Ô∏è Webhook - Created failed parse record for email ${e}`)}catch(t){console.error(`‚ùå Webhook - Failed to create failed parse record for ${e}:`,t)}}}async function g(e,t,r,o){try{console.log(`üìù Webhook - Creating structured email record for ${e}`);let n={id:(0,s.nanoid)(),emailId:e,sesEventId:t,messageId:r.messageId||null,date:r.date||null,subject:r.subject||null,fromData:r.from?JSON.stringify(r.from):null,toData:r.to?JSON.stringify(r.to):null,ccData:r.cc?JSON.stringify(r.cc):null,bccData:r.bcc?JSON.stringify(r.bcc):null,replyToData:r.replyTo?JSON.stringify(r.replyTo):null,inReplyTo:r.inReplyTo||null,references:r.references?JSON.stringify(r.references):null,textBody:r.textBody||null,htmlBody:r.htmlBody||null,rawContent:r.raw||null,attachments:r.attachments?JSON.stringify(r.attachments):null,headers:r.headers?JSON.stringify(r.headers):null,priority:"string"==typeof r.priority?r.priority:!1===r.priority?"false":null,parseSuccess:!0,parseError:null,userId:o,createdAt:new Date,updatedAt:new Date};await a.db.insert(i.structuredEmails).values(n),console.log(`‚úÖ Webhook - Created structured email record ${n.id} for email ${e}`)}catch(r){console.error(`‚ùå Webhook - Error creating structured email record for ${e}:`,r);try{let n={id:(0,s.nanoid)(),emailId:e,sesEventId:t,parseSuccess:!1,parseError:r instanceof Error?r.message:"Unknown parsing error",userId:o,createdAt:new Date,updatedAt:new Date};await a.db.insert(i.structuredEmails).values(n),console.log(`‚ö†Ô∏è Webhook - Created failed structured parse record for email ${e}`)}catch(t){console.error(`‚ùå Webhook - Failed to create failed structured parse record for ${e}:`,t)}}}async function b(e){try{console.log(`üéØ triggerEmailAction - Processing email ID: ${e}`);let t=await a.db.select({emailId:i.receivedEmails.id,messageId:i.receivedEmails.messageId,from:i.receivedEmails.from,to:i.receivedEmails.to,recipient:i.receivedEmails.recipient,subject:i.receivedEmails.subject,receivedAt:i.receivedEmails.receivedAt,userId:i.receivedEmails.userId,structuredId:i.structuredEmails.id,structuredMessageId:i.structuredEmails.messageId,structuredDate:i.structuredEmails.date,structuredSubject:i.structuredEmails.subject,fromData:i.structuredEmails.fromData,toData:i.structuredEmails.toData,ccData:i.structuredEmails.ccData,bccData:i.structuredEmails.bccData,replyToData:i.structuredEmails.replyToData,inReplyTo:i.structuredEmails.inReplyTo,references:i.structuredEmails.references,textBody:i.structuredEmails.textBody,htmlBody:i.structuredEmails.htmlBody,rawContent:i.structuredEmails.rawContent,attachments:i.structuredEmails.attachments,headers:i.structuredEmails.headers,priority:i.structuredEmails.priority,parseSuccess:i.structuredEmails.parseSuccess,parseError:i.structuredEmails.parseError}).from(i.receivedEmails).leftJoin(i.structuredEmails,(0,n.eq)(i.receivedEmails.id,i.structuredEmails.emailId)).where((0,n.eq)(i.receivedEmails.id,e)).limit(1);if(!t[0])return{success:!1,error:"Email not found"};let r=t[0];if(!r.structuredId||!r.parseSuccess)return{success:!1,error:`No structured email data found or parsing failed: ${r.parseError||"Unknown error"}`};let o=await a.db.select({webhookId:i.emailAddresses.webhookId,address:i.emailAddresses.address,isActive:i.emailAddresses.isActive}).from(i.emailAddresses).where((0,n.and)((0,n.eq)(i.emailAddresses.address,r.recipient),(0,n.eq)(i.emailAddresses.isActive,!0))).limit(1);if(!o[0]?.webhookId)return{success:!1,error:`No webhook configured for ${r.recipient}`};let l=o[0].webhookId,m=await a.db.select().from(i.webhooks).where((0,n.and)((0,n.eq)(i.webhooks.id,l),(0,n.eq)(i.webhooks.isActive,!0))).limit(1);if(!m[0])return{success:!1,error:`Webhook ${l} not found or disabled for ${r.recipient}`};let u=m[0];console.log(`üì§ triggerEmailAction - Sending email ${r.messageId} to webhook: ${u.name} (${u.url})`);let p={messageId:r.structuredMessageId||void 0,date:r.structuredDate||void 0,subject:r.structuredSubject||void 0,from:r.fromData?JSON.parse(r.fromData):null,to:r.toData?JSON.parse(r.toData):null,cc:r.ccData?JSON.parse(r.ccData):null,bcc:r.bccData?JSON.parse(r.bccData):null,replyTo:r.replyToData?JSON.parse(r.replyToData):null,inReplyTo:r.inReplyTo||void 0,references:r.references?JSON.parse(r.references):void 0,textBody:r.textBody||void 0,htmlBody:r.htmlBody||void 0,raw:r.rawContent||void 0,attachments:r.attachments?JSON.parse(r.attachments):[],headers:r.headers?JSON.parse(r.headers):{},priority:"false"!==r.priority&&(r.priority||void 0)},h={event:"email.received",timestamp:new Date().toISOString(),email:{id:r.structuredId,messageId:r.messageId,from:r.from,to:JSON.parse(r.to),recipient:r.recipient,subject:r.subject,receivedAt:r.receivedAt,parsedData:p,cleanedContent:{html:p.htmlBody?(0,c.sanitizeHtml)(p.htmlBody):null,text:p.textBody||null,hasHtml:!!p.htmlBody,hasText:!!p.textBody,attachments:p.attachments||[],headers:p.headers||{}}},webhook:{id:u.id,name:u.name}},f=JSON.stringify(h),g=null;if(u.secret){let e=(0,d.createHmac)("sha256",u.secret);e.update(f),g=`sha256=${e.digest("hex")}`}let b={"Content-Type":"application/json","User-Agent":"InboundEmail-Webhook/1.0","X-Webhook-Event":"email.received","X-Webhook-ID":u.id,"X-Webhook-Timestamp":h.timestamp,"X-Email-ID":r.structuredId,"X-Message-ID":r.messageId};if(g&&(b["X-Webhook-Signature"]=g),u.headers)try{let e=JSON.parse(u.headers);Object.assign(b,e)}catch(e){console.error("Error parsing custom headers:",e)}let E=(0,s.nanoid)(),y=Date.now(),w=!1,k=0,$="",v="",D=0;try{let e=await fetch(u.url,{method:"POST",headers:b,body:f,signal:AbortSignal.timeout(1e3*(u.timeout||30))});D=Date.now()-y,k=e.status,$=await e.text().catch(()=>"Unable to read response body"),w=e.ok,console.log(`${w?"‚úÖ":"‚ùå"} triggerEmailAction - Delivery ${w?"succeeded":"failed"} for ${r.recipient}: ${k} in ${D}ms`)}catch(e){D=Date.now()-y,w=!1,v=e instanceof Error?"AbortError"===e.name?`Request timeout after ${u.timeout}s`:e.message:"Unknown error",console.error(`‚ùå triggerEmailAction - Delivery failed for ${r.recipient}:`,v)}let I={id:E,emailId:r.emailId,webhookId:u.id,endpoint:u.url,payload:f,status:w?"success":"failed",attempts:1,lastAttemptAt:new Date,responseCode:k||null,responseBody:$?$.substring(0,2e3):null,deliveryTime:D,error:v||null,createdAt:new Date,updatedAt:new Date};return await a.db.insert(i.webhookDeliveries).values(I),await a.db.update(i.webhooks).set({lastUsed:new Date,totalDeliveries:(u.totalDeliveries||0)+1,successfulDeliveries:w?(u.successfulDeliveries||0)+1:u.successfulDeliveries||0,failedDeliveries:w?u.failedDeliveries||0:(u.failedDeliveries||0)+1,updatedAt:new Date}).where((0,n.eq)(i.webhooks.id,u.id)),console.log(`üìä triggerEmailAction - Updated webhook stats for ${u.name}`),{success:w,error:w?void 0:v,deliveryId:E}}catch(t){return console.error(`‚ùå triggerEmailAction - Error processing email ${e}:`,t),{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}async function E(e){try{console.log("==============================================="),console.log("üìß Webhook - Received email event from Lambda"),console.log("===============================================");let t=e.headers.get("authorization"),r=process.env.SERVICE_API_KEY;if(!t||!r)return console.error("‚ùå Webhook - Missing authentication"),o.NextResponse.json({error:"Missing authentication"},{status:401});if(t.replace("Bearer ","")!==r)return console.error("‚ùå Webhook - Invalid authentication"),o.NextResponse.json({error:"Invalid authentication"},{status:401});let n=await e.json();if(console.log("üîç Webhook - Payload type:",n.type),"ses_event_with_content"!==n.type||!n.processedRecords)return console.error("‚ùå Webhook - Invalid payload structure"),o.NextResponse.json({error:"Invalid payload structure"},{status:400});let l=[],d=[];for(let e of n.processedRecords)try{let t=e.ses;console.log("==============================================="),console.log("Record Full Data:",JSON.stringify(e,null,2)),console.log("===============================================");let r=t.mail,o=t.receipt;console.log(`üì® Webhook - Processing email: ${r.messageId}`),console.log(`üë• Webhook - Recipients: ${o.recipients.join(", ")}`);let b=(0,s.nanoid)(),E={id:b,eventSource:e.eventSource,eventVersion:e.eventVersion,messageId:r.messageId,source:r.source,destination:JSON.stringify(r.destination),subject:r.commonHeaders.subject||null,timestamp:new Date(r.timestamp),receiptTimestamp:new Date(o.timestamp),processingTimeMillis:o.processingTimeMillis,recipients:JSON.stringify(o.recipients),spamVerdict:o.spamVerdict.status,virusVerdict:o.virusVerdict.status,spfVerdict:o.spfVerdict.status,dkimVerdict:o.dkimVerdict.status,dmarcVerdict:o.dmarcVerdict.status,actionType:o.action.type,s3BucketName:o.action.bucketName,s3ObjectKey:o.action.objectKey,emailContent:e.emailContent||null,s3ContentFetched:e.s3Location?.contentFetched||!1,s3ContentSize:e.s3Location?.contentSize||null,s3Error:e.s3Error||null,commonHeaders:JSON.stringify(r.commonHeaders),rawSesEvent:JSON.stringify(e.ses),lambdaContext:JSON.stringify(n.context),webhookPayload:JSON.stringify(n),updatedAt:new Date};for(let t of(await a.db.insert(i.sesEvents).values(E),console.log(`‚úÖ Webhook - Stored SES event ${b} for message ${r.messageId}`),o.recipients)){let E=await p(t),y=await h(E,t);if(!y.allowed){console.warn(`‚ö†Ô∏è Webhook - Rejected email for ${t} due to inbound trigger limits: ${y.error}`),d.push({messageId:r.messageId,recipient:t,userId:E,reason:y.error||"Inbound trigger limit reached",subject:r.commonHeaders.subject});continue}let w=await (0,m.isEmailBlocked)(r.source),k="received";w&&(console.warn(`üö´ Webhook - Email from blocked sender ${r.source} to ${t}`),k="blocked");let $=null;if(console.log("Email content:",e.emailContent),e.emailContent){console.log(`üìßüìßüìß Webhook - Parsing email content for ${r.messageId}`);try{$=await (0,c.parseEmail)(e.emailContent),console.log(`‚úÖ Webhook - Successfully parsed email content for ${r.messageId}`)}catch(e){console.error(`‚ùå Webhook - Failed to parse email content for ${r.messageId}:`,e)}}let v={id:(0,s.nanoid)(),sesEventId:b,messageId:r.messageId,from:r.source,to:JSON.stringify(r.destination),recipient:t,subject:r.commonHeaders.subject||"No Subject",fromParsed:$?.from?JSON.stringify($.from):null,toParsed:$?.to?JSON.stringify($.to):null,ccParsed:$?.cc?JSON.stringify($.cc):null,bccParsed:$?.bcc?JSON.stringify($.bcc):null,replyToParsed:$?.replyTo?JSON.stringify($.replyTo):null,textBody:$?.textBody||null,htmlBody:$?.htmlBody||null,rawEmailContent:e.emailContent||null,inReplyTo:$?.inReplyTo||null,references:$?.references?JSON.stringify($.references):null,priority:"string"==typeof $?.priority?$.priority:null,attachments:$?.attachments?JSON.stringify($.attachments):null,headers:$?.headers?JSON.stringify($.headers):null,emailDate:$?.date||null,receivedAt:new Date(r.timestamp),processedAt:new Date,status:k,isRead:!1,readAt:null,metadata:JSON.stringify({recipient:t,authResults:{spf:o.spfVerdict.status,dkim:o.dkimVerdict.status,dmarc:o.dmarcVerdict.status,spam:o.spamVerdict.status,virus:o.virusVerdict.status},s3Location:e.s3Location||{bucket:o.action.bucketName,key:o.action.objectKey},headers:r.commonHeaders,lambdaContext:n.context,processingTimeMillis:o.processingTimeMillis,emailContent:e.emailContent?{hasContent:!0,contentSize:e.emailContent.length,contentPreview:e.emailContent.substring(0,500)+(e.emailContent.length>500?"...":"")}:{hasContent:!1,s3Error:e.s3Error},inboundTriggerTracked:!0,parsedSuccessfully:!!$,senderBlocked:w,blockedReason:w?"Sender email address is on the blocklist":null}),userId:E,updatedAt:new Date};await a.db.insert(i.receivedEmails).values(v);let D={emailId:v.id,sesEventId:b,messageId:r.messageId,recipient:t,subject:r.commonHeaders.subject,webhookDelivery:null};if(console.log(`‚úÖ Webhook - Stored email ${r.messageId} for ${t}`),$&&(await f(v.id,$),await g(v.id,b,$,E)),"blocked"===k)console.log(`üö´ Webhook - Skipping routing for blocked email ${v.id} from ${r.source}`),D.webhookDelivery={success:!1,error:"Email blocked - sender is on the blocklist"};else try{await (0,u.routeEmail)(v.id),console.log(`‚úÖ Webhook - Successfully routed email ${v.id}`),D.webhookDelivery={success:!0,deliveryId:void 0}}catch(e){console.error(`‚ùå Webhook - Failed to route email ${v.id}:`,e),D.webhookDelivery={success:!1,error:e instanceof Error?e.message:"Unknown routing error"}}l.push(D)}}catch(e){console.error("‚ùå Webhook - Error processing SES record:",e)}let b={success:!0,processedEmails:l.length,rejectedEmails:d.length,emails:l,rejected:d,timestamp:new Date,lambdaContext:n.context};return console.log(`‚úÖ Webhook - Successfully processed ${l.length} emails, rejected ${d.length} emails`),o.NextResponse.json(b)}catch(e){return console.error("üí• Webhook - Processing error:",e),o.NextResponse.json({success:!1,error:"Failed to process email webhook",details:e instanceof Error?e.message:"Unknown error",timestamp:new Date},{status:200})}}},255314:e=>{"use strict";var{g:t,__dirname:r}=e;{e.s({patchFetch:()=>n,routeModule:()=>t,serverHooks:()=>d,workAsyncStorage:()=>r,workUnitAsyncStorage:()=>l});var o=e.i(854885),a=e.i(814689),i=e.i(25402),s=e.i(774954);let t=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/inbound/webhook/route",pathname:"/api/inbound/webhook",filename:"route",bundlePath:""},resolvedPagePath:"[project]/app/api/inbound/webhook/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:r,workUnitAsyncStorage:l,serverHooks:d}=t;function n(){return(0,i.patchFetch)({workAsyncStorage:r,workUnitAsyncStorage:l})}}}};

//# sourceMappingURL=_9e0471e1._.js.map