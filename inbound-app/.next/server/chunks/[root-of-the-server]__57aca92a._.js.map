{"version":3,"sources":["turbopack:///[project]/app/api/v1/endpoints/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { auth } from '@/lib/auth/auth'\nimport { headers } from 'next/headers'\nimport { db } from '@/lib/db'\nimport { endpoints, emailGroups } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\nimport { nanoid } from 'nanoid'\nimport type { CreateEndpointData } from '@/features/endpoints/types'\n\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('üìã GET /api/v1/endpoints - Fetching user endpoints')\n    \n    const session = await auth.api.getSession({ headers: await headers() })\n    if (!session?.user?.id) {\n      console.warn('‚ùå GET /api/v1/endpoints - Unauthorized request')\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    // Fetch user's endpoints with delivery statistics\n    const userEndpoints = await db\n      .select({\n        id: endpoints.id,\n        name: endpoints.name,\n        type: endpoints.type,\n        config: endpoints.config,\n        isActive: endpoints.isActive,\n        description: endpoints.description,\n        userId: endpoints.userId,\n        createdAt: endpoints.createdAt,\n        updatedAt: endpoints.updatedAt,\n      })\n      .from(endpoints)\n      .where(eq(endpoints.userId, session.user.id))\n      .orderBy(endpoints.createdAt)\n\n    // For email_group endpoints, also fetch the group emails\n    const endpointsWithGroups = await Promise.all(\n      userEndpoints.map(async (endpoint) => {\n        if (endpoint.type === 'email_group') {\n          const groupEmails = await db\n            .select({ emailAddress: emailGroups.emailAddress })\n            .from(emailGroups)\n            .where(eq(emailGroups.endpointId, endpoint.id))\n\n          return {\n            ...endpoint,\n            groupEmails: groupEmails.map(g => g.emailAddress)\n          }\n        }\n        return endpoint\n      })\n    )\n\n    console.log(`‚úÖ GET /api/v1/endpoints - Retrieved ${userEndpoints.length} endpoints for user ${session.user.id}`)\n\n    return NextResponse.json({ \n      success: true,\n      endpoints: endpointsWithGroups \n    })\n\n  } catch (error) {\n    console.error('‚ùå GET /api/v1/endpoints - Error:', error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to fetch endpoints',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('üìù POST /api/v1/endpoints - Creating new endpoint')\n    \n    const session = await auth.api.getSession({ headers: await headers() })\n    if (!session?.user?.id) {\n      console.warn('‚ùå POST /api/v1/endpoints - Unauthorized request')\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    const data: CreateEndpointData = await request.json()\n    \n    // Validate required fields\n    if (!data.name || !data.type || !data.config) {\n      return NextResponse.json(\n        { error: 'Missing required fields: name, type, config' },\n        { status: 400 }\n      )\n    }\n\n    // Validate endpoint type\n    if (!['webhook', 'email', 'email_group'].includes(data.type)) {\n      return NextResponse.json(\n        { error: 'Invalid endpoint type. Must be webhook, email, or email_group' },\n        { status: 400 }\n      )\n    }\n\n    // Validate config based on type\n    const validationResult = validateEndpointConfig(data.type, data.config)\n    if (!validationResult.valid) {\n      return NextResponse.json(\n        { error: `Invalid configuration: ${validationResult.error}` },\n        { status: 400 }\n      )\n    }\n\n    console.log(`üìù POST /api/v1/endpoints - Creating ${data.type} endpoint: ${data.name}`)\n\n    const newEndpoint = {\n      id: nanoid(),\n      name: data.name,\n      type: data.type,\n      webhookFormat: data.type === 'webhook' ? (data.webhookFormat || 'inbound') : null,\n      config: JSON.stringify(data.config),\n      description: data.description || null,\n      userId: session.user.id,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n\n    const [createdEndpoint] = await db.insert(endpoints).values(newEndpoint).returning()\n    \n    // If it's an email group, create the group entries\n    if (data.type === 'email_group' && 'emails' in data.config) {\n      const groupEntries = data.config.emails.map(email => ({\n        id: nanoid(),\n        endpointId: createdEndpoint.id,\n        emailAddress: email,\n        createdAt: new Date()\n      }))\n      \n      if (groupEntries.length > 0) {\n        await db.insert(emailGroups).values(groupEntries)\n        console.log(`üìÆ POST /api/v1/endpoints - Created ${groupEntries.length} email group entries`)\n      }\n    }\n\n    console.log(`‚úÖ POST /api/v1/endpoints - Successfully created endpoint ${createdEndpoint.id}`)\n\n    return NextResponse.json({ \n      success: true,\n      endpoint: createdEndpoint \n    }, { status: 201 })\n\n  } catch (error) {\n    console.error('‚ùå POST /api/v1/endpoints - Error:', error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to create endpoint',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\n/**\n * Validate endpoint configuration based on type\n */\nfunction validateEndpointConfig(type: string, config: any): { valid: boolean; error?: string } {\n  try {\n    switch (type) {\n      case 'webhook':\n        if (!config.url) {\n          return { valid: false, error: 'Webhook URL is required' }\n        }\n        if (typeof config.url !== 'string') {\n          return { valid: false, error: 'Webhook URL must be a string' }\n        }\n        // Basic URL validation\n        try {\n          new URL(config.url)\n        } catch {\n          return { valid: false, error: 'Invalid webhook URL format' }\n        }\n        break\n\n      case 'email':\n        if (!config.forwardTo) {\n          return { valid: false, error: 'Forward-to email address is required' }\n        }\n        if (typeof config.forwardTo !== 'string') {\n          return { valid: false, error: 'Forward-to email must be a string' }\n        }\n        // Basic email validation\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (!emailRegex.test(config.forwardTo)) {\n          return { valid: false, error: 'Invalid forward-to email address format' }\n        }\n        break\n\n      case 'email_group':\n        if (!config.emails || !Array.isArray(config.emails)) {\n          return { valid: false, error: 'Email group must have an emails array' }\n        }\n        if (config.emails.length === 0) {\n          return { valid: false, error: 'Email group must have at least one email address' }\n        }\n        // Validate each email in the group\n        const emailRegexGroup = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        for (const email of config.emails) {\n          if (typeof email !== 'string' || !emailRegexGroup.test(email)) {\n            return { valid: false, error: `Invalid email address in group: ${email}` }\n          }\n        }\n        break\n\n      default:\n        return { valid: false, error: 'Unknown endpoint type' }\n    }\n\n    return { valid: true }\n  } catch (error) {\n    return { valid: false, error: 'Configuration validation failed' }\n  }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[1]}