{"version":3,"sources":["turbopack:///[project]/app/api/v1/lib/auth.ts","turbopack:///[project]/app/api/v1.1/email-addresses/[id]/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest } from 'next/server'\nimport { auth } from '@/lib/auth/auth'\n\nexport interface ApiKeyValidationResult {\n  valid: boolean\n  user?: {\n    id: string\n    email: string\n    name: string | null\n  }\n  error?: string\n}\n\n/**\n * Validates an API key from the Authorization header\n * Expected format: \"Bearer <api_key>\" or just \"<api_key>\"\n */\nexport async function validateApiKey(request: NextRequest): Promise<ApiKeyValidationResult> {\n  try {\n    // Get the Authorization header\n    const authHeader = request.headers.get('Authorization')\n    \n    if (!authHeader) {\n      return {\n        valid: false,\n        error: 'Missing Authorization header'\n      }\n    }\n\n    // Extract the API key (support both \"Bearer <key>\" and just \"<key>\")\n    let apiKey: string\n    if (authHeader.startsWith('Bearer ')) {\n      apiKey = authHeader.substring(7)\n    } else {\n      apiKey = authHeader\n    }\n\n    console.log(\"API KEY: \" + apiKey)\n\n    if (!apiKey) {\n      return {\n        valid: false,\n        error: 'Invalid Authorization header format'\n      }\n    }\n\n    // Verify the API key using Better Auth\n    const { valid, error, key } = await auth.api.verifyApiKey({\n      body: {\n        key: apiKey\n      }\n    })\n\n    console.log(\"VALID: \" + valid)\n    console.log(\"ERROR: \" + error)\n    console.log(\"KEY: \" + key?.userId)\n\n    if (!valid || error || !key) {\n      return {\n        valid: false,\n        error: error?.message || 'Invalid API key'\n      }\n    }\n\n    // Check if the API key is enabled\n    if (!key.enabled) {\n      return {\n        valid: false,\n        error: 'API key is disabled'\n      }\n    }\n\n    // Check if the API key has expired\n    if (key.expiresAt && new Date(key.expiresAt) < new Date()) {\n      return {\n        valid: false,\n        error: 'API key has expired'\n      }\n    }\n\n    // Use the userId from the API key directly\n    return {\n      valid: true,\n      user: {\n        id: key.userId,\n        email: key.userId, // We don't have email from API key, use userId as fallback\n        name: null // We don't have name from API key\n      }\n    }\n  } catch (error) {\n    console.error('API key validation error:', error)\n    return {\n      valid: false,\n      error: 'Internal server error during API key validation'\n    }\n  }\n}\n\n/**\n * Middleware function to validate API key and return standardized error responses\n */\nexport function createApiKeyMiddleware() {\n  return async (request: NextRequest) => {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return {\n        error: validation.error,\n        status: 401\n      }\n    }\n\n    return {\n      user: validation.user!\n    }\n  }\n} ","import { NextRequest, NextResponse } from 'next/server'\nimport { validateApiKey } from '@/app/api/v1/lib/auth'\nimport { db } from '@/lib/db'\nimport { emailAddresses, emailDomains, endpoints, webhooks } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üìã GET /api/v1.1/email-addresses/${params.id} - Fetching email address details`)\n    \n    const validation = await validateApiKey(request)\n    if ('error' in validation) {\n      return NextResponse.json({ error: validation.error }, { status: 401 })\n    }\n\n    const userId = validation.user?.id\n    if (!userId) {\n      return NextResponse.json({ error: 'User not found' }, { status: 401 })\n    }\n\n    // Get email address with domain and routing information\n    const emailResult = await db\n      .select({\n        // Email address fields\n        id: emailAddresses.id,\n        address: emailAddresses.address,\n        domainId: emailAddresses.domainId,\n        webhookId: emailAddresses.webhookId,\n        endpointId: emailAddresses.endpointId,\n        isActive: emailAddresses.isActive,\n        isReceiptRuleConfigured: emailAddresses.isReceiptRuleConfigured,\n        receiptRuleName: emailAddresses.receiptRuleName,\n        createdAt: emailAddresses.createdAt,\n        updatedAt: emailAddresses.updatedAt,\n        \n        // Domain information\n        domainName: emailDomains.domain,\n        domainStatus: emailDomains.status,\n        \n        // Endpoint information (if exists)\n        endpointName: endpoints.name,\n        endpointType: endpoints.type,\n        endpointIsActive: endpoints.isActive,\n        \n        // Webhook information (legacy, if exists)\n        webhookName: webhooks.name,\n        webhookUrl: webhooks.url,\n        webhookIsActive: webhooks.isActive\n      })\n      .from(emailAddresses)\n      .leftJoin(emailDomains, eq(emailAddresses.domainId, emailDomains.id))\n      .leftJoin(endpoints, eq(emailAddresses.endpointId, endpoints.id))\n      .leftJoin(webhooks, eq(emailAddresses.webhookId, webhooks.id))\n      .where(and(\n        eq(emailAddresses.id, params.id),\n        eq(emailAddresses.userId, userId)\n      ))\n      .limit(1)\n\n    if (!emailResult[0]) {\n      return NextResponse.json({\n        success: false,\n        error: 'Email address not found'\n      }, { status: 404 })\n    }\n\n    const result = emailResult[0]\n\n    // Transform result to enhanced format\n    const enhancedEmailAddress = {\n      id: result.id,\n      address: result.address,\n      isActive: result.isActive,\n      isReceiptRuleConfigured: result.isReceiptRuleConfigured,\n      receiptRuleName: result.receiptRuleName,\n      createdAt: result.createdAt,\n      updatedAt: result.updatedAt,\n      \n      domain: {\n        id: result.domainId,\n        name: result.domainName,\n        status: result.domainStatus\n      },\n      \n      routing: result.endpointId ? {\n        type: 'endpoint',\n        id: result.endpointId,\n        name: result.endpointName,\n        endpointType: result.endpointType,\n        isActive: result.endpointIsActive\n      } : result.webhookId ? {\n        type: 'webhook',\n        id: result.webhookId,\n        name: result.webhookName,\n        url: result.webhookUrl,\n        isActive: result.webhookIsActive\n      } : {\n        type: 'none',\n        id: null,\n        name: null,\n        isActive: false\n      }\n    }\n\n    console.log(`‚úÖ GET /api/v1.1/email-addresses/${params.id} - Retrieved email address details`)\n\n    return NextResponse.json({\n      success: true,\n      data: enhancedEmailAddress\n    })\n\n  } catch (error) {\n    console.error(`‚ùå GET /api/v1.1/email-addresses/${params.id} - Error:`, error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to fetch email address details',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üìù PUT /api/v1.1/email-addresses/${params.id} - Updating email address`)\n    \n    const validation = await validateApiKey(request)\n    if ('error' in validation) {\n      return NextResponse.json({ error: validation.error }, { status: 401 })\n    }\n\n    const userId = validation.user?.id\n    if (!userId) {\n      return NextResponse.json({ error: 'User not found' }, { status: 401 })\n    }\n\n    const data = await request.json()\n\n    // Check if email address exists and belongs to user\n    const existingEmail = await db\n      .select()\n      .from(emailAddresses)\n      .where(and(\n        eq(emailAddresses.id, params.id),\n        eq(emailAddresses.userId, userId)\n      ))\n      .limit(1)\n\n    if (!existingEmail[0]) {\n      return NextResponse.json({\n        success: false,\n        error: 'Email address not found'\n      }, { status: 404 })\n    }\n\n    // Validate endpoint/webhook if provided\n    if (data.endpointId) {\n      const endpointResult = await db\n        .select()\n        .from(endpoints)\n        .where(and(\n          eq(endpoints.id, data.endpointId),\n          eq(endpoints.userId, userId)\n        ))\n        .limit(1)\n\n      if (!endpointResult[0]) {\n        return NextResponse.json({\n          success: false,\n          error: 'Endpoint not found or access denied'\n        }, { status: 404 })\n      }\n    }\n\n    if (data.webhookId) {\n      const webhookResult = await db\n        .select()\n        .from(webhooks)\n        .where(and(\n          eq(webhooks.id, data.webhookId),\n          eq(webhooks.userId, userId)\n        ))\n        .limit(1)\n\n      if (!webhookResult[0]) {\n        return NextResponse.json({\n          success: false,\n          error: 'Webhook not found or access denied'\n        }, { status: 404 })\n      }\n    }\n\n    // Prepare update data\n    const updateData: any = {\n      updatedAt: new Date()\n    }\n\n    if (data.isActive !== undefined) updateData.isActive = data.isActive\n    if (data.endpointId !== undefined) {\n      updateData.endpointId = data.endpointId\n      updateData.webhookId = null // Clear webhook when setting endpoint\n    }\n    if (data.webhookId !== undefined) {\n      updateData.webhookId = data.webhookId\n      updateData.endpointId = null // Clear endpoint when setting webhook\n    }\n\n    // Update the email address\n    const [updatedEmailAddress] = await db\n      .update(emailAddresses)\n      .set(updateData)\n      .where(eq(emailAddresses.id, params.id))\n      .returning()\n\n    console.log(`‚úÖ PUT /api/v1.1/email-addresses/${params.id} - Successfully updated email address`)\n\n    return NextResponse.json({\n      success: true,\n      data: updatedEmailAddress,\n      message: 'Email address updated successfully'\n    })\n\n  } catch (error) {\n    console.error(`‚ùå PUT /api/v1.1/email-addresses/${params.id} - Error:`, error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to update email address',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üóëÔ∏è DELETE /api/v1.1/email-addresses/${params.id} - Deleting email address`)\n    \n    const validation = await validateApiKey(request)\n    if ('error' in validation) {\n      return NextResponse.json({ error: validation.error }, { status: 401 })\n    }\n\n    const userId = validation.user?.id\n    if (!userId) {\n      return NextResponse.json({ error: 'User not found' }, { status: 401 })\n    }\n\n    // Check if email address exists and belongs to user\n    const existingEmail = await db\n      .select()\n      .from(emailAddresses)\n      .where(and(\n        eq(emailAddresses.id, params.id),\n        eq(emailAddresses.userId, userId)\n      ))\n      .limit(1)\n\n    if (!existingEmail[0]) {\n      return NextResponse.json({\n        success: false,\n        error: 'Email address not found'\n      }, { status: 404 })\n    }\n\n    // Delete the email address\n    await db.delete(emailAddresses).where(eq(emailAddresses.id, params.id))\n\n    console.log(`‚úÖ DELETE /api/v1.1/email-addresses/${params.id} - Successfully deleted email address`)\n\n    return NextResponse.json({\n      success: true,\n      message: 'Email address deleted successfully'\n    })\n\n  } catch (error) {\n    console.error(`‚ùå DELETE /api/v1.1/email-addresses/${params.id} - Error:`, error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to delete email address',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[2]}