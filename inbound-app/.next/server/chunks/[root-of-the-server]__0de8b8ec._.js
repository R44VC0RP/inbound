module.exports={929549:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},983943:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},86103:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},945935:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},348629:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("@opentelemetry/api",()=>require("@opentelemetry/api"))},76569:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("node:events",()=>require("node:events"))},804713:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("util",()=>require("util"))},87485:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("child_process",()=>require("child_process"))},420467:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("events",()=>require("events"))},936121:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("node:util",()=>require("node:util"))},681635:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("node:http",()=>require("node:http"))},866098:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("node:https",()=>require("node:https"))},580767:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("node:buffer",()=>require("node:buffer"))},329295:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("crypto",()=>require("crypto"))},62445:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("http",()=>require("http"))},348388:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("https",()=>require("https"))},591032:function(e){var{g:t,__dirname:o,m:s,e:n}=e;s.exports=e.x("node:crypto",()=>require("node:crypto"))},909834:e=>{"use strict";var{g:t,__dirname:o}=e;e.s({DELIVERY_STATUS:()=>n.DELIVERY_STATUS,DELIVERY_TYPES:()=>n.DELIVERY_TYPES,DOMAIN_STATUS:()=>n.DOMAIN_STATUS,EMAIL_STATUS:()=>n.EMAIL_STATUS,ENDPOINT_TYPES:()=>n.ENDPOINT_TYPES,PROVIDER_CONFIDENCE:()=>n.PROVIDER_CONFIDENCE,SENT_EMAIL_STATUS:()=>n.SENT_EMAIL_STATUS,SES_VERIFICATION_STATUS:()=>n.SES_VERIFICATION_STATUS,VIP_PAYMENT_STATUS:()=>n.VIP_PAYMENT_STATUS,WEBHOOK_FORMATS:()=>n.WEBHOOK_FORMATS,WEBHOOK_STATUS:()=>n.WEBHOOK_STATUS,account:()=>s.account,apikey:()=>s.apikey,blockedEmails:()=>n.blockedEmails,domainDnsRecords:()=>n.domainDnsRecords,emailAddresses:()=>n.emailAddresses,emailDomains:()=>n.emailDomains,emailGroups:()=>n.emailGroups,endpointDeliveries:()=>n.endpointDeliveries,endpoints:()=>n.endpoints,parsedEmails:()=>n.parsedEmails,receivedEmails:()=>n.receivedEmails,sentEmails:()=>n.sentEmails,sesEvents:()=>n.sesEvents,session:()=>s.session,structuredEmails:()=>n.structuredEmails,subscriptions:()=>n.subscriptions,user:()=>s.user,userAccounts:()=>n.userAccounts,userOnboarding:()=>n.userOnboarding,verification:()=>s.verification,vipAllowedSenders:()=>n.vipAllowedSenders,vipConfigs:()=>n.vipConfigs,vipEmailAttempts:()=>n.vipEmailAttempts,vipPaymentSessions:()=>n.vipPaymentSessions,webhookDeliveries:()=>n.webhookDeliveries,webhooks:()=>n.webhooks});var s=e.i(594120),n=e.i(55379)},436754:e=>{"use strict";var{g:t,__dirname:o}=e;e.s({DELIVERY_STATUS:()=>s.DELIVERY_STATUS,DELIVERY_TYPES:()=>s.DELIVERY_TYPES,DOMAIN_STATUS:()=>s.DOMAIN_STATUS,EMAIL_STATUS:()=>s.EMAIL_STATUS,ENDPOINT_TYPES:()=>s.ENDPOINT_TYPES,PROVIDER_CONFIDENCE:()=>s.PROVIDER_CONFIDENCE,SENT_EMAIL_STATUS:()=>s.SENT_EMAIL_STATUS,SES_VERIFICATION_STATUS:()=>s.SES_VERIFICATION_STATUS,VIP_PAYMENT_STATUS:()=>s.VIP_PAYMENT_STATUS,WEBHOOK_FORMATS:()=>s.WEBHOOK_FORMATS,WEBHOOK_STATUS:()=>s.WEBHOOK_STATUS,account:()=>s.account,apikey:()=>s.apikey,blockedEmails:()=>s.blockedEmails,domainDnsRecords:()=>s.domainDnsRecords,emailAddresses:()=>s.emailAddresses,emailDomains:()=>s.emailDomains,emailGroups:()=>s.emailGroups,endpointDeliveries:()=>s.endpointDeliveries,endpoints:()=>s.endpoints,parsedEmails:()=>s.parsedEmails,receivedEmails:()=>s.receivedEmails,sentEmails:()=>s.sentEmails,sesEvents:()=>s.sesEvents,session:()=>s.session,structuredEmails:()=>s.structuredEmails,subscriptions:()=>s.subscriptions,user:()=>s.user,userAccounts:()=>s.userAccounts,userOnboarding:()=>s.userOnboarding,verification:()=>s.verification,vipAllowedSenders:()=>s.vipAllowedSenders,vipConfigs:()=>s.vipConfigs,vipEmailAttempts:()=>s.vipEmailAttempts,vipPaymentSessions:()=>s.vipPaymentSessions,webhookDeliveries:()=>s.webhookDeliveries,webhooks:()=>s.webhooks}),e.i(468686);var s=e.i(909834)},153364:function(e){var{g:t,__dirname:o,m:s,e:n}=e;"use strict";s.exports=e.r(68043).vendored["react-rsc"].ReactServerDOMTurbopackServerEdge},20740:e=>{"use strict";var{g:t,__dirname:o}=e;{e.s({WEBHOOK_FORMAT_CONFIGS:()=>t,generateRealPayload:()=>i,generateTestPayload:()=>n,getWebhookFormatConfig:()=>s});let t={inbound:{name:"Inbound Webhook",description:"Standard Inbound email webhook format with full email data",testPayload:e=>({event:"webhook_test",timestamp:e.timestamp,messageId:e.messageId,source:e.from,destination:e.to,subject:e.subject,body:{text:e.textBody||"This is a test email from the Inbound Email service to verify webhook functionality.",html:e.htmlBody||"<p>This is a test email from the <strong>Inbound Email service</strong> to verify webhook functionality.</p>"},attachments:e.attachments||[],headers:e.headers||{},test:!0}),realPayload:e=>({event:"email_received",timestamp:e.timestamp,messageId:e.messageId,source:e.from,destination:e.to,subject:e.subject,body:{text:e.textBody,html:e.htmlBody},attachments:e.attachments||[],headers:e.headers||{}})},discord:{name:"Discord Webhook",description:"Discord-compatible webhook format with rich embeds",testPayload:e=>({content:`üìß **Test Email Received**`,embeds:[{title:e.subject||"Test Email - Inbound Email Service",description:e.textBody||"This is a test email from the Inbound Email service to verify webhook functionality.",color:65280,timestamp:e.timestamp,footer:{text:"Inbound Email Service - Test",icon_url:"https://inbound.new/favicon.ico"},fields:[{name:"From",value:e.from||"test@example.com",inline:!0},{name:"To",value:e.to.join(", ")||e.recipient,inline:!0},{name:"Message ID",value:`\`${e.messageId}\``,inline:!1}]}]}),realPayload:e=>({content:`üìß **New Email Received**`,embeds:[{title:e.subject||"No Subject",description:e.textBody?e.textBody.length>2e3?e.textBody.substring(0,2e3)+"...":e.textBody:"No content",color:39423,timestamp:e.timestamp,footer:{text:"Inbound Email Service",icon_url:"https://inbound.new/favicon.ico"},fields:[{name:"From",value:e.from,inline:!0},{name:"To",value:e.to.join(", "),inline:!0},...e.attachments&&e.attachments.length>0?[{name:"Attachments",value:e.attachments.map(e=>e.filename||"Unknown").join(", "),inline:!1}]:[],{name:"Message ID",value:`\`${e.messageId}\``,inline:!1}]}]})},slack:{name:"Slack Webhook",description:"Slack-compatible webhook format with attachments",testPayload:e=>({text:`üìß *Test Email Received*`,username:"Inbound Email",icon_url:"https://inbound.new/favicon.ico",attachments:[{fallback:`Test email: ${e.subject}`,color:"good",title:e.subject||"Test Email - Inbound Email Service",text:e.textBody||"This is a test email from the Inbound Email service to verify webhook functionality.",fields:[{title:"From",value:e.from||"test@example.com",short:!0},{title:"To",value:e.to.join(", ")||e.recipient,short:!0},{title:"Message ID",value:e.messageId,short:!1}],footer:"Inbound Email Service - Test",ts:Math.floor(new Date(e.timestamp).getTime()/1e3)}]}),realPayload:e=>({text:`üìß *New Email Received*`,username:"Inbound Email",icon_url:"https://inbound.new/favicon.ico",attachments:[{fallback:`New email: ${e.subject}`,color:"#0099ff",title:e.subject||"No Subject",text:e.textBody?e.textBody.length>1e3?e.textBody.substring(0,1e3)+"...":e.textBody:"No content",fields:[{title:"From",value:e.from,short:!0},{title:"To",value:e.to.join(", "),short:!0},...e.attachments&&e.attachments.length>0?[{title:"Attachments",value:e.attachments.map(e=>e.filename||"Unknown").join(", "),short:!1}]:[],{title:"Message ID",value:e.messageId,short:!1}],footer:"Inbound Email Service",ts:Math.floor(new Date(e.timestamp).getTime()/1e3)}]})}};function s(e){return t[e]}function n(e,o){let s=t[e],n={...{messageId:`test-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,from:"test@example.com",to:["test@yourdomain.com"],subject:"Test Email - Inbound Email Service",textBody:"This is a test email from the Inbound Email service to verify webhook functionality.",htmlBody:"<p>This is a test email from the <strong>Inbound Email service</strong> to verify webhook functionality.</p>",attachments:[],headers:{From:"test@example.com",To:"test@yourdomain.com",Subject:"Test Email - Inbound Email Service",Date:new Date().toISOString()},timestamp:new Date().toISOString(),recipient:"test@yourdomain.com"},...o};return s.testPayload(n)}function i(e,o){return t[e].realPayload(o)}}},456397:function(e){var{g:t,__dirname:o,m:s,e:n}=e},154937:e=>{"use strict";var{g:t,__dirname:o}=e;e.s({POST:()=>d});var s=e.i(125427),n=e.i(494642),i=e.i(557440);e.i(468686);var r=e.i(55379),a=e.i(176825),l=e.i(20740);async function d(e,{params:t}){let{id:o}=await t;console.log("üß™ POST /api/v2/endpoints/{id}/test - Starting test for endpoint:",o);try{console.log("üîê Validating request authentication");let{userId:t,error:d}=await (0,n.validateRequest)(e);if(!t)return console.log("‚ùå Authentication failed:",d),s.NextResponse.json({error:d},{status:401});console.log("‚úÖ Authentication successful for userId:",t);let c={};try{let t=await e.text();t.trim()&&(c=JSON.parse(t))}catch(e){console.log("‚ö†Ô∏è Failed to parse request body, using defaults:",e)}let m=c.webhookFormat||"inbound";if(console.log("üìã Using webhook format preference:",m),!["inbound","discord","slack"].includes(m))return console.log("‚ùå Invalid webhook format:",m),s.NextResponse.json({error:"Invalid webhook format",validFormats:["inbound","discord","slack"]},{status:400});console.log("üîç Checking if endpoint exists and belongs to user");let u=await i.db.select().from(r.endpoints).where((0,a.and)((0,a.eq)(r.endpoints.id,o),(0,a.eq)(r.endpoints.userId,t))).limit(1);if(!u[0])return console.log("‚ùå Endpoint not found for user:",t,"endpoint:",o),s.NextResponse.json({error:"Endpoint not found or access denied"},{status:404});let p=u[0];if(console.log("‚úÖ Found endpoint:",p.name,"type:",p.type),!p.isActive)return console.log("‚ùå Endpoint is disabled:",o),s.NextResponse.json({success:!1,message:"Endpoint is disabled",responseTime:0},{status:400});let g=JSON.parse(p.config),E=Date.now(),f={success:!1,message:"Test not implemented for this endpoint type",responseTime:0};switch(p.type){case"webhook":try{console.log("üîó Testing webhook endpoint:",g.url),console.log("üìã Using webhook format:",m);let e=(0,l.generateTestPayload)(m,{messageId:`test-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,from:"test@example.com",to:["test@yourdomain.com"],subject:"Test Email - Inbound Email Service",recipient:"test@yourdomain.com"});"inbound"===m&&"object"==typeof e&&(e.endpoint={id:p.id,name:p.name});let t={};if(g.headers)try{t="string"==typeof g.headers?JSON.parse(g.headers):g.headers}catch(e){console.warn("‚ö†Ô∏è Invalid custom headers for endpoint",o,":",e),t={}}let s={"Content-Type":"application/json","User-Agent":"InboundEmail-Test/2.0","X-Test-Request":"true","X-Endpoint-ID":p.id,"X-Webhook-Format":m,...t};console.log("üì§ Sending test payload to webhook:",g.url),console.log("üìã Request headers:",Object.keys(s).join(", "));let n=await fetch(g.url,{method:"POST",headers:s,body:JSON.stringify(e),signal:AbortSignal.timeout(1e3*(g.timeout||30))}),i=Date.now()-E,r="";try{r=await n.text()}catch{r="Unable to read response body"}f={success:n.ok,message:n.ok?`Webhook responded successfully (${n.status})`:`Webhook returned error (${n.status})`,responseTime:i,statusCode:n.status,responseBody:r.substring(0,1e3),testPayload:e,webhookFormat:m},console.log(`${n.ok?"‚úÖ":"‚ùå"} Webhook test ${n.ok?"passed":"failed"}: ${n.status} in ${i}ms`)}catch(o){let e=Date.now()-E,t="Unknown error";o instanceof Error&&(t="AbortError"===o.name?`Request timeout after ${g.timeout||30}s`:o.message),f={success:!1,message:`Webhook test failed: ${t}`,responseTime:e,error:t,webhookFormat:m},console.error("‚ùå Webhook test failed:",t)}break;case"email":try{console.log("üìß Testing email forwarding endpoint to:",g.forwardTo);let e=Date.now()-E;f={success:!0,message:`Email forwarding endpoint configured to forward to: ${g.forwardTo}`,responseTime:e,testPayload:{type:"email_forward_test",forwardTo:g.forwardTo,preserveHeaders:g.preserveHeaders||!1,subject:"Test Email - Inbound Email Service",from:"test@example.com",timestamp:new Date().toISOString()}},console.log("‚úÖ Email endpoint test completed successfully")}catch(t){let e=Date.now()-E;f={success:!1,message:"Email endpoint test failed",responseTime:e,error:t instanceof Error?t.message:"Unknown error"},console.error("‚ùå Email endpoint test failed:",t)}break;case"email_group":try{console.log("üìß Testing email group endpoint with",g.emails?.length||0,"recipients");let e=Date.now()-E;f={success:!0,message:`Email group endpoint configured to forward to ${g.emails?.length||0} recipients`,responseTime:e,testPayload:{type:"email_group_test",groupEmails:g.emails||[],preserveHeaders:g.preserveHeaders||!1,subject:"Test Email - Inbound Email Service",from:"test@example.com",timestamp:new Date().toISOString()}},console.log("‚úÖ Email group endpoint test completed successfully")}catch(t){let e=Date.now()-E;f={success:!1,message:"Email group endpoint test failed",responseTime:e,error:t instanceof Error?t.message:"Unknown error"},console.error("‚ùå Email group endpoint test failed:",t)}break;default:let v=Date.now()-E;f={success:!1,message:`Unknown endpoint type: ${p.type}`,responseTime:v,error:`Unsupported endpoint type: ${p.type}`},console.log("‚ùå Unknown endpoint type:",p.type)}return console.log(`${f.success?"‚úÖ":"‚ùå"} Test ${f.success?"passed":"failed"} for endpoint ${o} (${p.type})`),s.NextResponse.json(f)}catch(e){return console.error("üí• Unexpected error in POST /api/v2/endpoints/{id}/test:",e),s.NextResponse.json({success:!1,error:"Internal server error",message:"Failed to test endpoint",details:e instanceof Error?e.message:"Unknown error",responseTime:0},{status:500})}}},325315:e=>{"use strict";var{g:t,__dirname:o}=e;{e.s({patchFetch:()=>a,routeModule:()=>t,serverHooks:()=>d,workAsyncStorage:()=>o,workUnitAsyncStorage:()=>l});var s=e.i(854885),n=e.i(814689),i=e.i(25402),r=e.i(154937);let t=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/v2/endpoints/[id]/test/route",pathname:"/api/v2/endpoints/[id]/test",filename:"route",bundlePath:""},resolvedPagePath:"[project]/app/api/v2/endpoints/[id]/test/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:o,workUnitAsyncStorage:l,serverHooks:d}=t;function a(){return(0,i.patchFetch)({workAsyncStorage:o,workUnitAsyncStorage:l})}}},993477:e=>{var{g:t,__dirname:o}=e;e.v(t=>Promise.all(["server/chunks/[root-of-the-server]__0840e14c._.js","server/chunks/node_modules_10ae7a2d._.js"].map(t=>e.l(t))).then(()=>t(611487)))}};

//# sourceMappingURL=%5Broot-of-the-server%5D__0de8b8ec._.js.map