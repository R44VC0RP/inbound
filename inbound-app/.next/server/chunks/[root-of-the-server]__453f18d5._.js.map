{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.ts","turbopack:///[project]/node_modules/autumn-js/dist/sdk/index.mjs","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/SendEmailCommand.js","turbopack:///[project]/app/api/v2/emails/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactServerDOMTurbopackServerEdge\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/sdk/error.ts\nvar AutumnError = class extends Error {\n  constructor(response) {\n    super(response.message);\n    __publicField(this, \"message\");\n    __publicField(this, \"code\");\n    this.message = response.message;\n    this.code = response.code;\n  }\n  toString() {\n    return `${this.message} (code: ${this.code})`;\n  }\n  toJSON() {\n    return {\n      message: this.message,\n      code: this.code\n    };\n  }\n};\n\n// src/sdk/utils.ts\nvar staticWrapper = (callback, instance, args) => {\n  if (!instance) {\n    instance = new Autumn();\n  }\n  return callback({ instance, ...args });\n};\n\n// src/sdk/customers/cusMethods.ts\nvar customerMethods = (instance) => {\n  return {\n    get: (id, params) => staticWrapper(getCustomer, instance, { id, params }),\n    create: (params) => staticWrapper(createCustomer, instance, { params }),\n    update: (id, params) => staticWrapper(updateCustomer, instance, { id, params }),\n    delete: (id) => staticWrapper(deleteCustomer, instance, { id }),\n    billingPortal: (id, params) => staticWrapper(billingPortal, instance, { id, params })\n  };\n};\nvar getExpandStr = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\nvar getCustomer = async ({\n  instance,\n  id,\n  params\n}) => {\n  if (!id) {\n    return {\n      data: null,\n      error: new AutumnError({\n        message: \"Customer ID is required\",\n        code: \"CUSTOMER_ID_REQUIRED\"\n      })\n    };\n  }\n  return instance.get(`/customers/${id}?${getExpandStr(params?.expand)}`);\n};\nvar createCustomer = async ({\n  instance,\n  params\n}) => {\n  return instance.post(`/customers?${getExpandStr(params?.expand)}`, params);\n};\nvar updateCustomer = async ({\n  instance,\n  id,\n  params\n}) => {\n  return instance.post(`/customers/${id}`, params);\n};\nvar deleteCustomer = async ({\n  instance,\n  id\n}) => {\n  return instance.delete(`/customers/${id}`);\n};\nvar billingPortal = async ({\n  instance,\n  id,\n  params\n}) => {\n  return instance.post(`/customers/${id}/billing_portal`, params);\n};\n\n// src/sdk/customers/entities/entMethods.ts\nvar entityMethods = (instance) => {\n  return {\n    get: (customer_id, entity_id, params) => staticWrapper(getEntity, instance, {\n      customer_id,\n      entity_id,\n      params\n    }),\n    create: (customer_id, params) => staticWrapper(createEntity, instance, { customer_id, params }),\n    delete: (customer_id, entity_id) => staticWrapper(deleteEntity, instance, { customer_id, entity_id })\n  };\n};\nvar getExpandStr2 = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\nvar getEntity = async ({\n  instance,\n  customer_id,\n  entity_id,\n  params\n}) => {\n  return instance.get(\n    `/customers/${customer_id}/entities/${entity_id}?${getExpandStr2(\n      params?.expand\n    )}`\n  );\n};\nvar createEntity = async ({\n  instance,\n  customer_id,\n  params\n}) => {\n  return instance.post(`/customers/${customer_id}/entities`, params);\n};\nvar deleteEntity = async ({\n  instance,\n  customer_id,\n  entity_id\n}) => {\n  return instance.delete(`/customers/${customer_id}/entities/${entity_id}`);\n};\n\n// src/sdk/general/genMethods.ts\nvar handleAttach = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/attach\", params);\n};\nvar handleCancel = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/cancel\", params);\n};\nvar handleEntitled = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/entitled\", params);\n};\nvar handleEvent = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/events\", params);\n};\nvar handleTrack = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/track\", params);\n};\nvar handleUsage = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/usage\", params);\n};\nvar handleCheck = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/check\", params);\n};\n\n// src/sdk/products/prodMethods.ts\nvar productMethods = (instance) => {\n  return {\n    get: (id) => staticWrapper(getProduct, instance, { id }),\n    create: (params) => staticWrapper(createProduct, instance, { params }),\n    list: (params) => staticWrapper(listProducts, instance, { params })\n  };\n};\nvar listProducts = async ({\n  instance,\n  params\n}) => {\n  let path = \"/products\";\n  if (params) {\n    const queryParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(params)) {\n      if (value !== void 0) {\n        queryParams.append(key, String(value));\n      }\n    }\n    const queryString = queryParams.toString();\n    if (queryString) {\n      path += `?${queryString}`;\n    }\n  }\n  return instance.get(path);\n};\nvar getProduct = async ({\n  instance,\n  id\n}) => {\n  return instance.get(`/products/${id}`);\n};\nvar createProduct = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/products\", params);\n};\n\n// src/sdk/response.ts\nvar toContainerResult = async (response) => {\n  if (response.status < 200 || response.status >= 300) {\n    let error;\n    try {\n      error = await response.json();\n    } catch (error2) {\n      return {\n        data: null,\n        error: new AutumnError({\n          message: \"Failed to parse JSON response from Autumn\",\n          code: \"internal_error\"\n        }),\n        statusCode: response.status\n      };\n    }\n    return {\n      data: null,\n      error: new AutumnError({\n        message: error.message,\n        code: error.code\n      }),\n      statusCode: response.status\n    };\n  }\n  try {\n    let data = await response.json();\n    return {\n      data,\n      error: null,\n      statusCode: response?.status\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: new AutumnError({\n        message: \"Failed to parse Autumn API response\",\n        code: \"internal_error\"\n      }),\n      statusCode: response?.status\n    };\n  }\n};\n\n// src/sdk/client.ts\nvar LATEST_API_VERSION = \"1.2\";\nvar Autumn = class {\n  constructor(options) {\n    __publicField(this, \"secretKey\");\n    __publicField(this, \"publishableKey\");\n    __publicField(this, \"level\");\n    __publicField(this, \"headers\");\n    __publicField(this, \"url\");\n    __publicField(this, \"customers\", customerMethods(this));\n    __publicField(this, \"products\", productMethods(this));\n    __publicField(this, \"entities\", entityMethods(this));\n    try {\n      this.secretKey = options?.secretKey || process.env.AUTUMN_SECRET_KEY;\n      this.publishableKey = options?.publishableKey || process.env.AUTUMN_PUBLISHABLE_KEY;\n    } catch (error) {\n    }\n    if (!this.secretKey && !this.publishableKey) {\n      throw new Error(\"Autumn secret key or publishable key is required\");\n    }\n    this.headers = {\n      Authorization: `Bearer ${this.secretKey || this.publishableKey}`,\n      \"Content-Type\": \"application/json\"\n    };\n    let version = options?.version || LATEST_API_VERSION;\n    this.headers[\"x-api-version\"] = version;\n    this.url = options?.url || \"https://api.useautumn.com/v1\";\n    this.level = this.secretKey ? \"secret\" : \"publishable\";\n  }\n  getLevel() {\n    return this.level;\n  }\n  async get(path) {\n    const response = await fetch(`${this.url}${path}`, {\n      headers: this.headers\n    });\n    return toContainerResult(response);\n  }\n  async post(path, body) {\n    const response = await fetch(`${this.url}${path}`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(body)\n    });\n    return toContainerResult(response);\n  }\n  async delete(path) {\n    const response = await fetch(`${this.url}${path}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    });\n    return toContainerResult(response);\n  }\n  async attach(params) {\n    return handleAttach({\n      instance: this,\n      params\n    });\n  }\n  async cancel(params) {\n    return handleCancel({\n      instance: this,\n      params\n    });\n  }\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new check() method instead.\n   */\n  async entitled(params) {\n    return handleEntitled({\n      instance: this,\n      params\n    });\n  }\n  async check(params) {\n    return handleCheck({\n      instance: this,\n      params\n    });\n  }\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new track() method instead.\n   */\n  async event(params) {\n    return handleEvent({\n      instance: this,\n      params\n    });\n  }\n  async track(params) {\n    return handleTrack({\n      instance: this,\n      params\n    });\n  }\n  async usage(params) {\n    return handleUsage({\n      instance: this,\n      params\n    });\n  }\n};\n__publicField(Autumn, \"customers\", customerMethods());\n__publicField(Autumn, \"products\", productMethods());\n__publicField(Autumn, \"entities\", entityMethods());\n__publicField(Autumn, \"attach\", (params) => staticWrapper(handleAttach, void 0, { params }));\n__publicField(Autumn, \"usage\", (params) => staticWrapper(handleUsage, void 0, { params }));\n__publicField(Autumn, \"cancel\", (params) => staticWrapper(handleCancel, void 0, { params }));\n/**\n * @deprecated This method is deprecated and will be removed in a future version.\n * Please use the new check() method instead.\n */\n__publicField(Autumn, \"entitled\", (params) => staticWrapper(handleEntitled, void 0, { params }));\n__publicField(Autumn, \"check\", (params) => staticWrapper(handleCheck, void 0, { params }));\n/**\n * @deprecated This method is deprecated and will be removed in a future version.\n * Please use the new track() method instead.\n */\n__publicField(Autumn, \"event\", (params) => staticWrapper(handleEvent, void 0, { params }));\n__publicField(Autumn, \"track\", (params) => staticWrapper(handleTrack, void 0, { params }));\n\n// src/sdk/general/genEnums.ts\nvar AppEnv = /* @__PURE__ */ ((AppEnv2) => {\n  AppEnv2[\"Sandbox\"] = \"sandbox\";\n  AppEnv2[\"Live\"] = \"live\";\n  return AppEnv2;\n})(AppEnv || {});\n\n// src/sdk/customers/cusEnums.ts\nvar ProductStatus = /* @__PURE__ */ ((ProductStatus2) => {\n  ProductStatus2[\"Active\"] = \"active\";\n  ProductStatus2[\"Expired\"] = \"expired\";\n  ProductStatus2[\"Trialing\"] = \"trialing\";\n  ProductStatus2[\"Scheduled\"] = \"scheduled\";\n  return ProductStatus2;\n})(ProductStatus || {});\n\n// src/sdk/products/prodEnums.ts\nvar Infinite = \"inf\";\nvar FreeTrialDuration = /* @__PURE__ */ ((FreeTrialDuration2) => {\n  FreeTrialDuration2[\"Day\"] = \"day\";\n  return FreeTrialDuration2;\n})(FreeTrialDuration || {});\nvar UsageModel = /* @__PURE__ */ ((UsageModel2) => {\n  UsageModel2[\"Prepaid\"] = \"prepaid\";\n  UsageModel2[\"PayPerUse\"] = \"pay_per_use\";\n  return UsageModel2;\n})(UsageModel || {});\nvar ProductItemInterval = /* @__PURE__ */ ((ProductItemInterval2) => {\n  ProductItemInterval2[\"Minute\"] = \"minute\";\n  ProductItemInterval2[\"Hour\"] = \"hour\";\n  ProductItemInterval2[\"Day\"] = \"day\";\n  ProductItemInterval2[\"Week\"] = \"week\";\n  ProductItemInterval2[\"Month\"] = \"month\";\n  ProductItemInterval2[\"Quarter\"] = \"quarter\";\n  ProductItemInterval2[\"SemiAnnual\"] = \"semi_annual\";\n  ProductItemInterval2[\"Year\"] = \"year\";\n  ProductItemInterval2[\"Multiple\"] = \"multiple\";\n  return ProductItemInterval2;\n})(ProductItemInterval || {});\n\n// src/sdk/components/componentMethods.ts\nvar fetchPricingTable = async ({\n  instance,\n  params\n}) => {\n  let path = \"/components/pricing_table\";\n  if (params) {\n    const queryParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(params)) {\n      if (key === \"products\") {\n        continue;\n      }\n      if (value !== void 0) {\n        queryParams.append(key, String(value));\n      }\n    }\n    const queryString = queryParams.toString();\n    if (queryString) {\n      path += `?${queryString}`;\n    }\n  }\n  return await instance.get(path);\n};\n\nexport { AppEnv, Autumn, AutumnError, FreeTrialDuration, Infinite, ProductItemInterval, ProductStatus, UsageModel, fetchPricingTable, toContainerResult };\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_SendEmailCommand, se_SendEmailCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class SendEmailCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"SendEmail\", {})\n    .n(\"SESClient\", \"SendEmailCommand\")\n    .f(void 0, void 0)\n    .ser(se_SendEmailCommand)\n    .de(de_SendEmailCommand)\n    .build() {\n}\n","import { NextRequest, NextResponse } from 'next/server'\nimport { validateRequest } from '../helper/main'\nimport { SESClient, SendEmailCommand } from '@aws-sdk/client-ses'\nimport { db } from '@/lib/db'\nimport { sentEmails, emailDomains, SENT_EMAIL_STATUS } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\nimport { Autumn as autumn } from 'autumn-js'\nimport { nanoid } from 'nanoid'\n\n/**\n * POST /api/v2/emails\n * Send an email through the API (Resend-compatible)\n * Supports both session-based auth and API key auth\n * Has tests? ❌\n * Has logging? ✅\n * Has types? ✅\n */\n\n// POST /api/v2/emails types\nexport interface PostEmailsRequest {\n    from: string\n    to: string | string[]\n    subject: string\n    bcc?: string | string[]\n    cc?: string | string[]\n    reply_to?: string | string[]\n    html?: string\n    text?: string\n    headers?: Record<string, string>\n    attachments?: Array<{\n        content: string // Base64 encoded\n        filename: string\n        path?: string\n        content_type?: string\n    }>\n}\n\nexport interface PostEmailsResponse {\n    id: string\n}\n\n// Helper function to extract email address from \"Name <email@domain.com>\" format\nfunction extractEmailAddress(email: string): string {\n    const match = email.match(/<(.+)>/)\n    return match ? match[1] : email.trim()\n}\n\n// Helper function to extract domain from email address\nfunction extractDomain(email: string): string {\n    const address = extractEmailAddress(email)\n    const parts = address.split('@')\n    return parts.length === 2 ? parts[1] : ''\n}\n\n// Helper function to convert string or array to array\nfunction toArray(value: string | string[] | undefined): string[] {\n    if (!value) return []\n    return Array.isArray(value) ? value : [value]\n}\n\n// Initialize SES client\nconst awsRegion = process.env.AWS_REGION || 'us-east-2'\nconst awsAccessKeyId = process.env.AWS_ACCESS_KEY_ID\nconst awsSecretAccessKey = process.env.AWS_SECRET_ACCESS_KEY\n\nlet sesClient: SESClient | null = null\n\nif (awsAccessKeyId && awsSecretAccessKey) {\n    sesClient = new SESClient({\n        region: awsRegion,\n        credentials: {\n            accessKeyId: awsAccessKeyId,\n            secretAccessKey: awsSecretAccessKey,\n        }\n    })\n} else {\n    console.warn('⚠️ AWS credentials not configured. Email sending will not work.')\n}\n\nexport async function POST(request: NextRequest) {\n    console.log('📧 POST /api/v2/emails - Starting request')\n    \n    try {\n        console.log('🔐 Validating request authentication')\n        const { userId, error } = await validateRequest(request)\n        if (!userId) {\n            console.log('❌ Authentication failed:', error)\n            return NextResponse.json(\n                { error: error },\n                { status: 401 }\n            )\n        }\n        console.log('✅ Authentication successful for userId:', userId)\n\n        // Check for idempotency key\n        const idempotencyKey = request.headers.get('Idempotency-Key')\n        if (idempotencyKey) {\n            console.log('🔑 Idempotency key provided:', idempotencyKey)\n            \n            // Check if we've already processed this request\n            const existingEmail = await db\n                .select()\n                .from(sentEmails)\n                .where(\n                    and(\n                        eq(sentEmails.userId, userId),\n                        eq(sentEmails.idempotencyKey, idempotencyKey)\n                    )\n                )\n                .limit(1)\n            \n            if (existingEmail.length > 0) {\n                console.log('♻️ Idempotent request - returning existing email:', existingEmail[0].id)\n                return NextResponse.json({ id: existingEmail[0].id })\n            }\n        }\n\n        console.log('📝 Parsing request body')\n        const body: PostEmailsRequest = await request.json()\n        \n        // Validate required fields\n        if (!body.from || !body.to || !body.subject) {\n            console.log('⚠️ Missing required fields')\n            return NextResponse.json(\n                { error: 'Missing required fields: from, to, and subject are required' },\n                { status: 400 }\n            )\n        }\n\n        // Validate email content\n        if (!body.html && !body.text) {\n            console.log('⚠️ No email content provided')\n            return NextResponse.json(\n                { error: 'Either html or text content must be provided' },\n                { status: 400 }\n            )\n        }\n\n        // Extract sender information\n        const fromAddress = extractEmailAddress(body.from)\n        const fromDomain = extractDomain(body.from)\n        \n        console.log('📧 Sender details:', { from: body.from, address: fromAddress, domain: fromDomain })\n\n        // Verify sender domain ownership\n        console.log('🔍 Verifying domain ownership for:', fromDomain)\n        const userDomain = await db\n            .select()\n            .from(emailDomains)\n            .where(\n                and(\n                    eq(emailDomains.userId, userId),\n                    eq(emailDomains.domain, fromDomain),\n                    eq(emailDomains.status, 'verified')\n                )\n            )\n            .limit(1)\n\n        if (userDomain.length === 0) {\n            console.log('❌ User does not own the sender domain:', fromDomain)\n            return NextResponse.json(\n                { error: `You don't have permission to send from domain: ${fromDomain}` },\n                { status: 403 }\n            )\n        }\n\n        console.log('✅ Domain ownership verified')\n\n        // Convert recipients to arrays\n        const toAddresses = toArray(body.to)\n        const ccAddresses = toArray(body.cc)\n        const bccAddresses = toArray(body.bcc)\n        const replyToAddresses = toArray(body.reply_to)\n\n        // Validate email addresses\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        const allRecipients = [...toAddresses, ...ccAddresses, ...bccAddresses]\n        \n        for (const email of allRecipients) {\n            const address = extractEmailAddress(email)\n            if (!emailRegex.test(address)) {\n                console.log('⚠️ Invalid email format:', email)\n                return NextResponse.json(\n                    { error: `Invalid email format: ${email}` },\n                    { status: 400 }\n                )\n            }\n        }\n\n        // Check Autumn for email sending limits\n        console.log('🔍 Checking email sending limits with Autumn')\n        const { data: emailCheck, error: emailCheckError } = await autumn.check({\n            customer_id: userId,\n            feature_id: \"emails_sent\"\n        })\n\n        if (emailCheckError) {\n            console.error('❌ Autumn email check error:', emailCheckError)\n            return NextResponse.json(\n                { error: 'Failed to check email sending limits' },\n                { status: 500 }\n            )\n        }\n\n        console.log('🔍 Email check:', emailCheck)\n\n        if (!emailCheck.allowed) {\n            console.log('❌ Email sending limit reached for user:', userId)\n            return NextResponse.json(\n                { error: 'Email sending limit reached. Please upgrade your plan to send more emails.' },\n                { status: 429 }\n            )\n        }\n\n        // Create sent email record\n        const emailId = nanoid()\n        console.log('💾 Creating sent email record:', emailId)\n        \n        const sentEmailRecord = await db.insert(sentEmails).values({\n            id: emailId,\n            from: body.from,\n            fromAddress,\n            fromDomain,\n            to: JSON.stringify(toAddresses),\n            cc: ccAddresses.length > 0 ? JSON.stringify(ccAddresses) : null,\n            bcc: bccAddresses.length > 0 ? JSON.stringify(bccAddresses) : null,\n            replyTo: replyToAddresses.length > 0 ? JSON.stringify(replyToAddresses) : null,\n            subject: body.subject,\n            textBody: body.text,\n            htmlBody: body.html,\n            headers: body.headers ? JSON.stringify(body.headers) : null,\n            attachments: body.attachments ? JSON.stringify(body.attachments) : null,\n            status: SENT_EMAIL_STATUS.PENDING,\n            userId,\n            idempotencyKey,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        }).returning()\n\n        // Check if SES is configured\n        if (!sesClient) {\n            console.log('❌ AWS SES not configured')\n            \n            // Update email status to failed\n            await db\n                .update(sentEmails)\n                .set({\n                    status: SENT_EMAIL_STATUS.FAILED,\n                    failureReason: 'AWS SES not configured',\n                    updatedAt: new Date()\n                })\n                .where(eq(sentEmails.id, emailId))\n            \n            return NextResponse.json(\n                { error: 'Email service not configured. Please contact support.' },\n                { status: 500 }\n            )\n        }\n\n        try {\n            console.log('📤 Sending email via AWS SES')\n            \n            // Build SES email command\n            const sesCommand = new SendEmailCommand({\n                Source: body.from,\n                Destination: {\n                    ToAddresses: toAddresses.map(extractEmailAddress),\n                    CcAddresses: ccAddresses.map(extractEmailAddress),\n                    BccAddresses: bccAddresses.map(extractEmailAddress)\n                },\n                Message: {\n                    Subject: {\n                        Data: body.subject,\n                        Charset: 'UTF-8'\n                    },\n                    Body: {\n                        ...(body.text && {\n                            Text: {\n                                Data: body.text,\n                                Charset: 'UTF-8'\n                            }\n                        }),\n                        ...(body.html && {\n                            Html: {\n                                Data: body.html,\n                                Charset: 'UTF-8'\n                            }\n                        })\n                    }\n                },\n                ...(replyToAddresses.length > 0 && {\n                    ReplyToAddresses: replyToAddresses.map(extractEmailAddress)\n                })\n            })\n\n            const sesResponse = await sesClient.send(sesCommand)\n            const messageId = sesResponse.MessageId\n\n            console.log('✅ Email sent successfully via SES:', messageId)\n\n            // Update email record with success\n            await db\n                .update(sentEmails)\n                .set({\n                    status: SENT_EMAIL_STATUS.SENT,\n                    messageId,\n                    providerResponse: JSON.stringify(sesResponse),\n                    sentAt: new Date(),\n                    updatedAt: new Date()\n                })\n                .where(eq(sentEmails.id, emailId))\n\n            // Track email usage with Autumn (only if not unlimited)\n            if (!emailCheck.unlimited) {\n                console.log('📊 Tracking email usage with Autumn')\n                const { error: trackError } = await autumn.track({\n                    customer_id: userId,\n                    feature_id: \"emails_sent\",\n                    value: 1,\n                })\n\n                if (trackError) {\n                    console.error('❌ Failed to track email usage:', trackError)\n                    // Don't fail the request if tracking fails\n                }\n            }\n\n            console.log('✅ Email processing complete')\n            return NextResponse.json({ id: emailId }, { status: 200 })\n\n        } catch (sesError) {\n            console.error('❌ SES send error:', sesError)\n            \n            // Update email status to failed\n            await db\n                .update(sentEmails)\n                .set({\n                    status: SENT_EMAIL_STATUS.FAILED,\n                    failureReason: sesError instanceof Error ? sesError.message : 'Unknown SES error',\n                    providerResponse: JSON.stringify(sesError),\n                    updatedAt: new Date()\n                })\n                .where(eq(sentEmails.id, emailId))\n            \n            return NextResponse.json(\n                { error: 'Failed to send email. Please try again later.' },\n                { status: 500 }\n            )\n        }\n\n    } catch (error) {\n        console.error('💥 Unexpected error in POST /api/v2/emails:', error)\n        return NextResponse.json(\n            { error: 'Internal server error' },\n            { status: 500 }\n        )\n    }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackServerEdge","AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[0,1,2,4]}