{"version":3,"sources":["turbopack:///[project]/app/api/v1/endpoints/[id]/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { auth } from '@/lib/auth/auth'\nimport { headers } from 'next/headers'\nimport { db } from '@/lib/db'\nimport { endpoints, emailGroups, endpointDeliveries, emailAddresses, emailDomains } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\nimport { nanoid } from 'nanoid'\nimport type { UpdateEndpointData } from '@/features/endpoints/types'\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üìã GET /api/v1/endpoints/${params.id} - Fetching endpoint details`)\n    \n    const session = await auth.api.getSession({ headers: await headers() })\n    if (!session?.user?.id) {\n      console.warn(`‚ùå GET /api/v1/endpoints/${params.id} - Unauthorized request`)\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    // Fetch the endpoint\n    const endpoint = await db\n      .select()\n      .from(endpoints)\n      .where(and(\n        eq(endpoints.id, params.id),\n        eq(endpoints.userId, session.user.id)\n      ))\n      .limit(1)\n\n    if (!endpoint[0]) {\n      return NextResponse.json(\n        { error: 'Endpoint not found or access denied' },\n        { status: 404 }\n      )\n    }\n\n    // If it's an email group, fetch the group emails\n    let groupEmails: string[] = []\n    if (endpoint[0].type === 'email_group') {\n      const emailRecords = await db\n        .select({ emailAddress: emailGroups.emailAddress })\n        .from(emailGroups)\n        .where(eq(emailGroups.endpointId, params.id))\n\n      groupEmails = emailRecords.map(record => record.emailAddress)\n    }\n\n    // Fetch delivery statistics\n    const deliveryStats = await db\n      .select({\n        status: endpointDeliveries.status,\n        count: endpointDeliveries.id // We'll count these\n      })\n      .from(endpointDeliveries)\n      .where(eq(endpointDeliveries.endpointId, params.id))\n\n    // Calculate delivery statistics\n    const totalDeliveries = deliveryStats.length\n    const successfulDeliveries = deliveryStats.filter(d => d.status === 'success').length\n    const failedDeliveries = deliveryStats.filter(d => d.status === 'failed').length\n    const successRate = totalDeliveries > 0 ? Math.round((successfulDeliveries / totalDeliveries) * 100) : 0\n\n    const endpointWithDetails = {\n      ...endpoint[0],\n      groupEmails,\n      deliveryStats: {\n        total: totalDeliveries,\n        successful: successfulDeliveries,\n        failed: failedDeliveries,\n        successRate\n      }\n    }\n\n    console.log(`‚úÖ GET /api/v1/endpoints/${params.id} - Retrieved endpoint details`)\n\n    return NextResponse.json({\n      success: true,\n      endpoint: endpointWithDetails\n    })\n\n  } catch (error) {\n    console.error(`‚ùå GET /api/v1/endpoints/${params.id} - Error:`, error)\n    return NextResponse.json(\n      {\n        success: false,\n        error: 'Failed to fetch endpoint',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üìù PUT /api/v1/endpoints/${params.id} - Updating endpoint`)\n    \n    const session = await auth.api.getSession({ headers: await headers() })\n    if (!session?.user?.id) {\n      console.warn(`‚ùå PUT /api/v1/endpoints/${params.id} - Unauthorized request`)\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    const data: UpdateEndpointData = await request.json()\n\n    // Check if endpoint exists and belongs to user\n    const existingEndpoint = await db\n      .select()\n      .from(endpoints)\n      .where(and(\n        eq(endpoints.id, params.id),\n        eq(endpoints.userId, session.user.id)\n      ))\n      .limit(1)\n\n    if (!existingEndpoint[0]) {\n      return NextResponse.json(\n        { error: 'Endpoint not found or access denied' },\n        { status: 404 }\n      )\n    }\n\n    // Validate config if provided\n    if (data.config) {\n      const validationResult = validateEndpointConfig(existingEndpoint[0].type, data.config)\n      if (!validationResult.valid) {\n        return NextResponse.json(\n          { error: `Invalid configuration: ${validationResult.error}` },\n          { status: 400 }\n        )\n      }\n    }\n\n    // Prepare update data\n    const updateData: any = {\n      updatedAt: new Date()\n    }\n\n    if (data.name !== undefined) updateData.name = data.name\n    if (data.description !== undefined) updateData.description = data.description\n    if (data.isActive !== undefined) updateData.isActive = data.isActive\n    if (data.webhookFormat !== undefined && existingEndpoint[0].type === 'webhook') updateData.webhookFormat = data.webhookFormat\n    if (data.config !== undefined) updateData.config = JSON.stringify(data.config)\n\n    // Update the endpoint\n    const [updatedEndpoint] = await db\n      .update(endpoints)\n      .set(updateData)\n      .where(eq(endpoints.id, params.id))\n      .returning()\n\n    // If config was updated and it's an email group, update the group entries\n    if (data.config && existingEndpoint[0].type === 'email_group' && 'emails' in data.config) {\n      // Delete existing group entries\n      await db.delete(emailGroups).where(eq(emailGroups.endpointId, params.id))\n      \n      // Create new group entries\n      const groupEntries = data.config.emails.map(email => ({\n        id: nanoid(),\n        endpointId: params.id,\n        emailAddress: email,\n        createdAt: new Date()\n      }))\n      \n      if (groupEntries.length > 0) {\n        await db.insert(emailGroups).values(groupEntries)\n        console.log(`üìÆ PUT /api/v1/endpoints/${params.id} - Updated ${groupEntries.length} email group entries`)\n      }\n    }\n\n    console.log(`‚úÖ PUT /api/v1/endpoints/${params.id} - Successfully updated endpoint`)\n\n    return NextResponse.json({\n      success: true,\n      endpoint: updatedEndpoint\n    })\n\n  } catch (error) {\n    console.error(`‚ùå PUT /api/v1/endpoints/${params.id} - Error:`, error)\n    return NextResponse.json(\n      {\n        success: false,\n        error: 'Failed to update endpoint',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üóëÔ∏è DELETE /api/v1/endpoints/${params.id} - Deleting endpoint`)\n    \n    const session = await auth.api.getSession({ headers: await headers() })\n    if (!session?.user?.id) {\n      console.warn(`‚ùå DELETE /api/v1/endpoints/${params.id} - Unauthorized request`)\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })\n    }\n\n    // Check if endpoint exists and belongs to user\n    const existingEndpoint = await db\n      .select()\n      .from(endpoints)\n      .where(and(\n        eq(endpoints.id, params.id),\n        eq(endpoints.userId, session.user.id)\n      ))\n      .limit(1)\n\n    if (!existingEndpoint[0]) {\n      return NextResponse.json(\n        { error: 'Endpoint not found or access denied' },\n        { status: 404 }\n      )\n    }\n\n    // Update email addresses to \"store only\" (clear endpointId) before deleting the endpoint\n    const updatedEmailAddresses = await db\n      .update(emailAddresses)\n      .set({ \n        endpointId: null,\n        updatedAt: new Date()\n      })\n      .where(eq(emailAddresses.endpointId, params.id))\n      .returning({ address: emailAddresses.address })\n\n    if (updatedEmailAddresses.length > 0) {\n      console.log(`üìß DELETE /api/v1/endpoints/${params.id} - Updated ${updatedEmailAddresses.length} email addresses to store-only mode:`, \n        updatedEmailAddresses.map(e => e.address).join(', '))\n    }\n\n    // Update domain catch-all configurations to remove this endpoint\n    await db\n      .update(emailDomains)\n      .set({ \n        catchAllEndpointId: null,\n        updatedAt: new Date()\n      })\n      .where(eq(emailDomains.catchAllEndpointId, params.id))\n\n    // Delete email group entries if it's an email group\n    if (existingEndpoint[0].type === 'email_group') {\n      await db.delete(emailGroups).where(eq(emailGroups.endpointId, params.id))\n      console.log(`üìÆ DELETE /api/v1/endpoints/${params.id} - Deleted email group entries`)\n    }\n\n    // Delete delivery history\n    await db.delete(endpointDeliveries).where(eq(endpointDeliveries.endpointId, params.id))\n    console.log(`üìä DELETE /api/v1/endpoints/${params.id} - Deleted delivery history`)\n\n    // Delete the endpoint\n    await db.delete(endpoints).where(eq(endpoints.id, params.id))\n\n    console.log(`‚úÖ DELETE /api/v1/endpoints/${params.id} - Successfully deleted endpoint`)\n\n    return NextResponse.json({\n      success: true,\n      message: updatedEmailAddresses.length > 0 \n        ? `Endpoint deleted successfully. ${updatedEmailAddresses.length} email address(es) switched to store-only mode.`\n        : 'Endpoint deleted successfully',\n      emailAddressesUpdated: updatedEmailAddresses.length\n    })\n\n  } catch (error) {\n    console.error(`‚ùå DELETE /api/v1/endpoints/${params.id} - Error:`, error)\n    return NextResponse.json(\n      {\n        success: false,\n        error: 'Failed to delete endpoint',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\n/**\n * Validate endpoint configuration based on type\n */\nfunction validateEndpointConfig(type: string, config: any): { valid: boolean; error?: string } {\n  try {\n    switch (type) {\n      case 'webhook':\n        if (!config.url) {\n          return { valid: false, error: 'Webhook URL is required' }\n        }\n        if (typeof config.url !== 'string') {\n          return { valid: false, error: 'Webhook URL must be a string' }\n        }\n        // Basic URL validation\n        try {\n          new URL(config.url)\n        } catch {\n          return { valid: false, error: 'Invalid webhook URL format' }\n        }\n        break\n\n      case 'email':\n        if (!config.forwardTo) {\n          return { valid: false, error: 'Forward-to email address is required' }\n        }\n        if (typeof config.forwardTo !== 'string') {\n          return { valid: false, error: 'Forward-to email must be a string' }\n        }\n        // Basic email validation\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (!emailRegex.test(config.forwardTo)) {\n          return { valid: false, error: 'Invalid forward-to email address format' }\n        }\n        break\n\n      case 'email_group':\n        if (!config.emails || !Array.isArray(config.emails)) {\n          return { valid: false, error: 'Email group must have an emails array' }\n        }\n        if (config.emails.length === 0) {\n          return { valid: false, error: 'Email group must have at least one email address' }\n        }\n        // Validate each email in the group\n        const emailRegexGroup = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        for (const email of config.emails) {\n          if (typeof email !== 'string' || !emailRegexGroup.test(email)) {\n            return { valid: false, error: `Invalid email address in group: ${email}` }\n          }\n        }\n        break\n\n      default:\n        return { valid: false, error: 'Unknown endpoint type' }\n    }\n\n    return { valid: true }\n  } catch (error) {\n    return { valid: false, error: 'Configuration validation failed' }\n  }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[1]}