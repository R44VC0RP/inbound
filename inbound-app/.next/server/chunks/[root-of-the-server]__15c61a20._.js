module.exports={929549:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},983943:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},86103:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},945935:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},348629:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("@opentelemetry/api",()=>require("@opentelemetry/api"))},76569:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("node:events",()=>require("node:events"))},804713:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("util",()=>require("util"))},87485:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("child_process",()=>require("child_process"))},420467:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("events",()=>require("events"))},936121:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("node:util",()=>require("node:util"))},681635:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("node:http",()=>require("node:http"))},866098:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("node:https",()=>require("node:https"))},580767:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("node:buffer",()=>require("node:buffer"))},329295:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("crypto",()=>require("crypto"))},62445:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("http",()=>require("http"))},348388:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("https",()=>require("https"))},591032:function(e){var{g:s,__dirname:a,m:i,e:r}=e;i.exports=e.x("node:crypto",()=>require("node:crypto"))},909834:e=>{"use strict";var{g:s,__dirname:a}=e;e.s({DELIVERY_STATUS:()=>r.DELIVERY_STATUS,DELIVERY_TYPES:()=>r.DELIVERY_TYPES,DOMAIN_STATUS:()=>r.DOMAIN_STATUS,EMAIL_STATUS:()=>r.EMAIL_STATUS,ENDPOINT_TYPES:()=>r.ENDPOINT_TYPES,PROVIDER_CONFIDENCE:()=>r.PROVIDER_CONFIDENCE,SENT_EMAIL_STATUS:()=>r.SENT_EMAIL_STATUS,SES_VERIFICATION_STATUS:()=>r.SES_VERIFICATION_STATUS,VIP_PAYMENT_STATUS:()=>r.VIP_PAYMENT_STATUS,WEBHOOK_FORMATS:()=>r.WEBHOOK_FORMATS,WEBHOOK_STATUS:()=>r.WEBHOOK_STATUS,account:()=>i.account,apikey:()=>i.apikey,blockedEmails:()=>r.blockedEmails,domainDnsRecords:()=>r.domainDnsRecords,emailAddresses:()=>r.emailAddresses,emailDomains:()=>r.emailDomains,emailGroups:()=>r.emailGroups,endpointDeliveries:()=>r.endpointDeliveries,endpoints:()=>r.endpoints,parsedEmails:()=>r.parsedEmails,receivedEmails:()=>r.receivedEmails,sentEmails:()=>r.sentEmails,sesEvents:()=>r.sesEvents,session:()=>i.session,structuredEmails:()=>r.structuredEmails,subscriptions:()=>r.subscriptions,user:()=>i.user,userAccounts:()=>r.userAccounts,userOnboarding:()=>r.userOnboarding,verification:()=>i.verification,vipAllowedSenders:()=>r.vipAllowedSenders,vipConfigs:()=>r.vipConfigs,vipEmailAttempts:()=>r.vipEmailAttempts,vipPaymentSessions:()=>r.vipPaymentSessions,webhookDeliveries:()=>r.webhookDeliveries,webhooks:()=>r.webhooks});var i=e.i(594120),r=e.i(55379)},436754:e=>{"use strict";var{g:s,__dirname:a}=e;e.s({DELIVERY_STATUS:()=>i.DELIVERY_STATUS,DELIVERY_TYPES:()=>i.DELIVERY_TYPES,DOMAIN_STATUS:()=>i.DOMAIN_STATUS,EMAIL_STATUS:()=>i.EMAIL_STATUS,ENDPOINT_TYPES:()=>i.ENDPOINT_TYPES,PROVIDER_CONFIDENCE:()=>i.PROVIDER_CONFIDENCE,SENT_EMAIL_STATUS:()=>i.SENT_EMAIL_STATUS,SES_VERIFICATION_STATUS:()=>i.SES_VERIFICATION_STATUS,VIP_PAYMENT_STATUS:()=>i.VIP_PAYMENT_STATUS,WEBHOOK_FORMATS:()=>i.WEBHOOK_FORMATS,WEBHOOK_STATUS:()=>i.WEBHOOK_STATUS,account:()=>i.account,apikey:()=>i.apikey,blockedEmails:()=>i.blockedEmails,domainDnsRecords:()=>i.domainDnsRecords,emailAddresses:()=>i.emailAddresses,emailDomains:()=>i.emailDomains,emailGroups:()=>i.emailGroups,endpointDeliveries:()=>i.endpointDeliveries,endpoints:()=>i.endpoints,parsedEmails:()=>i.parsedEmails,receivedEmails:()=>i.receivedEmails,sentEmails:()=>i.sentEmails,sesEvents:()=>i.sesEvents,session:()=>i.session,structuredEmails:()=>i.structuredEmails,subscriptions:()=>i.subscriptions,user:()=>i.user,userAccounts:()=>i.userAccounts,userOnboarding:()=>i.userOnboarding,verification:()=>i.verification,vipAllowedSenders:()=>i.vipAllowedSenders,vipConfigs:()=>i.vipConfigs,vipEmailAttempts:()=>i.vipEmailAttempts,vipPaymentSessions:()=>i.vipPaymentSessions,webhookDeliveries:()=>i.webhookDeliveries,webhooks:()=>i.webhooks}),e.i(468686);var i=e.i(909834)},496669:e=>{"use strict";var{g:s,__dirname:a}=e;e.s({createApiKeyMiddleware:()=>n,validateApiKey:()=>r});var i=e.i(402168);async function r(e){try{let s,a=e.headers.get("Authorization");if(!a)return{valid:!1,error:"Missing Authorization header"};if(s=a.startsWith("Bearer ")?a.substring(7):a,console.log("API KEY: "+s),!s)return{valid:!1,error:"Invalid Authorization header format"};let{valid:r,error:n,key:t}=await i.auth.api.verifyApiKey({body:{key:s}});if(console.log("VALID: "+r),console.log("ERROR: "+n),console.log("KEY: "+t?.userId),!r||n||!t)return{valid:!1,error:n?.message||"Invalid API key"};if(!t.enabled)return{valid:!1,error:"API key is disabled"};if(t.expiresAt&&new Date(t.expiresAt)<new Date)return{valid:!1,error:"API key has expired"};return{valid:!0,user:{id:t.userId,email:t.userId,name:null}}}catch(e){return console.error("API key validation error:",e),{valid:!1,error:"Internal server error during API key validation"}}}function n(){return async e=>{let s=await r(e);return s.valid?{user:s.user}:{error:s.error,status:401}}}},645907:function(e){var{g:s,__dirname:a,m:i,e:r}=e},66852:e=>{"use strict";var{g:s,__dirname:a}=e;e.s({DELETE:()=>u,GET:()=>d,PUT:()=>c});var i=e.i(125427),r=e.i(496669),n=e.i(557440);e.i(468686);var t=e.i(55379),o=e.i(176825),l=e.i(807204);async function d(e,{params:s}){try{console.log(`üìã GET /api/v1.1/domains/${s.id}/catch-all - Fetching catch-all configuration`);let a=await (0,r.validateApiKey)(e);if("error"in a)return i.NextResponse.json({error:a.error},{status:401});let l=a.user?.id;if(!l)return i.NextResponse.json({error:"User not found"},{status:401});let d=await n.db.select({id:t.emailDomains.id,domain:t.emailDomains.domain,status:t.emailDomains.status,catchAllEndpointId:t.emailDomains.catchAllEndpointId,endpointName:t.endpoints.name,endpointType:t.endpoints.type,endpointIsActive:t.endpoints.isActive,endpointConfig:t.endpoints.config}).from(t.emailDomains).leftJoin(t.endpoints,(0,o.eq)(t.emailDomains.catchAllEndpointId,t.endpoints.id)).where((0,o.and)((0,o.eq)(t.emailDomains.id,s.id),(0,o.eq)(t.emailDomains.userId,l))).limit(1);if(!d[0])return i.NextResponse.json({success:!1,error:"Domain not found"},{status:404});let c=d[0],u={domainId:c.id,domainName:c.domain,hasCatchAll:!!c.catchAllEndpointId,endpoint:c.catchAllEndpointId?{id:c.catchAllEndpointId,name:c.endpointName,type:c.endpointType,isActive:c.endpointIsActive,config:c.endpointConfig?JSON.parse(c.endpointConfig):null}:null};return console.log(`‚úÖ GET /api/v1.1/domains/${s.id}/catch-all - Retrieved catch-all configuration`),i.NextResponse.json({success:!0,data:u})}catch(e){return console.error(`‚ùå GET /api/v1.1/domains/${s.id}/catch-all - Error:`,e),i.NextResponse.json({success:!1,error:"Failed to fetch catch-all configuration",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function c(e,{params:s}){try{console.log(`üìù PUT /api/v1.1/domains/${s.id}/catch-all - Updating catch-all configuration`);let a=await (0,r.validateApiKey)(e);if("error"in a)return i.NextResponse.json({error:a.error},{status:401});let d=a.user?.id;if(!d)return i.NextResponse.json({error:"User not found"},{status:401});let c=await e.json(),u=await n.db.select().from(t.emailDomains).where((0,o.and)((0,o.eq)(t.emailDomains.id,s.id),(0,o.eq)(t.emailDomains.userId,d))).limit(1);if(!u[0])return i.NextResponse.json({success:!1,error:"Domain not found"},{status:404});let m=null;if(c.endpointId){let e=await n.db.select().from(t.endpoints).where((0,o.and)((0,o.eq)(t.endpoints.id,c.endpointId),(0,o.eq)(t.endpoints.userId,d))).limit(1);if(!e[0])return i.NextResponse.json({success:!1,error:"Endpoint not found or access denied"},{status:404});if(!e[0].isActive)return i.NextResponse.json({success:!1,error:"Cannot set inactive endpoint as catch-all"},{status:400});m=c.endpointId}if(m){let e=null,a=null;try{let i=new l.AWSSESReceiptRuleManager,r=process.env.AWS_REGION||"us-east-2",n=process.env.LAMBDA_FUNCTION_NAME||"email-processor",t=process.env.S3_BUCKET_NAME,o=process.env.AWS_ACCOUNT_ID;if(t&&o){console.log(`üîß PUT /api/v1.1/domains/${s.id}/catch-all - Configuring AWS SES catch-all for ${u[0].domain}`);let d=l.AWSSESReceiptRuleManager.getLambdaFunctionArn(n,o,r),c=await i.configureCatchAllDomain({domain:u[0].domain,webhookId:m,lambdaFunctionArn:d,s3BucketName:t});"created"===c.status||"updated"===c.status?(e=c.ruleName,console.log(`‚úÖ PUT /api/v1.1/domains/${s.id}/catch-all - AWS SES catch-all configured successfully`)):(a=`SES catch-all configuration failed: ${c.error}`,console.warn(`‚ö†Ô∏è PUT /api/v1.1/domains/${s.id}/catch-all - ${a}`))}else a="AWS configuration incomplete. Missing S3_BUCKET_NAME or AWS_ACCOUNT_ID",console.warn(`‚ö†Ô∏è PUT /api/v1.1/domains/${s.id}/catch-all - ${a}`)}catch(e){a=`SES catch-all configuration error: ${e instanceof Error?e.message:"Unknown error"}`,console.error(`‚ùå PUT /api/v1.1/domains/${s.id}/catch-all - AWS SES configuration failed:`,e)}let[r]=await n.db.update(t.emailDomains).set({isCatchAllEnabled:!0,catchAllEndpointId:m,catchAllReceiptRuleName:e,updatedAt:new Date}).where((0,o.eq)(t.emailDomains.id,s.id)).returning();return console.log(`‚úÖ PUT /api/v1.1/domains/${s.id}/catch-all - Successfully enabled catch-all configuration`),i.NextResponse.json({success:!0,data:{domainId:r.id,domainName:r.domain,catchAllEndpointId:r.catchAllEndpointId,hasCatchAll:!0,isCatchAllEnabled:!0,receiptRuleName:e,...a&&{warning:a}},message:e?"Catch-all endpoint configured and AWS SES configured successfully":"Catch-all endpoint configured successfully (AWS SES configuration pending)"})}{try{let e=new l.AWSSESReceiptRuleManager;if(await e.removeCatchAllDomain(u[0].domain)){let a=await n.db.select({address:t.emailAddresses.address}).from(t.emailAddresses).where((0,o.and)((0,o.eq)(t.emailAddresses.domainId,s.id),(0,o.eq)(t.emailAddresses.isActive,!0)));if(a.length>0){let i=process.env.AWS_REGION||"us-east-2",r=process.env.LAMBDA_FUNCTION_NAME||"email-processor",d=process.env.S3_BUCKET_NAME,c=process.env.AWS_ACCOUNT_ID;if(d&&c){let m=l.AWSSESReceiptRuleManager.getLambdaFunctionArn(r,c,i),p=a.map(e=>e.address),v=await e.restoreIndividualEmailRules(u[0].domain,p,m,d);"created"===v.status?(console.log(`‚úÖ PUT /api/v1.1/domains/${s.id}/catch-all - Restored individual email rules for ${a.length} addresses`),await n.db.update(t.emailAddresses).set({isReceiptRuleConfigured:!0,receiptRuleName:v.ruleName,updatedAt:new Date}).where((0,o.and)((0,o.eq)(t.emailAddresses.domainId,s.id),(0,o.eq)(t.emailAddresses.isActive,!0)))):console.warn(`‚ö†Ô∏è PUT /api/v1.1/domains/${s.id}/catch-all - Failed to restore individual email rules: ${v.error}`)}}console.log(`‚úÖ PUT /api/v1.1/domains/${s.id}/catch-all - AWS SES catch-all removed successfully`)}else console.warn(`‚ö†Ô∏è PUT /api/v1.1/domains/${s.id}/catch-all - Failed to remove AWS SES catch-all rule`)}catch(e){console.error(`‚ùå PUT /api/v1.1/domains/${s.id}/catch-all - AWS SES removal failed:`,e)}let[e]=await n.db.update(t.emailDomains).set({isCatchAllEnabled:!1,catchAllEndpointId:null,catchAllReceiptRuleName:null,updatedAt:new Date}).where((0,o.eq)(t.emailDomains.id,s.id)).returning();return console.log(`‚úÖ PUT /api/v1.1/domains/${s.id}/catch-all - Successfully disabled catch-all configuration`),i.NextResponse.json({success:!0,data:{domainId:e.id,domainName:e.domain,catchAllEndpointId:null,hasCatchAll:!1,isCatchAllEnabled:!1},message:"Catch-all endpoint removed and AWS SES configured successfully"})}}catch(e){return console.error(`‚ùå PUT /api/v1.1/domains/${s.id}/catch-all - Error:`,e),i.NextResponse.json({success:!1,error:"Failed to update catch-all configuration",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function u(e,{params:s}){try{console.log(`üóëÔ∏è DELETE /api/v1.1/domains/${s.id}/catch-all - Removing catch-all configuration`);let a=await (0,r.validateApiKey)(e);if("error"in a)return i.NextResponse.json({error:a.error},{status:401});let d=a.user?.id;if(!d)return i.NextResponse.json({error:"User not found"},{status:401});let c=await n.db.select().from(t.emailDomains).where((0,o.and)((0,o.eq)(t.emailDomains.id,s.id),(0,o.eq)(t.emailDomains.userId,d))).limit(1);if(!c[0])return i.NextResponse.json({success:!1,error:"Domain not found"},{status:404});try{let e=new l.AWSSESReceiptRuleManager;if(await e.removeCatchAllDomain(c[0].domain)){let a=await n.db.select({address:t.emailAddresses.address}).from(t.emailAddresses).where((0,o.and)((0,o.eq)(t.emailAddresses.domainId,s.id),(0,o.eq)(t.emailAddresses.isActive,!0)));if(a.length>0){let i=process.env.AWS_REGION||"us-east-2",r=process.env.LAMBDA_FUNCTION_NAME||"email-processor",d=process.env.S3_BUCKET_NAME,u=process.env.AWS_ACCOUNT_ID;if(d&&u){let m=l.AWSSESReceiptRuleManager.getLambdaFunctionArn(r,u,i),p=a.map(e=>e.address),v=await e.restoreIndividualEmailRules(c[0].domain,p,m,d);"created"===v.status?(console.log(`‚úÖ DELETE /api/v1.1/domains/${s.id}/catch-all - Restored individual email rules for ${a.length} addresses`),await n.db.update(t.emailAddresses).set({isReceiptRuleConfigured:!0,receiptRuleName:v.ruleName,updatedAt:new Date}).where((0,o.and)((0,o.eq)(t.emailAddresses.domainId,s.id),(0,o.eq)(t.emailAddresses.isActive,!0)))):console.warn(`‚ö†Ô∏è DELETE /api/v1.1/domains/${s.id}/catch-all - Failed to restore individual email rules: ${v.error}`)}}console.log(`‚úÖ DELETE /api/v1.1/domains/${s.id}/catch-all - AWS SES catch-all removed successfully`)}else console.warn(`‚ö†Ô∏è DELETE /api/v1.1/domains/${s.id}/catch-all - Failed to remove AWS SES catch-all rule`)}catch(e){console.error(`‚ùå DELETE /api/v1.1/domains/${s.id}/catch-all - AWS SES removal failed:`,e)}return await n.db.update(t.emailDomains).set({isCatchAllEnabled:!1,catchAllEndpointId:null,catchAllReceiptRuleName:null,updatedAt:new Date}).where((0,o.eq)(t.emailDomains.id,s.id)),console.log(`‚úÖ DELETE /api/v1.1/domains/${s.id}/catch-all - Successfully removed catch-all configuration`),i.NextResponse.json({success:!0,message:"Catch-all configuration removed and AWS SES configured successfully"})}catch(e){return console.error(`‚ùå DELETE /api/v1.1/domains/${s.id}/catch-all - Error:`,e),i.NextResponse.json({success:!1,error:"Failed to remove catch-all configuration",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}},404734:e=>{"use strict";var{g:s,__dirname:a}=e;{e.s({patchFetch:()=>o,routeModule:()=>s,serverHooks:()=>d,workAsyncStorage:()=>a,workUnitAsyncStorage:()=>l});var i=e.i(854885),r=e.i(814689),n=e.i(25402),t=e.i(66852);let s=new i.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/v1.1/domains/[id]/catch-all/route",pathname:"/api/v1.1/domains/[id]/catch-all",filename:"route",bundlePath:""},resolvedPagePath:"[project]/app/api/v1.1/domains/[id]/catch-all/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:a,workUnitAsyncStorage:l,serverHooks:d}=s;function o(){return(0,n.patchFetch)({workAsyncStorage:a,workUnitAsyncStorage:l})}}},993477:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/[root-of-the-server]__d245ee70._.js","server/chunks/node_modules_10ae7a2d._.js"].map(s=>e.l(s))).then(()=>s(611487)))},73518:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/[externals]_url_a7f1d978._.js","server/chunks/9f50b_@smithy_credential-provider-imds_dist-es_d5e4d7ca._.js"].map(s=>e.l(s))).then(()=>s(653223)))},855094:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/[externals]_fs_promises_1c68bc94._.js","server/chunks/9f50b_@aws-sdk_credential-provider-http_89f62eca._.js"].map(s=>e.l(s))).then(()=>s(515630)))},520835:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-web-identity_cf5e0a2c._.js"].map(s=>e.l(s))).then(()=>s(399432)))},404886:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-process_dist-es_f8837f08._.js"].map(s=>e.l(s))).then(()=>s(31086)))},800893:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/9f50b_38e62a4e._.js"].map(s=>e.l(s))).then(()=>s(387894)))},683391:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-sso_efcb9fd7._.js"].map(s=>e.l(s))).then(()=>s(695705)))},586469:e=>{var{g:s,__dirname:a}=e;e.v(s=>Promise.all(["server/chunks/[externals]_url_a7f1d978._.js","server/chunks/87a6c_@smithy_credential-provider-imds_dist-es_ee44b021._.js"].map(s=>e.l(s))).then(()=>s(488366)))}};

//# sourceMappingURL=%5Broot-of-the-server%5D__15c61a20._.js.map