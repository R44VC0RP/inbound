module.exports={109175:function(e){var{g:n,__dirname:i,m:t,e:a}=e;t.exports=e.x("node:stream",()=>require("node:stream"))},117090:e=>{"use strict";var{g:n,__dirname:i,a:t}=e;t(async(n,i)=>{try{let n=await e.y("prettier/plugins/html");e.n(n),i()}catch(e){i(e)}},!0)},820927:e=>{"use strict";var{g:n,__dirname:i,a:t}=e;t(async(n,i)=>{try{let n=await e.y("prettier/standalone");e.n(n),i()}catch(e){i(e)}},!0)},906273:e=>{"use strict";var{g:n,__dirname:i}=e;e.s({areAllDnsRecordsVerified:()=>m,createDomainVerification:()=>s,createEmailAddress:()=>f,deleteDomainFromDatabase:()=>D,disableDomainCatchAll:()=>w,enableDomainCatchAll:()=>y,getDomainOwnerByDomain:()=>E,getDomainWithCatchAll:()=>v,getDomainWithRecords:()=>d,getDomainWithRecordsAndEmails:()=>p,getEmailAddressesForDomain:()=>h,isDomainCatchAllEnabled:()=>b,markDomainAsVerified:()=>x,updateDnsRecordVerification:()=>c,updateDomainSesVerification:()=>l,updateDomainStatus:()=>u,updateEmailAddressReceiptRule:()=>g});var t=e.i(557440);e.i(468686);var a=e.i(55379),o=e.i(176825),r=e.i(318812);async function s(e,n,i){let o={id:`indm_${(0,r.nanoid)()}`,domain:e,userId:n,status:"pending",canReceiveEmails:i.canReceiveEmails,hasMxRecords:i.hasMxRecords,domainProvider:i.provider?.name,providerConfidence:i.provider?.confidence,lastDnsCheck:new Date,updatedAt:new Date},[s]=await t.db.insert(a.emailDomains).values(o).returning();return s}async function l(e,n,i,s){let[l]=await t.db.update(a.emailDomains).set({verificationToken:n,status:"Success"===i?"verified":"pending",lastSesCheck:new Date,updatedAt:new Date}).where((0,o.eq)(a.emailDomains.id,e)).returning();for(let n of s){let i={id:`dns_${(0,r.nanoid)()}`,domainId:e,recordType:n.type,name:n.name,value:n.value,isRequired:!0,isVerified:!1};await t.db.insert(a.domainDnsRecords).values(i).onConflictDoNothing()}return l}async function d(e,n){let i=await t.db.select().from(a.emailDomains).where((0,o.and)((0,o.eq)(a.emailDomains.domain,e),(0,o.eq)(a.emailDomains.userId,n))).limit(1);if(!i[0])return null;let r=await t.db.select().from(a.domainDnsRecords).where((0,o.eq)(a.domainDnsRecords.domainId,i[0].id));return{...i[0],dnsRecords:r}}async function c(e,n,i,r){await t.db.update(a.domainDnsRecords).set({isVerified:r,lastChecked:new Date}).where((0,o.and)((0,o.eq)(a.domainDnsRecords.domainId,e),(0,o.eq)(a.domainDnsRecords.recordType,n),(0,o.eq)(a.domainDnsRecords.name,i)))}async function m(e){let n=await t.db.select().from(a.domainDnsRecords).where((0,o.and)((0,o.eq)(a.domainDnsRecords.domainId,e),(0,o.eq)(a.domainDnsRecords.isRequired,!0)));return n.length>0&&n.every(e=>e.isVerified)}async function u(e,n){let[i]=await t.db.update(a.emailDomains).set({status:n,updatedAt:new Date}).where((0,o.eq)(a.emailDomains.id,e)).returning();return i}async function f(e,n,i){let o={id:`email_${(0,r.nanoid)()}`,address:e,domainId:n,userId:i,isActive:!0,isReceiptRuleConfigured:!1,updatedAt:new Date},[s]=await t.db.insert(a.emailAddresses).values(o).returning();return s}async function h(e){return t.db.select().from(a.emailAddresses).where((0,o.eq)(a.emailAddresses.domainId,e))}async function g(e,n,i){let[r]=await t.db.update(a.emailAddresses).set({isReceiptRuleConfigured:n,receiptRuleName:i,updatedAt:new Date}).where((0,o.eq)(a.emailAddresses.id,e)).returning();return r}async function p(e,n){let i=await t.db.select().from(a.emailDomains).where((0,o.and)((0,o.eq)(a.emailDomains.domain,e),(0,o.eq)(a.emailDomains.userId,n))).limit(1);if(!i[0])return null;let r=await t.db.select().from(a.domainDnsRecords).where((0,o.eq)(a.domainDnsRecords.domainId,i[0].id)),s=await t.db.select().from(a.emailAddresses).where((0,o.eq)(a.emailAddresses.domainId,i[0].id));return{...i[0],dnsRecords:r,emailAddresses:s}}async function D(e,n){try{let i=await t.db.select().from(a.emailDomains).where((0,o.and)((0,o.eq)(a.emailDomains.id,e),(0,o.eq)(a.emailDomains.userId,n))).limit(1);if(!i[0])return{success:!1,error:"Domain not found or access denied"};return console.log(`🗑️ Deleting domain from database: ${i[0].domain}`),await t.db.delete(a.emailAddresses).where((0,o.eq)(a.emailAddresses.domainId,e)),await t.db.delete(a.domainDnsRecords).where((0,o.eq)(a.domainDnsRecords.domainId,e)),await t.db.delete(a.emailDomains).where((0,o.eq)(a.emailDomains.id,e)),console.log(`✅ Successfully deleted domain from database: ${i[0].domain}`),{success:!0}}catch(e){return console.error("Database domain deletion error:",e),{success:!1,error:e instanceof Error?e.message:"Failed to delete domain from database"}}}async function y(e,n,i){let[r]=await t.db.update(a.emailDomains).set({isCatchAllEnabled:!0,catchAllWebhookId:n,catchAllReceiptRuleName:i,updatedAt:new Date}).where((0,o.eq)(a.emailDomains.id,e)).returning();if(!r)throw Error("Domain not found");return r}async function w(e){let[n]=await t.db.update(a.emailDomains).set({isCatchAllEnabled:!1,catchAllWebhookId:null,catchAllReceiptRuleName:null,updatedAt:new Date}).where((0,o.eq)(a.emailDomains.id,e)).returning();if(!n)throw Error("Domain not found");return n}async function v(e,n){let[i]=await t.db.select().from(a.emailDomains).where((0,o.and)((0,o.eq)(a.emailDomains.domain,e),(0,o.eq)(a.emailDomains.userId,n))).limit(1);return i||null}async function b(e){let[n]=await t.db.select({isCatchAllEnabled:a.emailDomains.isCatchAllEnabled}).from(a.emailDomains).where((0,o.eq)(a.emailDomains.id,e)).limit(1);return n?.isCatchAllEnabled||!1}async function E(n){try{let{user:i}=await e.r(278680)(e.i),r=await t.db.select({userId:a.emailDomains.userId,userEmail:i.email,userName:i.name}).from(a.emailDomains).innerJoin(i,(0,o.eq)(a.emailDomains.userId,i.id)).where((0,o.eq)(a.emailDomains.domain,n)).limit(1);if(!r[0])return console.log(`❌ getDomainOwnerByDomain - No owner found for domain: ${n}`),null;return console.log(`✅ getDomainOwnerByDomain - Found owner for domain ${n}: ${r[0].userEmail}`),r[0]}catch(e){return console.error("❌ getDomainOwnerByDomain - Error looking up domain owner:",e),null}}async function x(e){try{let[n]=await t.db.update(a.emailDomains).set({status:"verified",lastSesCheck:new Date,updatedAt:new Date}).where((0,o.eq)(a.emailDomains.domain,e)).returning();return n&&console.log(`✅ markDomainAsVerified - Domain ${e} marked as verified`),n||null}catch(e){return console.error("❌ markDomainAsVerified - Error updating domain status:",e),null}}},259495:function(e){"use strict";var{g:n,__dirname:i,m:t,e:a}=e,o=function(e){var n,i,t;return!!(n=e)&&"object"==typeof n&&(i=e,"[object RegExp]"!==(t=Object.prototype.toString.call(i))&&"[object Date]"!==t&&i.$$typeof!==r)},r="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function s(e,n){return!1!==n.clone&&n.isMergeableObject(e)?m(Array.isArray(e)?[]:{},e,n):e}function l(e,n,i){return e.concat(n).map(function(e){return s(e,i)})}function d(e){return Object.keys(e).concat(Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter(function(n){return Object.propertyIsEnumerable.call(e,n)}):[])}function c(e,n){try{return n in e}catch(e){return!1}}function m(e,n,i){(i=i||{}).arrayMerge=i.arrayMerge||l,i.isMergeableObject=i.isMergeableObject||o,i.cloneUnlessOtherwiseSpecified=s;var t,a,r=Array.isArray(n);return r!==Array.isArray(e)?s(n,i):r?i.arrayMerge(e,n,i):(a={},(t=i).isMergeableObject(e)&&d(e).forEach(function(n){a[n]=s(e[n],t)}),d(n).forEach(function(i){c(e,i)&&!(Object.hasOwnProperty.call(e,i)&&Object.propertyIsEnumerable.call(e,i))||(c(e,i)&&t.isMergeableObject(n[i])?a[i]=(function(e,n){if(!n.customMerge)return m;var i=n.customMerge(e);return"function"==typeof i?i:m})(i,t)(e[i],n[i],t):a[i]=s(n[i],t))}),a)}m.all=function(e,n){if(!Array.isArray(e))throw Error("first argument should be an array");return e.reduce(function(e,i){return m(e,i,n)},{})},t.exports=m},692339:function(e){var{g:n,__dirname:i,m:t,e:a}=e;"use strict";t.exports=e.r(68043).vendored["react-rsc"].ReactJsxRuntime},690688:function(e){var{g:n,__dirname:i,m:t,e:a}=e},895011:e=>{"use strict";var{g:n,__dirname:i}=e;{e.s({DomainVerifiedEmail:()=>n,default:()=>i});var t=e.i(692339),a=e.i(843088),o=e.i(319148),r=e.i(396931),s=e.i(433219),l=e.i(50154),d=e.i(922041),c=e.i(47063),m=e.i(877720),u=e.i(669510),f=e.i(486862);let n=({userFirstname:e="User",domain:n="example.com",verifiedAt:i=new Date().toLocaleDateString()})=>(0,t.jsxs)(l.Html,{children:[(0,t.jsx)(s.Head,{}),(0,t.jsxs)(m.Preview,{children:["🎉 ",n," is verified and ready - inbound"]}),(0,t.jsx)(a.Body,{style:h,children:(0,t.jsxs)(r.Container,{style:g,children:[(0,t.jsx)(u.Section,{style:p,children:(0,t.jsx)("div",{style:D,children:(0,t.jsx)(d.Img,{src:"https://inbound.new/inbound-wordmark.png",alt:"inbound",width:"200",height:"60",style:y})})}),(0,t.jsxs)(f.Text,{style:x,children:["Hi ",e,","]}),(0,t.jsxs)(f.Text,{style:x,children:["🎉 Your domain ",(0,t.jsx)("strong",{children:n})," is now verified and ready to receive emails through inbound."]}),(0,t.jsx)(u.Section,{style:w,children:(0,t.jsxs)(f.Text,{style:v,children:["✅ Verified on ",i,(0,t.jsx)("br",{}),"✅ Email receiving active",(0,t.jsx)("br",{}),"✅ AWS SES configured"]})}),(0,t.jsx)(u.Section,{style:b,children:(0,t.jsx)(o.Button,{style:A,href:"https://inbound.new/dashboard",children:"open dashboard"})}),(0,t.jsxs)(f.Text,{style:x,children:["reply to this email if you have any questions, we read every email",(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),"- ryan"]}),(0,t.jsx)(u.Section,{style:E,children:(0,t.jsxs)(f.Text,{style:S,children:[(0,t.jsx)(c.Link,{href:"https://inbound.new/docs",style:R,children:"docs"})," • ",(0,t.jsx)(c.Link,{href:"https://inbound.new/support",style:R,children:"support"})]})})]})})]}),i=n,h={backgroundColor:"#f8fafc",fontFamily:"Outfit, Arial, sans-serif"},g={backgroundColor:"#ffffff",margin:"0 auto",padding:"20px 0 48px",marginBottom:"64px",borderRadius:"12px",boxShadow:"0 4px 6px -1px rgba(0, 0, 0, 0.1)"},p={textAlign:"center",padding:"32px 0 24px",borderBottom:"1px solid #e2e8f0",marginBottom:"32px"},D={textAlign:"center",marginBottom:"0"},y={maxWidth:"100%",height:"auto"},w={backgroundColor:"#f8fafc",padding:"20px 24px"},v={color:"#334155",fontSize:"14px",lineHeight:"22px",margin:"0",fontFamily:"Outfit, Arial, sans-serif",wordBreak:"break-word"},b={textAlign:"center",margin:"32px 0"},E={textAlign:"center",marginTop:"40px",paddingTop:"20px",borderTop:"1px solid #e2e8f0"},x={color:"#334155",fontSize:"16px",lineHeight:"24px",margin:"16px 24px",fontFamily:"Outfit, Arial, sans-serif"},A={backgroundColor:"#6C47FF",borderRadius:"8px",color:"#ffffff",fontSize:"16px",fontWeight:"medium",textDecoration:"none",textAlign:"center",display:"inline-block",padding:"14px 32px",border:"none",cursor:"pointer",boxShadow:"0 4px 6px -1px rgba(108, 71, 255, 0.3)",fontFamily:"Outfit, Arial, sans-serif"},S={color:"#64748b",fontSize:"14px",lineHeight:"24px",margin:"0",fontFamily:"Outfit, Arial, sans-serif",textAlign:"center"},R={color:"#6C47FF",textDecoration:"underline",fontWeight:"500"}}},367133:e=>{"use strict";var{g:n,__dirname:i,a:t}=e;t(async(n,i)=>{try{e.s({sendDomainVerificationNotification:()=>s,sendTestDomainVerificationEmail:()=>l});var t=e.i(955013),a=e.i(611487),o=e.i(895011),r=n([a]);[a]=r.then?(await r)():r;let d=new t.Resend(process.env.RESEND_API_KEY);async function s(e){try{if(console.log(`📧 sendDomainVerificationNotification - Sending notification for domain: ${e.domain} to ${e.userEmail}`),!process.env.RESEND_API_KEY)return console.error("❌ sendDomainVerificationNotification - RESEND_API_KEY not configured"),{success:!1,error:"Email service not configured"};let n={userFirstname:e.userName?.split(" ")[0]||"User",domain:e.domain,verifiedAt:e.verifiedAt.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",timeZoneName:"short"})},i=await (0,a.render)((0,o.default)(n)),t=process.env.RESEND_FROM_EMAIL||"notifications@inbound.new",r=`inbound support <${t}>`,s=await d.emails.send({from:r,to:e.userEmail,subject:`🎉 ${e.domain} has been successfully verified - inbound`,html:i,tags:[{name:"type",value:"domain-verification"},{name:"domain",value:e.domain.replace(/[^a-zA-Z0-9_-]/g,"_")}]});if(s.error)return console.error("❌ sendDomainVerificationNotification - Resend API error:",s.error),{success:!1,error:`Email sending failed: ${s.error.message}`};return console.log(`✅ sendDomainVerificationNotification - Email sent successfully to ${e.userEmail}`),console.log(`   📧 Message ID: ${s.data?.id}`),{success:!0,messageId:s.data?.id}}catch(e){return console.error("❌ sendDomainVerificationNotification - Unexpected error:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error occurred"}}}async function l(e,n="example.com"){return s({userEmail:e,userName:"Test User",domain:n,verifiedAt:new Date})}i()}catch(e){i(e)}},!1)},631124:e=>{"use strict";var{g:n,__dirname:i,a:t}=e;t(async(n,i)=>{try{e.s({GET:()=>d,POST:()=>s});var t=e.i(125427),a=e.i(906273),o=e.i(367133),r=n([o]);async function s(e){try{let n=await e.json(),i=function(e){let n={messageType:e.Type,messageId:e.MessageId,topicArn:e.TopicArn,timestamp:e.Timestamp,healthEvent:null};if("Notification"===e.Type&&e.Message)try{n.healthEvent=JSON.parse(e.Message)}catch(e){console.error("Failed to parse SNS Message field:",e)}return n}(n);return console.log("=== AWS SNS Health Notification ==="),console.log("Timestamp:",new Date().toISOString()),console.log("SNS Message Type:",i.messageType),console.log("Topic ARN:",i.topicArn),i.healthEvent&&(console.log("--- AWS Health Event Details ---"),console.log("Service:",i.healthEvent.detail.service),console.log("Event Type:",i.healthEvent.detail.eventTypeCode),console.log("Status:",i.healthEvent.detail.statusCode),console.log("Region:",i.healthEvent.detail.eventRegion),console.log("Affected Resources:",i.healthEvent.resources),console.log("Description:",i.healthEvent.detail.eventDescription[0]?.latestDescription),console.log("Affected Entities:",i.healthEvent.detail.affectedEntities),console.log("Event Metadata:",i.healthEvent.detail.eventMetadata),await l(i.healthEvent)),console.log("--- Raw SNS Data ---"),console.log(JSON.stringify(i,null,2)),t.NextResponse.json({status:"healthy",timestamp:new Date().toISOString(),message:"Health notification processed successfully",messageType:i.messageType,eventType:i.healthEvent?.detail?.eventTypeCode||"unknown"})}catch(e){return console.error("Error processing health notification:",e),t.NextResponse.json({status:"error",timestamp:new Date().toISOString(),message:"Health notification processing failed",error:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function l(e){try{let{service:n,eventTypeCode:i,statusCode:t}=e.detail;if("SES"!==n||"AWS_SES_VERIFICATION_PENDING_TO_SUCCESS"!==i||"closed"!==t)return void console.log(`⏭️ handleDomainVerificationEvent - Skipping non-domain-verification event: ${i}`);let r=e.resources||[];if(0===r.length)return void console.log("⚠️ handleDomainVerificationEvent - No affected domains found in health event");for(let e of r){console.log(`🔍 handleDomainVerificationEvent - Processing domain verification: ${e}`);try{let n=await (0,a.getDomainOwnerByDomain)(e);if(!n){console.log(`⚠️ handleDomainVerificationEvent - No owner found for domain: ${e}`);continue}if(!await (0,a.markDomainAsVerified)(e)){console.log(`⚠️ handleDomainVerificationEvent - Failed to update domain status: ${e}`);continue}let i=await (0,o.sendDomainVerificationNotification)({userEmail:n.userEmail,userName:n.userName,domain:e,verifiedAt:new Date});i.success?(console.log(`✅ handleDomainVerificationEvent - Notification sent for domain: ${e}`),console.log(`   📧 Email sent to: ${n.userEmail}`),console.log(`   📧 Message ID: ${i.messageId}`)):(console.error(`❌ handleDomainVerificationEvent - Failed to send notification for domain: ${e}`),console.error(`   Error: ${i.error}`))}catch(n){console.error(`❌ handleDomainVerificationEvent - Error processing domain ${e}:`,n)}}}catch(e){console.error("❌ handleDomainVerificationEvent - Unexpected error:",e)}}async function d(){return console.log("GET request to /api/inbound/health:",{timestamp:new Date().toISOString(),message:"Health check via GET"}),t.NextResponse.json({status:"healthy",timestamp:new Date().toISOString(),message:"Health check successful (GET)"})}[o]=r.then?(await r)():r,i()}catch(e){i(e)}},!1)},690763:e=>{"use strict";var{g:n,__dirname:i,a:t}=e;t(async(n,i)=>{try{e.s({patchFetch:()=>l,routeModule:()=>d,serverHooks:()=>u,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>m});var t=e.i(854885),a=e.i(814689),o=e.i(25402),r=e.i(631124),s=n([r]);[r]=s.then?(await s)():s;let d=new t.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/inbound/health/route",pathname:"/api/inbound/health",filename:"route",bundlePath:""},resolvedPagePath:"[project]/app/api/inbound/health/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:c,workUnitAsyncStorage:m,serverHooks:u}=d;function l(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:m})}i()}catch(e){i(e)}},!1)},278680:e=>{var{g:n,__dirname:i}=e;e.v(e=>Promise.resolve().then(()=>e(594120)))},993477:e=>{var{g:n,__dirname:i}=e;e.v(e=>Promise.resolve().then(()=>e(611487)))},208588:e=>{var{g:n,__dirname:i}=e;e.v(n=>Promise.all(["server/chunks/[root-of-the-server]__d0ea99a0._.js","server/chunks/node_modules_next_dist_compiled_d42a5d2f._.js"].map(n=>e.l(n))).then(()=>n(29302)))}};

//# sourceMappingURL=%5Broot-of-the-server%5D__27674dec._.js.map