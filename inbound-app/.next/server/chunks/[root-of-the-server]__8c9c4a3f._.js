module.exports={929549:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},983943:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},86103:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},945935:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},348629:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("@opentelemetry/api",()=>require("@opentelemetry/api"))},76569:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("node:events",()=>require("node:events"))},804713:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("util",()=>require("util"))},87485:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("child_process",()=>require("child_process"))},420467:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("events",()=>require("events"))},936121:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("node:util",()=>require("node:util"))},681635:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("node:http",()=>require("node:http"))},866098:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("node:https",()=>require("node:https"))},580767:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("node:buffer",()=>require("node:buffer"))},329295:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("crypto",()=>require("crypto"))},62445:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("http",()=>require("http"))},348388:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("https",()=>require("https"))},591032:function(e){var{g:s,__dirname:i,m:r,e:a}=e;r.exports=e.x("node:crypto",()=>require("node:crypto"))},909834:e=>{"use strict";var{g:s,__dirname:i}=e;e.s({DELIVERY_STATUS:()=>a.DELIVERY_STATUS,DELIVERY_TYPES:()=>a.DELIVERY_TYPES,DOMAIN_STATUS:()=>a.DOMAIN_STATUS,EMAIL_STATUS:()=>a.EMAIL_STATUS,ENDPOINT_TYPES:()=>a.ENDPOINT_TYPES,PROVIDER_CONFIDENCE:()=>a.PROVIDER_CONFIDENCE,SENT_EMAIL_STATUS:()=>a.SENT_EMAIL_STATUS,SES_VERIFICATION_STATUS:()=>a.SES_VERIFICATION_STATUS,VIP_PAYMENT_STATUS:()=>a.VIP_PAYMENT_STATUS,WEBHOOK_FORMATS:()=>a.WEBHOOK_FORMATS,WEBHOOK_STATUS:()=>a.WEBHOOK_STATUS,account:()=>r.account,apikey:()=>r.apikey,blockedEmails:()=>a.blockedEmails,domainDnsRecords:()=>a.domainDnsRecords,emailAddresses:()=>a.emailAddresses,emailDomains:()=>a.emailDomains,emailGroups:()=>a.emailGroups,endpointDeliveries:()=>a.endpointDeliveries,endpoints:()=>a.endpoints,parsedEmails:()=>a.parsedEmails,receivedEmails:()=>a.receivedEmails,sentEmails:()=>a.sentEmails,sesEvents:()=>a.sesEvents,session:()=>r.session,structuredEmails:()=>a.structuredEmails,subscriptions:()=>a.subscriptions,user:()=>r.user,userAccounts:()=>a.userAccounts,userOnboarding:()=>a.userOnboarding,verification:()=>r.verification,vipAllowedSenders:()=>a.vipAllowedSenders,vipConfigs:()=>a.vipConfigs,vipEmailAttempts:()=>a.vipEmailAttempts,vipPaymentSessions:()=>a.vipPaymentSessions,webhookDeliveries:()=>a.webhookDeliveries,webhooks:()=>a.webhooks});var r=e.i(594120),a=e.i(55379)},436754:e=>{"use strict";var{g:s,__dirname:i}=e;e.s({DELIVERY_STATUS:()=>r.DELIVERY_STATUS,DELIVERY_TYPES:()=>r.DELIVERY_TYPES,DOMAIN_STATUS:()=>r.DOMAIN_STATUS,EMAIL_STATUS:()=>r.EMAIL_STATUS,ENDPOINT_TYPES:()=>r.ENDPOINT_TYPES,PROVIDER_CONFIDENCE:()=>r.PROVIDER_CONFIDENCE,SENT_EMAIL_STATUS:()=>r.SENT_EMAIL_STATUS,SES_VERIFICATION_STATUS:()=>r.SES_VERIFICATION_STATUS,VIP_PAYMENT_STATUS:()=>r.VIP_PAYMENT_STATUS,WEBHOOK_FORMATS:()=>r.WEBHOOK_FORMATS,WEBHOOK_STATUS:()=>r.WEBHOOK_STATUS,account:()=>r.account,apikey:()=>r.apikey,blockedEmails:()=>r.blockedEmails,domainDnsRecords:()=>r.domainDnsRecords,emailAddresses:()=>r.emailAddresses,emailDomains:()=>r.emailDomains,emailGroups:()=>r.emailGroups,endpointDeliveries:()=>r.endpointDeliveries,endpoints:()=>r.endpoints,parsedEmails:()=>r.parsedEmails,receivedEmails:()=>r.receivedEmails,sentEmails:()=>r.sentEmails,sesEvents:()=>r.sesEvents,session:()=>r.session,structuredEmails:()=>r.structuredEmails,subscriptions:()=>r.subscriptions,user:()=>r.user,userAccounts:()=>r.userAccounts,userOnboarding:()=>r.userOnboarding,verification:()=>r.verification,vipAllowedSenders:()=>r.vipAllowedSenders,vipConfigs:()=>r.vipConfigs,vipEmailAttempts:()=>r.vipEmailAttempts,vipPaymentSessions:()=>r.vipPaymentSessions,webhookDeliveries:()=>r.webhookDeliveries,webhooks:()=>r.webhooks}),e.i(468686);var r=e.i(909834)},906273:e=>{"use strict";var{g:s,__dirname:i}=e;e.s({areAllDnsRecordsVerified:()=>u,createDomainVerification:()=>o,createEmailAddress:()=>p,deleteDomainFromDatabase:()=>D,disableDomainCatchAll:()=>h,enableDomainCatchAll:()=>E,getDomainOwnerByDomain:()=>g,getDomainWithCatchAll:()=>S,getDomainWithRecords:()=>l,getDomainWithRecordsAndEmails:()=>A,getEmailAddressesForDomain:()=>f,isDomainCatchAllEnabled:()=>_,markDomainAsVerified:()=>w,updateDnsRecordVerification:()=>m,updateDomainSesVerification:()=>d,updateDomainStatus:()=>c,updateEmailAddressReceiptRule:()=>v});var r=e.i(557440);e.i(468686);var a=e.i(55379),n=e.i(176825),t=e.i(318812);async function o(e,s,i){let n={id:`indm_${(0,t.nanoid)()}`,domain:e,userId:s,status:"pending",canReceiveEmails:i.canReceiveEmails,hasMxRecords:i.hasMxRecords,domainProvider:i.provider?.name,providerConfidence:i.provider?.confidence,lastDnsCheck:new Date,updatedAt:new Date},[o]=await r.db.insert(a.emailDomains).values(n).returning();return o}async function d(e,s,i,o){let[d]=await r.db.update(a.emailDomains).set({verificationToken:s,status:"Success"===i?"verified":"pending",lastSesCheck:new Date,updatedAt:new Date}).where((0,n.eq)(a.emailDomains.id,e)).returning();for(let s of o){let i={id:`dns_${(0,t.nanoid)()}`,domainId:e,recordType:s.type,name:s.name,value:s.value,isRequired:!0,isVerified:!1};await r.db.insert(a.domainDnsRecords).values(i).onConflictDoNothing()}return d}async function l(e,s){let i=await r.db.select().from(a.emailDomains).where((0,n.and)((0,n.eq)(a.emailDomains.domain,e),(0,n.eq)(a.emailDomains.userId,s))).limit(1);if(!i[0])return null;let t=await r.db.select().from(a.domainDnsRecords).where((0,n.eq)(a.domainDnsRecords.domainId,i[0].id));return{...i[0],dnsRecords:t}}async function m(e,s,i,t){await r.db.update(a.domainDnsRecords).set({isVerified:t,lastChecked:new Date}).where((0,n.and)((0,n.eq)(a.domainDnsRecords.domainId,e),(0,n.eq)(a.domainDnsRecords.recordType,s),(0,n.eq)(a.domainDnsRecords.name,i)))}async function u(e){let s=await r.db.select().from(a.domainDnsRecords).where((0,n.and)((0,n.eq)(a.domainDnsRecords.domainId,e),(0,n.eq)(a.domainDnsRecords.isRequired,!0)));return s.length>0&&s.every(e=>e.isVerified)}async function c(e,s){let[i]=await r.db.update(a.emailDomains).set({status:s,updatedAt:new Date}).where((0,n.eq)(a.emailDomains.id,e)).returning();return i}async function p(e,s,i){let n={id:`email_${(0,t.nanoid)()}`,address:e,domainId:s,userId:i,isActive:!0,isReceiptRuleConfigured:!1,updatedAt:new Date},[o]=await r.db.insert(a.emailAddresses).values(n).returning();return o}async function f(e){return r.db.select().from(a.emailAddresses).where((0,n.eq)(a.emailAddresses.domainId,e))}async function v(e,s,i){let[t]=await r.db.update(a.emailAddresses).set({isReceiptRuleConfigured:s,receiptRuleName:i,updatedAt:new Date}).where((0,n.eq)(a.emailAddresses.id,e)).returning();return t}async function A(e,s){let i=await r.db.select().from(a.emailDomains).where((0,n.and)((0,n.eq)(a.emailDomains.domain,e),(0,n.eq)(a.emailDomains.userId,s))).limit(1);if(!i[0])return null;let t=await r.db.select().from(a.domainDnsRecords).where((0,n.eq)(a.domainDnsRecords.domainId,i[0].id)),o=await r.db.select().from(a.emailAddresses).where((0,n.eq)(a.emailAddresses.domainId,i[0].id));return{...i[0],dnsRecords:t,emailAddresses:o}}async function D(e,s){try{let i=await r.db.select().from(a.emailDomains).where((0,n.and)((0,n.eq)(a.emailDomains.id,e),(0,n.eq)(a.emailDomains.userId,s))).limit(1);if(!i[0])return{success:!1,error:"Domain not found or access denied"};return console.log(`üóëÔ∏è Deleting domain from database: ${i[0].domain}`),await r.db.delete(a.emailAddresses).where((0,n.eq)(a.emailAddresses.domainId,e)),await r.db.delete(a.domainDnsRecords).where((0,n.eq)(a.domainDnsRecords.domainId,e)),await r.db.delete(a.emailDomains).where((0,n.eq)(a.emailDomains.id,e)),console.log(`‚úÖ Successfully deleted domain from database: ${i[0].domain}`),{success:!0}}catch(e){return console.error("Database domain deletion error:",e),{success:!1,error:e instanceof Error?e.message:"Failed to delete domain from database"}}}async function E(e,s,i){let[t]=await r.db.update(a.emailDomains).set({isCatchAllEnabled:!0,catchAllWebhookId:s,catchAllReceiptRuleName:i,updatedAt:new Date}).where((0,n.eq)(a.emailDomains.id,e)).returning();if(!t)throw Error("Domain not found");return t}async function h(e){let[s]=await r.db.update(a.emailDomains).set({isCatchAllEnabled:!1,catchAllWebhookId:null,catchAllReceiptRuleName:null,updatedAt:new Date}).where((0,n.eq)(a.emailDomains.id,e)).returning();if(!s)throw Error("Domain not found");return s}async function S(e,s){let[i]=await r.db.select().from(a.emailDomains).where((0,n.and)((0,n.eq)(a.emailDomains.domain,e),(0,n.eq)(a.emailDomains.userId,s))).limit(1);return i||null}async function _(e){let[s]=await r.db.select({isCatchAllEnabled:a.emailDomains.isCatchAllEnabled}).from(a.emailDomains).where((0,n.eq)(a.emailDomains.id,e)).limit(1);return s?.isCatchAllEnabled||!1}async function g(s){try{let{user:i}=await e.r(278680)(e.i),t=await r.db.select({userId:a.emailDomains.userId,userEmail:i.email,userName:i.name}).from(a.emailDomains).innerJoin(i,(0,n.eq)(a.emailDomains.userId,i.id)).where((0,n.eq)(a.emailDomains.domain,s)).limit(1);if(!t[0])return console.log(`‚ùå getDomainOwnerByDomain - No owner found for domain: ${s}`),null;return console.log(`‚úÖ getDomainOwnerByDomain - Found owner for domain ${s}: ${t[0].userEmail}`),t[0]}catch(e){return console.error("‚ùå getDomainOwnerByDomain - Error looking up domain owner:",e),null}}async function w(e){try{let[s]=await r.db.update(a.emailDomains).set({status:"verified",lastSesCheck:new Date,updatedAt:new Date}).where((0,n.eq)(a.emailDomains.domain,e)).returning();return s&&console.log(`‚úÖ markDomainAsVerified - Domain ${e} marked as verified`),s||null}catch(e){return console.error("‚ùå markDomainAsVerified - Error updating domain status:",e),null}}},331530:function(e){var{g:s,__dirname:i,m:r,e:a}=e},161740:e=>{"use strict";var{g:s,__dirname:i}=e;e.s({POST:()=>d});var r=e.i(125427),a=e.i(906273),n=e.i(807204),t=e.i(402168),o=e.i(998322);async function d(e){try{let s=await t.auth.api.getSession({headers:await (0,o.headers)()});if(!s?.user?.id)return r.NextResponse.json({error:"Unauthorized"},{status:401});let{domain:i,emailAddresses:d}=await e.json();if(!i||!d||!Array.isArray(d))return r.NextResponse.json({error:"Domain and email addresses are required"},{status:400});let l=await (0,a.getDomainWithRecordsAndEmails)(i,s.user.id);if(!l)return r.NextResponse.json({error:"Domain not found. Please verify domain first."},{status:404});if("ses_verified"!==l.status)return r.NextResponse.json({error:"Domain must be fully verified before configuring email addresses"},{status:400});let m=l.emailAddresses||[],u=new Map(m.map(e=>[e.address.toLowerCase(),e])),c=[],p=[],f=[];for(let e of d)n.AWSSESReceiptRuleManager.isValidEmailAddress(e)?n.AWSSESReceiptRuleManager.extractDomain(e)===i?(c.push(e),u.has(e.toLowerCase())||f.push(e)):p.push(`${e} (domain mismatch)`):p.push(`${e} (invalid format)`);if(p.length>0)return r.NextResponse.json({error:"Invalid email addresses found",invalidEmails:p},{status:400});let v=process.env.AWS_REGION||"us-east-2",A=process.env.LAMBDA_FUNCTION_NAME||"email-processor",D=process.env.S3_BUCKET_NAME,E=process.env.AWS_ACCOUNT_ID;if(!D||!E)return r.NextResponse.json({error:"AWS configuration incomplete. Missing S3_BUCKET_NAME or AWS_ACCOUNT_ID"},{status:500});let h=new n.AWSSESReceiptRuleManager(v),S=n.AWSSESReceiptRuleManager.getLambdaFunctionArn(A,E,v),_=await h.configureEmailReceiving({domain:i,emailAddresses:c,lambdaFunctionArn:S,s3BucketName:D});if("failed"===_.status)return console.error(`Failed to configure SES receipt rules for ${i}:`,_.error),r.NextResponse.json({error:"Failed to configure SES receipt rules",details:_.error,domain:i,emailAddresses:c,isRetryable:!0},{status:500});let g=[];for(let e of m)e.isReceiptRuleConfigured&&e.receiptRuleName===_.ruleName||await (0,a.updateEmailAddressReceiptRule)(e.id,!0,_.ruleName),g.push({id:e.id,address:e.address,isConfigured:!0,ruleName:_.ruleName,isNew:!1});for(let e of f)try{let i=await (0,a.createEmailAddress)(e,l.id,s.user.id);await (0,a.updateEmailAddressReceiptRule)(i.id,!0,_.ruleName),g.push({id:i.id,address:e,isConfigured:!0,ruleName:_.ruleName,isNew:!0})}catch(s){console.error(`Failed to create email record for ${e}:`,s)}return r.NextResponse.json({domain:i,emailAddresses:g,receiptRule:{name:_.ruleName,status:_.status},lambdaFunction:A,s3Bucket:D,message:`Successfully configured ${g.length} email addresses for ${i} (${f.length} new, ${m.length} existing)`,timestamp:new Date})}catch(e){return console.error("Email configuration error:",e),r.NextResponse.json({error:"Failed to configure email addresses"},{status:500})}}},165637:e=>{"use strict";var{g:s,__dirname:i}=e;{e.s({patchFetch:()=>o,routeModule:()=>s,serverHooks:()=>l,workAsyncStorage:()=>i,workUnitAsyncStorage:()=>d});var r=e.i(854885),a=e.i(814689),n=e.i(25402),t=e.i(161740);let s=new r.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/inbound/configure-email/route",pathname:"/api/inbound/configure-email",filename:"route",bundlePath:""},resolvedPagePath:"[project]/app/api/inbound/configure-email/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:i,workUnitAsyncStorage:d,serverHooks:l}=s;function o(){return(0,n.patchFetch)({workAsyncStorage:i,workUnitAsyncStorage:d})}}},278680:e=>{var{g:s,__dirname:i}=e;e.v(e=>Promise.resolve().then(()=>e(594120)))},73518:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/[externals]_url_a7f1d978._.js","server/chunks/9f50b_@smithy_credential-provider-imds_dist-es_d5e4d7ca._.js"].map(s=>e.l(s))).then(()=>s(653223)))},855094:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/[externals]_fs_promises_1c68bc94._.js","server/chunks/9f50b_@aws-sdk_credential-provider-http_89f62eca._.js"].map(s=>e.l(s))).then(()=>s(515630)))},520835:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-web-identity_0db3d8af._.js"].map(s=>e.l(s))).then(()=>s(399432)))},404886:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-process_dist-es_f8837f08._.js"].map(s=>e.l(s))).then(()=>s(31086)))},800893:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/9f50b_d1608123._.js"].map(s=>e.l(s))).then(()=>s(387894)))},683391:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-sso_fe9c25c1._.js"].map(s=>e.l(s))).then(()=>s(695705)))},586469:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/[externals]_url_a7f1d978._.js","server/chunks/87a6c_@smithy_credential-provider-imds_dist-es_ee44b021._.js"].map(s=>e.l(s))).then(()=>s(488366)))},993477:e=>{var{g:s,__dirname:i}=e;e.v(s=>Promise.all(["server/chunks/[root-of-the-server]__33c828bc._.js","server/chunks/node_modules_10ae7a2d._.js"].map(s=>e.l(s))).then(()=>s(611487)))}};

//# sourceMappingURL=%5Broot-of-the-server%5D__8c9c4a3f._.js.map