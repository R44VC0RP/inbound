module.exports={690123:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({resolveCredentialSource:()=>r});var s=e.i(451395);e.i(749573);var t=e.i(76981),n=e.i(818270);let r=(r,s,o)=>{let a={EcsContainer:async r=>{let{fromHttp:s}=await e.r(855094)(e.i),{fromContainerMetadata:n}=await e.r(73518)(e.i);return o?.debug("@aws-sdk/credential-provider-ini - credential_source is EcsContainer"),async()=>(0,t.chain)(s(r??{}),n(r))().then(i)},Ec2InstanceMetadata:async r=>{o?.debug("@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata");let{fromInstanceMetadata:s}=await e.r(73518)(e.i);return async()=>s(r)().then(i)},Environment:async r=>{o?.debug("@aws-sdk/credential-provider-ini - credential_source is Environment");let{fromEnv:s}=await e.r(658770)(e.i);return async()=>s(r)().then(i)}};if(r in a)return a[r];throw new n.CredentialsProviderError(`Unsupported credential source in profile ${s}. Got ${r}, expected EcsContainer or Ec2InstanceMetadata or Environment.`,{logger:o})},i=e=>(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_NAMED_PROVIDER","p")}},623123:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({isAssumeRoleProfile:()=>r,resolveAssumeRoleCredentials:()=>d});var s=e.i(451395);e.i(749573);var t=e.i(818270);e.i(408256);var n=e.i(798412),o=e.i(690123),a=e.i(77048);let r=(e,{profile:r="default",logger:s}={})=>!!e&&"object"==typeof e&&"string"==typeof e.role_arn&&["undefined","string"].indexOf(typeof e.role_session_name)>-1&&["undefined","string"].indexOf(typeof e.external_id)>-1&&["undefined","string"].indexOf(typeof e.mfa_serial)>-1&&(i(e,{profile:r,logger:s})||l(e,{profile:r,logger:s})),i=(e,{profile:r,logger:i})=>{let s="string"==typeof e.source_profile&&void 0===e.credential_source;return s&&i?.debug?.(`    ${r} isAssumeRoleWithSourceProfile source_profile=${e.source_profile}`),s},l=(e,{profile:r,logger:i})=>{let s="string"==typeof e.credential_source&&void 0===e.source_profile;return s&&i?.debug?.(`    ${r} isCredentialSourceProfile credential_source=${e.credential_source}`),s},d=async(r,i,l,d={})=>{l.logger?.debug("@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)");let _=i[r],{source_profile:f,region:u}=_;if(!l.roleAssumer){let{getDefaultRoleAssumer:r}=await e.r(425709)(e.i);l.roleAssumer=r({...l.clientConfig,credentialProviderLogger:l.logger,parentClientConfig:{...l?.parentClientConfig,region:u??l?.parentClientConfig?.region}},l.clientPlugins)}if(f&&f in d)throw new t.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile ${(0,n.getProfileName)(l)}. Profiles visited: `+Object.keys(d).join(", "),{logger:l.logger});l.logger?.debug(`@aws-sdk/credential-provider-ini - finding credential resolver using ${f?`source_profile=[${f}]`:`profile=[${r}]`}`);let g=f?(0,a.resolveProfileData)(f,i,l,{...d,[f]:!0},c(i[f]??{})):(await (0,o.resolveCredentialSource)(_.credential_source,r,l.logger)(l))();if(c(_))return g.then(e=>(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_SOURCE_PROFILE","o"));{let e={RoleArn:_.role_arn,RoleSessionName:_.role_session_name||`aws-sdk-js-${Date.now()}`,ExternalId:_.external_id,DurationSeconds:parseInt(_.duration_seconds||"3600",10)},{mfa_serial:i}=_;if(i){if(!l.mfaCodeProvider)throw new t.CredentialsProviderError(`Profile ${r} requires multi-factor authentication, but no MFA code callback was provided.`,{logger:l.logger,tryNextLink:!1});e.SerialNumber=i,e.TokenCode=await l.mfaCodeProvider(i)}let n=await g;return l.roleAssumer(n,e).then(e=>(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_SOURCE_PROFILE","o"))}},c=e=>!e.role_arn&&!!e.credential_source}},462564:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({isProcessProfile:()=>r,resolveProcessCredentials:()=>i});var s=e.i(451395);let r=e=>!!e&&"object"==typeof e&&"string"==typeof e.credential_process,i=async(r,i)=>e.r(404886)(e.i).then(({fromProcess:e})=>e({...r,profile:i})().then(e=>(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_PROCESS","v")))}},509308:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({isSsoProfile:()=>i,resolveSsoCredentials:()=>r});var s=e.i(451395);let r=async(r,i,t={})=>{let{fromSSO:n}=await e.r(683391)(e.i);return n({profile:r,logger:t.logger,parentClientConfig:t.parentClientConfig,clientConfig:t.clientConfig})().then(e=>i.sso_session?(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_SSO","r"):(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_SSO_LEGACY","t"))},i=e=>e&&("string"==typeof e.sso_start_url||"string"==typeof e.sso_account_id||"string"==typeof e.sso_session||"string"==typeof e.sso_region||"string"==typeof e.sso_role_name)}},376605:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({isStaticCredsProfile:()=>r,resolveStaticCredentials:()=>i});var s=e.i(451395);let r=e=>!!e&&"object"==typeof e&&"string"==typeof e.aws_access_key_id&&"string"==typeof e.aws_secret_access_key&&["undefined","string"].indexOf(typeof e.aws_session_token)>-1&&["undefined","string"].indexOf(typeof e.aws_account_id)>-1,i=async(e,r)=>{r?.logger?.debug("@aws-sdk/credential-provider-ini - resolveStaticCredentials");let i={accessKeyId:e.aws_access_key_id,secretAccessKey:e.aws_secret_access_key,sessionToken:e.aws_session_token,...e.aws_credential_scope&&{credentialScope:e.aws_credential_scope},...e.aws_account_id&&{accountId:e.aws_account_id}};return(0,s.setCredentialFeature)(i,"CREDENTIALS_PROFILE","n")}}},219252:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({isWebIdentityProfile:()=>r,resolveWebIdentityCredentials:()=>i});var s=e.i(451395);let r=e=>!!e&&"object"==typeof e&&"string"==typeof e.web_identity_token_file&&"string"==typeof e.role_arn&&["undefined","string"].indexOf(typeof e.role_session_name)>-1,i=async(r,i)=>e.r(520835)(e.i).then(({fromTokenFile:e})=>e({webIdentityTokenFile:r.web_identity_token_file,roleArn:r.role_arn,roleSessionName:r.role_session_name,roleAssumerWithWebIdentity:i.roleAssumerWithWebIdentity,logger:i.logger,parentClientConfig:i.parentClientConfig})().then(e=>(0,s.setCredentialFeature)(e,"CREDENTIALS_PROFILE_STS_WEB_ID_TOKEN","q")))}},77048:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({resolveProfileData:()=>r}),e.i(749573);var s=e.i(818270),t=e.i(623123),n=e.i(462564),o=e.i(509308),a=e.i(376605),l=e.i(219252);let r=async(e,r,i,d={},c=!1)=>{let _=r[e];if(Object.keys(d).length>0&&(0,a.isStaticCredsProfile)(_))return(0,a.resolveStaticCredentials)(_,i);if(c||(0,t.isAssumeRoleProfile)(_,{profile:e,logger:i.logger}))return(0,t.resolveAssumeRoleCredentials)(e,r,i,d);if((0,a.isStaticCredsProfile)(_))return(0,a.resolveStaticCredentials)(_,i);if((0,l.isWebIdentityProfile)(_))return(0,l.resolveWebIdentityCredentials)(_,i);if((0,n.isProcessProfile)(_))return(0,n.resolveProcessCredentials)(i,e);if((0,o.isSsoProfile)(_))return await (0,o.resolveSsoCredentials)(e,_,i);throw new s.CredentialsProviderError(`Could not resolve credentials using profile: [${e}] in configuration/credentials file(s).`,{logger:i.logger})}}},903625:e=>{"use strict";var{g:r,__dirname:i}=e;{e.s({fromIni:()=>r}),e.i(408256);var s=e.i(798412),t=e.i(369985),n=e.i(77048);let r=(e={})=>async({callerClientConfig:r}={})=>{let i={...e,parentClientConfig:{...r,...e.parentClientConfig}};i.logger?.debug("@aws-sdk/credential-provider-ini - fromIni");let o=await (0,t.parseKnownFiles)(i);return(0,n.resolveProfileData)((0,s.getProfileName)({profile:e.profile??r?.profile}),o,i)}}},902712:e=>{"use strict";var{g:r,__dirname:i}=e;e.s({}),e.i(903625)},982148:e=>{"use strict";var{g:r,__dirname:i}=e;e.s({}),e.i(903625),e.i(902712)},171039:e=>{"use strict";var{g:r,__dirname:i}=e;e.s({fromIni:()=>s.fromIni});var s=e.i(903625);e.i(902712)},387894:e=>{"use strict";var{g:r,__dirname:i}=e;e.s({fromIni:()=>s.fromIni}),e.i(982148);var s=e.i(171039)},855094:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/[externals]_fs_promises_1c68bc94._.js","server/chunks/9f50b_@aws-sdk_credential-provider-http_89f62eca._.js"].map(r=>e.l(r))).then(()=>r(515630)))},73518:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/[externals]_url_a7f1d978._.js","server/chunks/9f50b_@smithy_credential-provider-imds_dist-es_d5e4d7ca._.js"].map(r=>e.l(r))).then(()=>r(653223)))},658770:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-env_dist-es_index_d5df4e6c.js"].map(r=>e.l(r))).then(()=>r(944642)))},425709:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/92a6e_@aws-sdk_nested-clients_package_json_1eb864d0._.js","server/chunks/92a6e_@aws-sdk_nested-clients_dist-es_submodules_sts_3d596eb8._.js"].map(r=>e.l(r))).then(()=>r(300472)))},404886:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-process_dist-es_f8837f08._.js"].map(r=>e.l(r))).then(()=>r(31086)))},683391:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-sso_f80de354._.js"].map(r=>e.l(r))).then(()=>r(695705)))},520835:e=>{var{g:r,__dirname:i}=e;e.v(r=>Promise.all(["server/chunks/9f50b_@aws-sdk_credential-provider-web-identity_65f59ba2._.js"].map(r=>e.l(r))).then(()=>r(399432)))}};

//# sourceMappingURL=9f50b_ca9f9f23._.js.map