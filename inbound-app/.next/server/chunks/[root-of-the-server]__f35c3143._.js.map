{"version":3,"sources":["turbopack:///[project]/app/api/v1/lib/auth.ts","turbopack:///[project]/app/api/v1/domains/[domain]/emails/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest } from 'next/server'\nimport { auth } from '@/lib/auth/auth'\n\nexport interface ApiKeyValidationResult {\n  valid: boolean\n  user?: {\n    id: string\n    email: string\n    name: string | null\n  }\n  error?: string\n}\n\n/**\n * Validates an API key from the Authorization header\n * Expected format: \"Bearer <api_key>\" or just \"<api_key>\"\n */\nexport async function validateApiKey(request: NextRequest): Promise<ApiKeyValidationResult> {\n  try {\n    // Get the Authorization header\n    const authHeader = request.headers.get('Authorization')\n    \n    if (!authHeader) {\n      return {\n        valid: false,\n        error: 'Missing Authorization header'\n      }\n    }\n\n    // Extract the API key (support both \"Bearer <key>\" and just \"<key>\")\n    let apiKey: string\n    if (authHeader.startsWith('Bearer ')) {\n      apiKey = authHeader.substring(7)\n    } else {\n      apiKey = authHeader\n    }\n\n    console.log(\"API KEY: \" + apiKey)\n\n    if (!apiKey) {\n      return {\n        valid: false,\n        error: 'Invalid Authorization header format'\n      }\n    }\n\n    // Verify the API key using Better Auth\n    const { valid, error, key } = await auth.api.verifyApiKey({\n      body: {\n        key: apiKey\n      }\n    })\n\n    console.log(\"VALID: \" + valid)\n    console.log(\"ERROR: \" + error)\n    console.log(\"KEY: \" + key?.userId)\n\n    if (!valid || error || !key) {\n      return {\n        valid: false,\n        error: error?.message || 'Invalid API key'\n      }\n    }\n\n    // Check if the API key is enabled\n    if (!key.enabled) {\n      return {\n        valid: false,\n        error: 'API key is disabled'\n      }\n    }\n\n    // Check if the API key has expired\n    if (key.expiresAt && new Date(key.expiresAt) < new Date()) {\n      return {\n        valid: false,\n        error: 'API key has expired'\n      }\n    }\n\n    // Use the userId from the API key directly\n    return {\n      valid: true,\n      user: {\n        id: key.userId,\n        email: key.userId, // We don't have email from API key, use userId as fallback\n        name: null // We don't have name from API key\n      }\n    }\n  } catch (error) {\n    console.error('API key validation error:', error)\n    return {\n      valid: false,\n      error: 'Internal server error during API key validation'\n    }\n  }\n}\n\n/**\n * Middleware function to validate API key and return standardized error responses\n */\nexport function createApiKeyMiddleware() {\n  return async (request: NextRequest) => {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return {\n        error: validation.error,\n        status: 401\n      }\n    }\n\n    return {\n      user: validation.user!\n    }\n  }\n} ","import { NextRequest, NextResponse } from 'next/server'\nimport { validateApiKey } from '../../../lib/auth'\nimport { db } from '@/lib/db'\nimport { emailDomains, emailAddresses, webhooks } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\n\n/**\n * GET /api/v1/domains/[domain]/emails\n * List all email addresses for a specific domain\n */\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ domain: string }> }\n) {\n  try {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return NextResponse.json(\n        { error: validation.error },\n        { status: 401 }\n      )\n    }\n\n    const { domain } = await params\n\n    // Find the domain record\n    const domainRecord = await db\n      .select()\n      .from(emailDomains)\n      .where(and(\n        eq(emailDomains.domain, domain),\n        eq(emailDomains.userId, validation.user!.id)\n      ))\n      .limit(1)\n\n    if (!domainRecord[0]) {\n      return NextResponse.json(\n        { error: 'Domain not found or does not belong to user' },\n        { status: 404 }\n      )\n    }\n\n    // Get all email addresses for this domain\n    const emails = await db\n      .select({\n        id: emailAddresses.id,\n        address: emailAddresses.address,\n        webhookId: emailAddresses.webhookId,\n        isActive: emailAddresses.isActive,\n        isReceiptRuleConfigured: emailAddresses.isReceiptRuleConfigured,\n        createdAt: emailAddresses.createdAt,\n        updatedAt: emailAddresses.updatedAt\n      })\n      .from(emailAddresses)\n      .where(and(\n        eq(emailAddresses.domainId, domainRecord[0].id),\n        eq(emailAddresses.userId, validation.user!.id)\n      ))\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        domain: domain,\n        emails: emails\n      }\n    })\n  } catch (error) {\n    console.error('Error fetching emails for domain:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}\n\n/**\n * DELETE /api/v1/domains/[domain]/emails\n * Remove an email address from a domain\n * Body: { email: string }\n */\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: Promise<{ domain: string }> }\n) {\n  try {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return NextResponse.json(\n        { error: validation.error },\n        { status: 401 }\n      )\n    }\n\n    const { domain } = await params\n    const body = await request.json()\n    const { email } = body\n\n    if (!email) {\n      return NextResponse.json(\n        { error: 'Email address is required' },\n        { status: 400 }\n      )\n    }\n\n    // Verify the email belongs to the specified domain\n    const emailDomain = email.split('@')[1]\n    if (emailDomain !== domain) {\n      return NextResponse.json(\n        { error: `Email address must belong to domain ${domain}` },\n        { status: 400 }\n      )\n    }\n\n    // Find the domain record\n    const domainRecord = await db\n      .select()\n      .from(emailDomains)\n      .where(and(\n        eq(emailDomains.domain, domain),\n        eq(emailDomains.userId, validation.user!.id)\n      ))\n      .limit(1)\n\n    if (!domainRecord[0]) {\n      return NextResponse.json(\n        { error: 'Domain not found or does not belong to user' },\n        { status: 404 }\n      )\n    }\n\n    // Find the email address\n    const emailRecord = await db\n      .select()\n      .from(emailAddresses)\n      .where(and(\n        eq(emailAddresses.address, email),\n        eq(emailAddresses.domainId, domainRecord[0].id),\n        eq(emailAddresses.userId, validation.user!.id)\n      ))\n      .limit(1)\n\n    if (!emailRecord[0]) {\n      return NextResponse.json(\n        { error: 'Email address not found' },\n        { status: 404 }\n      )\n    }\n\n    // Delete the email address\n    await db\n      .delete(emailAddresses)\n      .where(eq(emailAddresses.id, emailRecord[0].id))\n\n    return NextResponse.json({\n      success: true,\n      message: `Email address ${email} removed from domain ${domain}`\n    })\n  } catch (error) {\n    console.error('Error removing email from domain:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"84JACA,IAAA,EAAA,EAAA,CAAA,CAAA,QAgBO,eAAe,EAAe,CAAoB,EACvD,GAAI,CAEF,IAUI,EAVE,EAAa,EAAQ,OAAO,CAAC,GAAG,CAAC,iBAEvC,GAAI,CAAC,EACH,MAAO,CACL,GAFa,IAEN,EACP,MAAO,8BACT,EAaF,GAPE,EADE,EAAW,UAAU,CAAC,WACf,CAD2B,CAChB,SAAS,CAAC,GAErB,EAGX,QAAQ,GAAG,CAAC,YAAc,GAEtB,CAAC,EACH,MADW,AACJ,CACL,OAAO,EACP,MAAO,qCACT,EAIF,GAAM,OAAE,CAAK,OAAE,CAAK,KAAE,CAAG,CAAE,CAAG,MAAM,EAAA,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CACxD,KAAM,CACJ,IAAK,CACP,CACF,EAJoC,CAUpC,GAJA,QAAQ,GAAG,CAAC,UAAY,GACxB,QAAQ,GAAG,CAAC,UAAY,GACxB,QAAQ,GAAG,CAAC,QAAU,GAAK,QAEvB,CAAC,GAAS,GAAS,CAAC,EACtB,GAD2B,GACpB,CACL,OAAO,EACP,MAAO,GAAO,SAAW,iBAC3B,EAIF,GAAI,CAAC,EAAI,OAAO,CACd,CADgB,KACT,CACL,OAAO,EACP,MAAO,qBACT,EAIF,GAAI,EAAI,SAAS,EAAI,IAAI,KAAK,EAAI,SAAS,EAAI,IAAI,KACjD,GADyD,GAClD,CACL,OAAO,EACP,MAAO,qBACT,EAIF,MAAO,CACL,OAAO,EACP,KAAM,CACJ,GAAI,EAAI,MAAM,CACd,MAAO,EAAI,MAAM,CACjB,KAAM,IACR,CADa,AAEf,CACF,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,EAJmC,0BAIN,GACpC,CACL,MAAO,GACP,MAAO,iDACT,CACF,CACF,CAKO,SAAS,IACd,OAAO,MAAO,IACZ,IAAM,EAAa,MAAM,EAAe,UAExC,AAAK,EAAW,EAAZ,GAAiB,CAOd,CACL,AARqB,KAQf,EAAW,IAAI,AACvB,EARS,CACL,MAAO,EAAW,KAAK,CACvB,OAAQ,GACV,CAMJ,CACF,mICpHA,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QAMO,eAAe,EACpB,CAAoB,CACpB,QAAE,CAAM,CAA2C,EAEnD,GAAI,CACF,IAAM,EAAa,MAAM,CAAA,EAAA,EAAA,cAAA,AAAa,EAAE,GAExC,GAAI,CAAC,EAAW,KAAK,CACnB,CADqB,KAFE,CAGhB,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,EAAW,KAAK,AAAC,EAC1B,CAAE,EAFG,KAEK,GAAI,GAIlB,GAAM,QAAE,CAAM,CAAE,CAAG,MAAM,EAGnB,EAAe,MAAM,EAAA,EAAE,CAC1B,MAAM,GACN,IAAI,CAAC,EAAA,YAAY,EACjB,IAHwB,CAGnB,CAAC,CAAA,EAAA,EAAA,GAAA,AAAE,EACP,CAAA,EAAA,EAAA,CAFI,CAEJ,AAAC,EAAE,EAAA,YAAY,CAAC,MAAM,CAAE,CADnB,EAEL,CAAA,EAAA,EAAA,EAAA,AAAC,CADD,CACG,EAAA,EADA,UACY,CAAC,MAAM,CAAE,EAAW,IAAI,CAAE,EAAE,EAA3C,EAED,GAFI,EAEC,CAAC,GAET,GAAI,CAAC,CAAY,CAAC,EAAE,CAClB,CADoB,MACb,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,YADJ,iCACkD,EACvD,CAAE,OAAQ,GAAI,GAKlB,IAAM,EAAS,MAAM,EAAA,EAAE,CACpB,MAAM,CAAC,CACN,GAAI,EAAA,cAAc,CAAC,EAAE,CACrB,GAHiB,KAGR,EAAA,QADL,MACmB,CAAC,OAAO,CAC/B,UAAW,EAAA,CADF,aACgB,CAAC,SAAS,CACnC,SAAU,EADC,AACD,cAAc,CAAC,QAAQ,CACjC,YADU,YACe,EAAA,cAAc,CAAC,qBAAf,EAAsC,CAC/D,UAAW,EAAA,cAAc,CAAC,SAAS,CACnC,UAAW,CADA,CACA,cAAc,CAAC,SAAS,AACrC,GACC,IAAI,CAAC,EAAA,EAFO,YAEO,EACnB,KAAK,CAAC,CAAA,EAAA,EAAA,GAAA,AAAE,EACP,CAAA,EAAA,CAFI,CAEJ,EAAA,AAAC,EAAE,EAAA,cAAc,CAAC,MADb,EACqB,CAAE,CAAY,CAAC,EAAE,CAAC,EAA5C,AAA8C,EAC9C,CAAA,EADG,AACH,EAAA,EAAA,AAAC,EAAE,EAAA,cAAc,CAAC,MAAM,CAAE,EAAW,IAAI,CAAE,EAA3C,AAA6C,IAGjD,CAHO,MAGA,EAAA,YAAY,CAAC,IAAI,CAAC,CACvB,SAAS,EACT,KAAM,CACJ,CAHG,MAGK,EACR,OAAQ,CACV,CACF,EACF,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,oCAAqC,GAC5C,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,YADJ,WAC4B,EACjC,CAAE,OAAQ,GAAI,EAElB,CACF,CAOO,eAAe,EACpB,CAAoB,CACpB,QAAE,CAAM,CAA2C,EAEnD,GAAI,CACF,IAAM,EAAa,MAAM,CAAA,EAAA,EAAA,cAAA,AAAa,EAAE,GAExC,GAAI,CAAC,EAAW,KAAK,CACnB,CADqB,KAFE,CAGhB,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,EAAW,KAAK,AAAC,EAC1B,CAAE,EAFG,KAEK,GAAI,GAIlB,GAAM,QAAE,CAAM,CAAE,CAAG,MAAM,EAEnB,OAAE,CAAK,CAAE,CADF,EACK,IADC,EAAQ,IAAI,GAG/B,GAAI,CAAC,EACH,KADU,EACH,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,YADJ,eACgC,EACrC,CAAE,OAAQ,GAAI,GAMlB,GADoB,AAChB,EADsB,KAAK,CAAC,IAAI,CAAC,EAAE,GACnB,EAClB,MAD0B,CACnB,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,CAAC,WADL,yBACyC,EAAE,EAAA,CAAQ,AAAC,EACzD,CAAE,OAAQ,GAAI,GAKlB,IAAM,EAAe,MAAM,EAAA,EAAE,CAC1B,MAAM,GACN,IAAI,CAAC,EAAA,YAAY,EACjB,IAHwB,CAGnB,CAAC,GAAA,EAAA,GAAA,AAAE,EACP,CAAA,EAAA,EAAA,CAFI,CAEJ,AAAC,EAAE,EAAA,YAAY,CAAC,MAAM,CAAE,CADnB,EAEL,CAAA,EAAA,EAAA,EAAA,AAAC,CADD,CACG,EAAA,EADA,UACY,CAAC,MAAM,CAAE,EAAW,IAAI,CAAE,EAAE,EAA3C,EAED,GAFI,EAEC,CAAC,GAET,GAAI,CAAC,CAAY,CAAC,EAAE,CAClB,CADoB,MACb,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,YADJ,iCACkD,EACvD,CAAE,OAAQ,GAAI,GAKlB,IAAM,EAAc,MAAM,EAAA,EAAE,CACzB,MAAM,GACN,IAAI,CAAC,EAAA,cAAc,EACnB,EAHuB,GAGlB,CAAC,CAAA,EAAA,EAAA,GAAA,AAAE,EACP,CAAA,EAAA,CAFI,CAEJ,EAAA,AAAC,EAAE,EAAA,cAAc,CAAC,MADb,CACoB,CAAE,GAC3B,CAAA,EAAA,EAAA,AADA,EACA,AAAC,EAAE,CADA,CACA,cAAc,CAAC,QAAQ,CAAE,CAAY,CAAC,EAAE,CAAC,EAA5C,AAA8C,EAC9C,CAAA,EADG,AACH,EAAA,EAAA,AAAC,EAAE,EAAA,cAAc,CAAC,MAAM,CAAE,EAAW,IAAI,CAAE,EAAE,AAA7C,IAED,CAFI,IAEC,CAAC,GAET,GAAI,CAAC,CAAW,CAAC,EAAE,CACjB,CADmB,MACZ,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,YADJ,aAC8B,EACnC,CAAE,OAAQ,GAAI,GASlB,OAJA,MAAM,EAAA,EAAE,CACL,MAAM,CAAC,EAAA,cAAc,EACrB,KAAK,CAAC,CAAA,EAFH,AAEG,EAAA,EAAA,AAAC,EAAE,EAAA,GADF,WACgB,CAAC,EAAE,CAAE,CAAW,CAAC,EAAE,CAAC,EAAE,GAEzC,EAAA,CAFE,KAAG,MAEO,CAAC,IAAI,CAAC,CACvB,QAAS,GACT,OAFK,CAEI,CAAC,cAAc,EAAE,EAAM,qBAAqB,EAAE,EAAA,CACzD,AADiE,EAEnE,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,oCAAqC,GAC5C,EAAA,YAAY,CAAC,IAAI,CACtB,CAAE,MAAO,YADJ,WAC4B,EACjC,CAAE,OAAQ,GAAI,EAElB,CACF,iKCtKA,IAAA,EAGO,EAAA,CAAA,AAFLA,CAEK,QACP,EAA0B,EAAyB,CAA1CC,AAA0C,CAAA,EAAA,EAH9B,GAEwC,CAC3C,AAClB,EAA0C,EAFnC,AAEmC,CAAjCC,AAAiC,CAAA,EADhB,EAC8C,GAExE,EAAwC,EAAA,CAAA,CAFjBC,AAEiB,EAA5BC,MAWZ,GAbkC,CAa5BC,EAAc,EAXM,EAWN,CAbsB,CAalBL,WAXgB,QAWhBA,CAAoB,CAC1CM,WAAY,CACVC,KAAMN,EAAAA,SAAAA,CAAUO,SAAS,CACzBC,KAAM,wCACNC,SAAU,kCACVC,SAAU,QACVC,WAAY,EACd,EACAC,iBAAkB,wDAClBC,iBAXF,CAA0B,WAYxBV,CACF,GAKM,kBAAEW,CAAgB,sBAAEC,CAAoB,aAAEC,CAAW,CAAE,CAAGZ,EAEhE,SAASH,IACP,MAAA,CAAA,EAAA,EAAOC,UAAAA,EAAY,kBACjBY,uBACAC,CACF,EACF","ignoreList":[2]}