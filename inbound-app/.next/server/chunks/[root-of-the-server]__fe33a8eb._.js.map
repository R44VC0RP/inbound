{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.ts","turbopack:///[project]/app/api/v2/emails/[id]/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactServerDOMTurbopackServerEdge\n","import { NextRequest, NextResponse } from 'next/server'\nimport { validateRequest } from '../../helper/main'\nimport { db } from '@/lib/db'\nimport { sentEmails } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\n\n/**\n * GET /api/v2/emails/{id}\n * Retrieve a single sent email by ID\n * Supports both session-based auth and API key auth\n * Has tests? ‚ùå\n * Has logging? ‚úÖ\n * Has types? ‚úÖ\n */\n\n// GET /api/v2/emails/{id} types\nexport interface GetEmailByIdResponse {\n    object: \"email\"\n    id: string\n    to: string[]\n    from: string\n    created_at: string\n    subject: string\n    html: string | null\n    text: string | null\n    bcc: (string | null)[]\n    cc: (string | null)[]\n    reply_to: (string | null)[]\n    last_event: string\n}\n\nexport async function GET(\n    request: NextRequest,\n    { params }: { params: Promise<{ id: string }> }\n) {\n    console.log('üìß GET /api/v2/emails/[id] - Starting request')\n    \n    try {\n        // Await params as required by Next.js 15\n        const { id } = await params\n        console.log('üìß Retrieving email with ID:', id)\n\n        console.log('üîê Validating request authentication')\n        const { userId, error } = await validateRequest(request)\n        if (!userId) {\n            console.log('‚ùå Authentication failed:', error)\n            return NextResponse.json(\n                { error: error },\n                { status: 401 }\n            )\n        }\n        console.log('‚úÖ Authentication successful for userId:', userId)\n\n        // Fetch the email from database\n        console.log('üîç Fetching email from database')\n        const email = await db\n            .select()\n            .from(sentEmails)\n            .where(\n                and(\n                    eq(sentEmails.id, id),\n                    eq(sentEmails.userId, userId)\n                )\n            )\n            .limit(1)\n\n        if (email.length === 0) {\n            console.log('‚ùå Email not found:', id)\n            return NextResponse.json(\n                { error: 'Email not found' },\n                { status: 404 }\n            )\n        }\n\n        const emailData = email[0]\n        console.log('‚úÖ Email found:', {\n            id: emailData.id,\n            from: emailData.from,\n            subject: emailData.subject,\n            status: emailData.status\n        })\n\n        // Parse JSON fields\n        const toAddresses = emailData.to ? JSON.parse(emailData.to) : []\n        const ccAddresses = emailData.cc ? JSON.parse(emailData.cc) : []\n        const bccAddresses = emailData.bcc ? JSON.parse(emailData.bcc) : []\n        const replyToAddresses = emailData.replyTo ? JSON.parse(emailData.replyTo) : []\n\n        // Map status to last_event\n        let lastEvent = 'created'\n        switch (emailData.status) {\n            case 'sent':\n                lastEvent = 'delivered'\n                break\n            case 'failed':\n                lastEvent = 'failed'\n                break\n            case 'pending':\n                lastEvent = 'pending'\n                break\n        }\n\n        // Build response matching Resend's format\n        const response: GetEmailByIdResponse = {\n            object: \"email\",\n            id: emailData.id,\n            to: toAddresses,\n            from: emailData.from,\n            created_at: emailData.createdAt ? emailData.createdAt.toISOString() : new Date().toISOString(),\n            subject: emailData.subject,\n            html: emailData.htmlBody,\n            text: emailData.textBody,\n            bcc: bccAddresses.length > 0 ? bccAddresses : [null],\n            cc: ccAddresses.length > 0 ? ccAddresses : [null],\n            reply_to: replyToAddresses.length > 0 ? replyToAddresses : [null],\n            last_event: lastEvent\n        }\n\n        console.log('‚úÖ Successfully retrieved email')\n        return NextResponse.json(response)\n\n    } catch (error) {\n        console.error('üí• Unexpected error in GET /api/v2/emails/[id]:', error)\n        return NextResponse.json(\n            { error: 'Internal server error' },\n            { status: 500 }\n        )\n    }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackServerEdge","AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[0,2]}