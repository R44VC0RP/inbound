{"version":3,"sources":["turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-process/dist-es/index.js"],"sourcesContent":["import { setCredentialFeature } from \"@aws-sdk/core/client\";\nexport const getValidatedProcessCredentials = (profileName, data, profiles) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    let accountId = data.AccountId;\n    if (!accountId && profiles?.[profileName]?.aws_account_id) {\n        accountId = profiles[profileName].aws_account_id;\n    }\n    const credentials = {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n        ...(data.CredentialScope && { credentialScope: data.CredentialScope }),\n        ...(accountId && { accountId }),\n    };\n    setCredentialFeature(credentials, \"CREDENTIALS_PROCESS\", \"w\");\n    return credentials;\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { getValidatedProcessCredentials } from \"./getValidatedProcessCredentials\";\nexport const resolveProcessCredentials = async (profileName, profiles, logger) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = promisify(exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data, profiles);\n            }\n            catch (error) {\n                throw new CredentialsProviderError(error.message, { logger });\n            }\n        }\n        else {\n            throw new CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`, { logger });\n        }\n    }\n    else {\n        throw new CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`, {\n            logger,\n        });\n    }\n};\n","import { getProfileName, parseKnownFiles } from \"@smithy/shared-ini-file-loader\";\nimport { resolveProcessCredentials } from \"./resolveProcessCredentials\";\nexport const fromProcess = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-process - fromProcess\");\n    const profiles = await parseKnownFiles(init);\n    return resolveProcessCredentials(getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    }), profiles, init.logger);\n};\n","export * from \"./fromProcess\";\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3]}