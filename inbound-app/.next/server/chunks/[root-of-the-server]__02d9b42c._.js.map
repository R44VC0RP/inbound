{"version":3,"sources":["turbopack:///[project]/app/api/v1/lib/auth.ts","turbopack:///[project]/app/api/v1.1/endpoints/[id]/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest } from 'next/server'\nimport { auth } from '@/lib/auth/auth'\n\nexport interface ApiKeyValidationResult {\n  valid: boolean\n  user?: {\n    id: string\n    email: string\n    name: string | null\n  }\n  error?: string\n}\n\n/**\n * Validates an API key from the Authorization header\n * Expected format: \"Bearer <api_key>\" or just \"<api_key>\"\n */\nexport async function validateApiKey(request: NextRequest): Promise<ApiKeyValidationResult> {\n  try {\n    // Get the Authorization header\n    const authHeader = request.headers.get('Authorization')\n    \n    if (!authHeader) {\n      return {\n        valid: false,\n        error: 'Missing Authorization header'\n      }\n    }\n\n    // Extract the API key (support both \"Bearer <key>\" and just \"<key>\")\n    let apiKey: string\n    if (authHeader.startsWith('Bearer ')) {\n      apiKey = authHeader.substring(7)\n    } else {\n      apiKey = authHeader\n    }\n\n    console.log(\"API KEY: \" + apiKey)\n\n    if (!apiKey) {\n      return {\n        valid: false,\n        error: 'Invalid Authorization header format'\n      }\n    }\n\n    // Verify the API key using Better Auth\n    const { valid, error, key } = await auth.api.verifyApiKey({\n      body: {\n        key: apiKey\n      }\n    })\n\n    console.log(\"VALID: \" + valid)\n    console.log(\"ERROR: \" + error)\n    console.log(\"KEY: \" + key?.userId)\n\n    if (!valid || error || !key) {\n      return {\n        valid: false,\n        error: error?.message || 'Invalid API key'\n      }\n    }\n\n    // Check if the API key is enabled\n    if (!key.enabled) {\n      return {\n        valid: false,\n        error: 'API key is disabled'\n      }\n    }\n\n    // Check if the API key has expired\n    if (key.expiresAt && new Date(key.expiresAt) < new Date()) {\n      return {\n        valid: false,\n        error: 'API key has expired'\n      }\n    }\n\n    // Use the userId from the API key directly\n    return {\n      valid: true,\n      user: {\n        id: key.userId,\n        email: key.userId, // We don't have email from API key, use userId as fallback\n        name: null // We don't have name from API key\n      }\n    }\n  } catch (error) {\n    console.error('API key validation error:', error)\n    return {\n      valid: false,\n      error: 'Internal server error during API key validation'\n    }\n  }\n}\n\n/**\n * Middleware function to validate API key and return standardized error responses\n */\nexport function createApiKeyMiddleware() {\n  return async (request: NextRequest) => {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return {\n        error: validation.error,\n        status: 401\n      }\n    }\n\n    return {\n      user: validation.user!\n    }\n  }\n} ","import { NextRequest, NextResponse } from 'next/server'\nimport { validateApiKey } from '@/app/api/v1/lib/auth'\nimport { db } from '@/lib/db'\nimport { endpoints, emailGroups, endpointDeliveries, emailAddresses, emailDomains } from '@/lib/db/schema'\nimport { eq, and, desc, count } from 'drizzle-orm'\nimport { nanoid } from 'nanoid'\nimport type { UpdateEndpointData } from '@/features/endpoints/types'\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üìã GET /api/v1.1/endpoints/${params.id} - Fetching endpoint details`)\n    \n    const validation = await validateApiKey(request)\n    if ('error' in validation) {\n      return NextResponse.json({ error: validation.error }, { status: 401 })\n    }\n\n    const userId = validation.user?.id\n    if (!userId) {\n      return NextResponse.json({ error: 'User not found' }, { status: 401 })\n    }\n\n    // Get endpoint with user verification\n    const endpointResult = await db\n      .select()\n      .from(endpoints)\n      .where(and(\n        eq(endpoints.id, params.id),\n        eq(endpoints.userId, userId)\n      ))\n      .limit(1)\n\n    if (!endpointResult[0]) {\n      return NextResponse.json({\n        success: false,\n        error: 'Endpoint not found'\n      }, { status: 404 })\n    }\n\n    const endpoint = endpointResult[0]\n\n    // Get group emails if it's an email_group endpoint\n    let groupEmails: string[] | null = null\n    if (endpoint.type === 'email_group') {\n      const groupEmailsResult = await db\n        .select({ emailAddress: emailGroups.emailAddress })\n        .from(emailGroups)\n        .where(eq(emailGroups.endpointId, endpoint.id))\n        .orderBy(emailGroups.createdAt)\n\n      groupEmails = groupEmailsResult.map((g: any) => g.emailAddress)\n    }\n\n    // Get delivery statistics\n    const deliveryStatsResult = await db\n      .select({\n        total: count(),\n        status: endpointDeliveries.status\n      })\n      .from(endpointDeliveries)\n      .where(eq(endpointDeliveries.endpointId, endpoint.id))\n      .groupBy(endpointDeliveries.status)\n\n    let totalDeliveries = 0\n    let successfulDeliveries = 0\n    let failedDeliveries = 0\n\n    for (const stat of deliveryStatsResult) {\n      totalDeliveries += stat.total\n      if (stat.status === 'success') successfulDeliveries += stat.total\n      if (stat.status === 'failed') failedDeliveries += stat.total\n    }\n\n    // Get recent deliveries\n    const recentDeliveries = await db\n      .select({\n        id: endpointDeliveries.id,\n        emailId: endpointDeliveries.emailId,\n        deliveryType: endpointDeliveries.deliveryType,\n        status: endpointDeliveries.status,\n        attempts: endpointDeliveries.attempts,\n        lastAttemptAt: endpointDeliveries.lastAttemptAt,\n        responseData: endpointDeliveries.responseData,\n        createdAt: endpointDeliveries.createdAt\n      })\n      .from(endpointDeliveries)\n      .where(eq(endpointDeliveries.endpointId, endpoint.id))\n      .orderBy(desc(endpointDeliveries.createdAt))\n      .limit(10)\n\n    // Get associated email addresses\n    const associatedEmails = await db\n      .select({\n        id: emailAddresses.id,\n        address: emailAddresses.address,\n        isActive: emailAddresses.isActive,\n        createdAt: emailAddresses.createdAt\n      })\n      .from(emailAddresses)\n      .where(eq(emailAddresses.endpointId, endpoint.id))\n      .orderBy(emailAddresses.createdAt)\n\n    // Get catch-all domains using this endpoint\n    const catchAllDomains = await db\n      .select({\n        id: emailDomains.id,\n        domain: emailDomains.domain,\n        status: emailDomains.status\n      })\n      .from(emailDomains)\n      .where(eq(emailDomains.catchAllEndpointId, endpoint.id))\n\n    const response = {\n      ...endpoint,\n      config: JSON.parse(endpoint.config),\n      groupEmails,\n      deliveryStats: {\n        total: totalDeliveries,\n        successful: successfulDeliveries,\n        failed: failedDeliveries,\n        successRate: totalDeliveries > 0 ? Math.round((successfulDeliveries / totalDeliveries) * 100) : 0\n      },\n      recentDeliveries: recentDeliveries.map((delivery: any) => ({\n        ...delivery,\n        responseData: delivery.responseData ? JSON.parse(delivery.responseData) : null\n      })),\n      associatedEmails,\n      catchAllDomains,\n      usage: {\n        emailAddressCount: associatedEmails.length,\n        catchAllDomainCount: catchAllDomains.length,\n        totalEmailsProcessed: totalDeliveries\n      }\n    }\n\n    console.log(`‚úÖ GET /api/v1.1/endpoints/${params.id} - Retrieved endpoint details`)\n\n    return NextResponse.json({\n      success: true,\n      data: response\n    })\n\n  } catch (error) {\n    console.error(`‚ùå GET /api/v1.1/endpoints/${params.id} - Error:`, error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to fetch endpoint details',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üìù PUT /api/v1.1/endpoints/${params.id} - Updating endpoint`)\n    \n    const validation = await validateApiKey(request)\n    if ('error' in validation) {\n      return NextResponse.json({ error: validation.error }, { status: 401 })\n    }\n\n    const userId = validation.user?.id\n    if (!userId) {\n      return NextResponse.json({ error: 'User not found' }, { status: 401 })\n    }\n\n    const data: UpdateEndpointData = await request.json()\n\n    // Check if endpoint exists and belongs to user\n    const existingEndpoint = await db\n      .select()\n      .from(endpoints)\n      .where(and(\n        eq(endpoints.id, params.id),\n        eq(endpoints.userId, userId)\n      ))\n      .limit(1)\n\n    if (!existingEndpoint[0]) {\n      return NextResponse.json({\n        success: false,\n        error: 'Endpoint not found'\n      }, { status: 404 })\n    }\n\n    // Validate config if provided\n    if (data.config) {\n      const validationResult = validateEndpointConfig(existingEndpoint[0].type, data.config)\n      if (!validationResult.valid) {\n        return NextResponse.json(\n          {\n            success: false,\n            error: 'Invalid configuration',\n            details: validationResult.error\n          },\n          { status: 400 }\n        )\n      }\n    }\n\n    // Prepare update data\n    const updateData: any = {\n      updatedAt: new Date()\n    }\n\n    if (data.name !== undefined) updateData.name = data.name\n    if (data.description !== undefined) updateData.description = data.description\n    if (data.isActive !== undefined) updateData.isActive = data.isActive\n    if (data.config !== undefined) updateData.config = JSON.stringify(data.config)\n\n    // Update the endpoint\n    const [updatedEndpoint] = await db\n      .update(endpoints)\n      .set(updateData)\n      .where(eq(endpoints.id, params.id))\n      .returning()\n\n    // If config was updated and it's an email group, update the group entries\n    if (data.config && existingEndpoint[0].type === 'email_group' && 'emails' in data.config) {\n      // Delete existing group entries\n      await db.delete(emailGroups).where(eq(emailGroups.endpointId, params.id))\n      \n      // Create new group entries\n      const groupEntries = data.config.emails.map((email: string) => ({\n        id: nanoid(),\n        endpointId: params.id,\n        emailAddress: email,\n        createdAt: new Date()\n      }))\n      \n      if (groupEntries.length > 0) {\n        await db.insert(emailGroups).values(groupEntries)\n        console.log(`üìÆ PUT /api/v1.1/endpoints/${params.id} - Updated ${groupEntries.length} email group entries`)\n      }\n    }\n\n    // Return enhanced response\n    const response = {\n      ...updatedEndpoint,\n      config: JSON.parse(updatedEndpoint.config),\n      groupEmails: existingEndpoint[0].type === 'email_group' && data.config && 'emails' in data.config \n        ? data.config.emails \n        : null\n    }\n\n    console.log(`‚úÖ PUT /api/v1.1/endpoints/${params.id} - Successfully updated endpoint`)\n\n    return NextResponse.json({\n      success: true,\n      data: response,\n      message: 'Endpoint updated successfully'\n    })\n\n  } catch (error) {\n    console.error(`‚ùå PUT /api/v1.1/endpoints/${params.id} - Error:`, error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to update endpoint',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    console.log(`üóëÔ∏è DELETE /api/v1.1/endpoints/${params.id} - Deleting endpoint`)\n    \n    const validation = await validateApiKey(request)\n    if ('error' in validation) {\n      return NextResponse.json({ error: validation.error }, { status: 401 })\n    }\n\n    const userId = validation.user?.id\n    if (!userId) {\n      return NextResponse.json({ error: 'User not found' }, { status: 401 })\n    }\n\n    // Check if endpoint exists and belongs to user\n    const existingEndpoint = await db\n      .select()\n      .from(endpoints)\n      .where(and(\n        eq(endpoints.id, params.id),\n        eq(endpoints.userId, userId)\n      ))\n      .limit(1)\n\n    if (!existingEndpoint[0]) {\n      return NextResponse.json({\n        success: false,\n        error: 'Endpoint not found'\n      }, { status: 404 })\n    }\n\n    // Update email addresses to \"store only\" (clear endpointId) before deleting the endpoint\n    const updatedEmailAddresses = await db\n      .update(emailAddresses)\n      .set({ \n        endpointId: null,\n        updatedAt: new Date()\n      })\n      .where(eq(emailAddresses.endpointId, params.id))\n      .returning({ address: emailAddresses.address })\n\n    if (updatedEmailAddresses.length > 0) {\n      console.log(`üìß DELETE /api/v1.1/endpoints/${params.id} - Updated ${updatedEmailAddresses.length} email addresses to store-only mode:`, \n        updatedEmailAddresses.map(e => e.address).join(', '))\n    }\n\n    // Update domain catch-all configurations to remove this endpoint\n    await db\n      .update(emailDomains)\n      .set({ \n        catchAllEndpointId: null,\n        updatedAt: new Date()\n      })\n      .where(eq(emailDomains.catchAllEndpointId, params.id))\n\n    // Delete email group entries if it's an email group\n    if (existingEndpoint[0].type === 'email_group') {\n      await db.delete(emailGroups).where(eq(emailGroups.endpointId, params.id))\n      console.log(`üìÆ DELETE /api/v1.1/endpoints/${params.id} - Deleted email group entries`)\n    }\n\n    // Delete endpoint delivery history\n    await db.delete(endpointDeliveries).where(eq(endpointDeliveries.endpointId, params.id))\n    console.log(`üìä DELETE /api/v1.1/endpoints/${params.id} - Deleted delivery history`)\n\n    // Delete the endpoint\n    await db.delete(endpoints).where(eq(endpoints.id, params.id))\n\n    console.log(`‚úÖ DELETE /api/v1.1/endpoints/${params.id} - Successfully deleted endpoint`)\n\n    return NextResponse.json({\n      success: true,\n      message: updatedEmailAddresses.length > 0 \n        ? `Endpoint deleted successfully. ${updatedEmailAddresses.length} email address(es) switched to store-only mode.`\n        : 'Endpoint deleted successfully',\n      emailAddressesUpdated: updatedEmailAddresses.length,\n      updatedEmailAddresses: updatedEmailAddresses.map(e => e.address)\n    })\n\n  } catch (error) {\n    console.error(`‚ùå DELETE /api/v1.1/endpoints/${params.id} - Error:`, error)\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to delete endpoint',\n        details: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    )\n  }\n}\n\n/**\n * Validate endpoint configuration based on type\n */\nfunction validateEndpointConfig(type: string, config: any): { valid: boolean; error?: string } {\n  try {\n    switch (type) {\n      case 'webhook':\n        if (!config.url) {\n          return { valid: false, error: 'Webhook URL is required' }\n        }\n        if (typeof config.url !== 'string') {\n          return { valid: false, error: 'Webhook URL must be a string' }\n        }\n        try {\n          new URL(config.url)\n        } catch {\n          return { valid: false, error: 'Invalid webhook URL format' }\n        }\n        if (config.timeout && (typeof config.timeout !== 'number' || config.timeout < 1 || config.timeout > 300)) {\n          return { valid: false, error: 'Timeout must be a number between 1 and 300 seconds' }\n        }\n        if (config.retryAttempts && (typeof config.retryAttempts !== 'number' || config.retryAttempts < 0 || config.retryAttempts > 10)) {\n          return { valid: false, error: 'Retry attempts must be a number between 0 and 10' }\n        }\n        break\n\n      case 'email':\n        if (!config.forwardTo) {\n          return { valid: false, error: 'Forward-to email address is required' }\n        }\n        if (typeof config.forwardTo !== 'string') {\n          return { valid: false, error: 'Forward-to email must be a string' }\n        }\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (!emailRegex.test(config.forwardTo)) {\n          return { valid: false, error: 'Invalid forward-to email address format' }\n        }\n        break\n\n      case 'email_group':\n        if (!config.emails || !Array.isArray(config.emails)) {\n          return { valid: false, error: 'Email group must have an emails array' }\n        }\n        if (config.emails.length === 0) {\n          return { valid: false, error: 'Email group must have at least one email address' }\n        }\n        if (config.emails.length > 50) {\n          return { valid: false, error: 'Email group cannot have more than 50 email addresses' }\n        }\n        const emailRegexGroup = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        for (const email of config.emails) {\n          if (typeof email !== 'string' || !emailRegexGroup.test(email)) {\n            return { valid: false, error: `Invalid email address in group: ${email}` }\n          }\n        }\n        const uniqueEmails = new Set(config.emails)\n        if (uniqueEmails.size !== config.emails.length) {\n          return { valid: false, error: 'Email group contains duplicate email addresses' }\n        }\n        break\n\n      default:\n        return { valid: false, error: 'Unknown endpoint type' }\n    }\n\n    return { valid: true }\n  } catch (error) {\n    return { valid: false, error: 'Configuration validation failed' }\n  }\n}","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[2]}