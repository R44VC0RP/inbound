{"version":3,"sources":["turbopack:///[project]/node_modules/deepmerge/dist/cjs.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/CreateReceiptRuleSetCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/CreateReceiptRuleCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/UpdateReceiptRuleCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/DeleteReceiptRuleCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/DescribeReceiptRuleSetCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/dist-es/commands/SetActiveReceiptRuleSetCommand.js","turbopack:///[project]/lib/email-management/email-parser.ts","turbopack:///[project]/node_modules/autumn-js/dist/sdk/index.mjs"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_CreateReceiptRuleSetCommand, se_CreateReceiptRuleSetCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class CreateReceiptRuleSetCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"CreateReceiptRuleSet\", {})\n    .n(\"SESClient\", \"CreateReceiptRuleSetCommand\")\n    .f(void 0, void 0)\n    .ser(se_CreateReceiptRuleSetCommand)\n    .de(de_CreateReceiptRuleSetCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_CreateReceiptRuleCommand, se_CreateReceiptRuleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class CreateReceiptRuleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"CreateReceiptRule\", {})\n    .n(\"SESClient\", \"CreateReceiptRuleCommand\")\n    .f(void 0, void 0)\n    .ser(se_CreateReceiptRuleCommand)\n    .de(de_CreateReceiptRuleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_UpdateReceiptRuleCommand, se_UpdateReceiptRuleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class UpdateReceiptRuleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"UpdateReceiptRule\", {})\n    .n(\"SESClient\", \"UpdateReceiptRuleCommand\")\n    .f(void 0, void 0)\n    .ser(se_UpdateReceiptRuleCommand)\n    .de(de_UpdateReceiptRuleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_DeleteReceiptRuleCommand, se_DeleteReceiptRuleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class DeleteReceiptRuleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"DeleteReceiptRule\", {})\n    .n(\"SESClient\", \"DeleteReceiptRuleCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteReceiptRuleCommand)\n    .de(de_DeleteReceiptRuleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_DescribeReceiptRuleSetCommand, se_DescribeReceiptRuleSetCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class DescribeReceiptRuleSetCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"DescribeReceiptRuleSet\", {})\n    .n(\"SESClient\", \"DescribeReceiptRuleSetCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeReceiptRuleSetCommand)\n    .de(de_DescribeReceiptRuleSetCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { de_SetActiveReceiptRuleSetCommand, se_SetActiveReceiptRuleSetCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class SetActiveReceiptRuleSetCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SimpleEmailService\", \"SetActiveReceiptRuleSet\", {})\n    .n(\"SESClient\", \"SetActiveReceiptRuleSetCommand\")\n    .f(void 0, void 0)\n    .ser(se_SetActiveReceiptRuleSetCommand)\n    .de(de_SetActiveReceiptRuleSetCommand)\n    .build() {\n}\n","/**\n * Core email parsing utilities using mailparser for processing raw email content.\n * Provides the main parseEmail function for converting raw email strings into structured ParsedEmailData objects.\n * Used extensively throughout the application for webhook processing, email routing, and data storage.\n * Includes HTML sanitization and type definitions for consistent email data handling.\n */\nimport { simpleParser, ParsedMail, Attachment } from 'mailparser'\n\n// Types for the parsed email data structure\ninterface ParsedEmailAddress {\n  text: string\n  addresses: Array<{\n    name: string | null\n    address: string | null\n  }>\n}\n\n// Header value types for complex header structures\ninterface ParsedEmailHeaderValue {\n  value?: Array<{\n    address: string\n    name: string\n  }> | string\n  html?: string\n  text?: string\n  params?: Record<string, string>\n}\n\ninterface ParsedEmailListHeader {\n  unsubscribe?: {\n    url: string\n  }\n  'unsubscribe-post'?: {\n    name: string\n  }\n}\n\ninterface ParsedEmailData {\n  messageId: string | undefined\n  date: Date | undefined\n  subject: string | undefined\n  from: ParsedEmailAddress | null\n  to: ParsedEmailAddress | null\n  cc: ParsedEmailAddress | null\n  bcc: ParsedEmailAddress | null\n  replyTo: ParsedEmailAddress | null\n  inReplyTo: string | undefined\n  references: string[] | undefined\n  textBody: string | undefined\n  htmlBody: string | undefined\n  raw?: string\n  attachments: Array<{\n    filename: string | undefined\n    contentType: string | undefined\n    size: number | undefined\n    contentId: string | undefined\n    contentDisposition: string | undefined\n  }>\n  headers: Record<string, any> & {\n    'return-path'?: ParsedEmailHeaderValue\n    'received'?: string | string[]\n    'received-spf'?: string\n    'authentication-results'?: string\n    'x-ses-receipt'?: string\n    'x-ses-dkim-signature'?: string\n    'dkim-signature'?: Array<{\n      value: string\n      params: Record<string, string>\n    }> | ParsedEmailHeaderValue\n    'list'?: ParsedEmailListHeader\n    'x-entity-ref-id'?: string\n    'from'?: ParsedEmailHeaderValue\n    'to'?: ParsedEmailHeaderValue\n    'subject'?: string\n    'message-id'?: string\n    'date'?: string\n    'mime-version'?: string\n    'content-type'?: {\n      value: string\n      params: Record<string, string>\n    }\n    'feedback-id'?: string\n    'x-ses-outgoing'?: string\n  }\n  priority: string | false | undefined\n}\n\nexport async function parseEmail(emailContent: string): Promise<ParsedEmailData> {\n  try {\n    // Parse the email\n    const parsed = await simpleParser(emailContent);\n    \n    // Helper function to extract address info\n    const extractAddressInfo = (addressObj: any): ParsedEmailAddress | null => {\n      if (!addressObj) return null;\n      \n      if (Array.isArray(addressObj)) {\n        return {\n          text: addressObj.map(addr => addr.text || `${addr.name || ''} <${addr.address || ''}>`).join(', '),\n          addresses: addressObj.map(addr => ({\n            name: addr.name || null,\n            address: addr.address || null\n          }))\n        };\n      } else if (addressObj.value && Array.isArray(addressObj.value)) {\n        // Handle AddressObject with value array\n        return {\n          text: addressObj.text,\n          addresses: addressObj.value.map((addr: any) => ({\n            name: addr.name || null,\n            address: addr.address || null\n          }))\n        };\n      } else if (addressObj.value) {\n        // Handle AddressObject with single value\n        return {\n          text: addressObj.text,\n          addresses: [{\n            name: addressObj.value.name || null,\n            address: addressObj.value.address || null\n          }]\n        };\n      } else {\n        // Handle direct address object\n        return {\n          text: addressObj.text || `${addressObj.name || ''} <${addressObj.address || ''}>`,\n          addresses: [{\n            name: addressObj.name || null,\n            address: addressObj.address || null\n          }]\n        };\n      }\n    };\n    \n    // Extract key information\n    const emailData: ParsedEmailData = {\n      messageId: parsed.messageId,\n      date: parsed.date,\n      subject: parsed.subject,\n      from: extractAddressInfo(parsed.from),\n      to: extractAddressInfo(parsed.to),\n      cc: extractAddressInfo(parsed.cc),\n      bcc: extractAddressInfo(parsed.bcc),\n      replyTo: extractAddressInfo(parsed.replyTo),\n      inReplyTo: parsed.inReplyTo,\n      references: Array.isArray(parsed.references) ? parsed.references : parsed.references ? [parsed.references] : undefined,\n      textBody: parsed.text,\n      htmlBody: parsed.html || undefined,\n      raw: emailContent,\n      attachments: parsed.attachments?.map(att => ({\n        filename: att.filename,\n        contentType: att.contentType,\n        size: att.size,\n        contentId: att.contentId,\n        contentDisposition: att.contentDisposition\n      })) || [],\n      headers: Object.fromEntries(parsed.headers),\n      priority: parsed.priority\n    };\n    \n    // Return the full parsed data for programmatic use\n    return emailData;\n    \n  } catch (error) {\n    console.error('Error parsing email:', error);\n    throw error;\n  }\n}\n\n// Legacy interface for backward compatibility\ninterface ParsedEmail {\n  headers: Record<string, string>\n  htmlBody: string | null\n  textBody: string | null\n  attachments: Array<{\n    filename: string\n    contentType: string\n    size: number\n    contentId?: string\n    isInline?: boolean\n  }>\n}\n\n// Process inline images by converting Content-ID references to data URLs\nfunction processInlineImages(html: string, attachments: Attachment[]): string {\n  if (!html || !attachments) return html\n\n  let processedHtml = html\n\n  // Create a map of Content-ID to attachment data\n  const cidMap = new Map<string, string>()\n  \n  for (const attachment of attachments) {\n    if (attachment.contentId && attachment.content) {\n      // Remove angle brackets from Content-ID if present\n      const cleanCid = attachment.contentId.replace(/^<|>$/g, '')\n      \n      // Convert attachment content to base64 data URL\n      const base64Data = attachment.content.toString('base64')\n      const dataUrl = `data:${attachment.contentType || 'application/octet-stream'};base64,${base64Data}`\n      \n      cidMap.set(cleanCid, dataUrl)\n    }\n  }\n\n  // Replace Content-ID references in HTML\n  for (const [cid, dataUrl] of cidMap) {\n    // Replace various formats of Content-ID references\n    const patterns = [\n      new RegExp(`src-cid=[\"']${cid}[\"']`, 'gi'),\n      new RegExp(`src=[\"']cid:${cid}[\"']`, 'gi'),\n      new RegExp(`src=[\"']${cid}[\"']`, 'gi'),\n    ]\n\n    for (const pattern of patterns) {\n      processedHtml = processedHtml.replace(pattern, `src=\"${dataUrl}\"`)\n    }\n  }\n\n  return processedHtml\n}\n\nexport function sanitizeHtml(html: string): string {\n  if (!html) return ''\n  \n  // Basic HTML sanitization - remove script tags and dangerous attributes\n  // Allow data: URLs for images but be restrictive about other uses\n  return html\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    .replace(/on\\w+=\"[^\"]*\"/gi, '')\n    .replace(/on\\w+='[^']*'/gi, '')\n    .replace(/javascript:/gi, '')\n    .replace(/vbscript:/gi, '')\n    // Only remove data: URLs that are NOT for images\n    .replace(/(?<!src=[\"'])data:(?!image\\/)/gi, '')\n}\n\nexport function extractEmailDomain(email: string): string {\n  const match = email.match(/@([^>]+)/)\n  return match ? match[1] : ''\n}\n\nexport function formatEmailAddress(email: string): { name: string; address: string } {\n  // Handle formats like \"Name <email@domain.com>\" or just \"email@domain.com\"\n  const match = email.match(/^(.+?)\\s*<(.+?)>$/)\n  if (match) {\n    return {\n      name: match[1].replace(/['\"]/g, '').trim(),\n      address: match[2].trim()\n    }\n  }\n  \n  return {\n    name: '',\n    address: email.trim()\n  }\n}\n\n/**\n * Extract a single email address from various address object formats (mailparser AddressObject)\n * Handles string, AddressObject, and array formats commonly returned by mailparser\n */\nexport function extractEmailAddress(addressObj: any): string {\n  if (!addressObj) return 'unknown'\n  if (typeof addressObj === 'string') return addressObj\n  if (addressObj.text) return addressObj.text\n  if (Array.isArray(addressObj) && addressObj.length > 0) {\n    return addressObj[0].text || addressObj[0].address || 'unknown'\n  }\n  if (addressObj.address) return addressObj.address\n  if (addressObj.name) return addressObj.name\n  return 'unknown'\n}\n\n/**\n * Extract multiple email addresses from various address object formats (mailparser AddressObject)\n * Returns an array of email address strings\n */\nexport function extractEmailAddresses(addressObj: any): string[] {\n  if (!addressObj) return []\n  if (typeof addressObj === 'string') return [addressObj]\n  if (Array.isArray(addressObj)) {\n    return addressObj.map(addr => addr.text || addr.address || 'unknown')\n  }\n  if (addressObj.text) return [addressObj.text]\n  if (addressObj.address) return [addressObj.address]\n  return []\n}\n\n// Export the ParsedEmailData type for use in other files\nexport type { ParsedEmailData, ParsedEmailAddress, ParsedEmailHeaderValue, ParsedEmailListHeader } ","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/sdk/error.ts\nvar AutumnError = class extends Error {\n  constructor(response) {\n    super(response.message);\n    __publicField(this, \"message\");\n    __publicField(this, \"code\");\n    this.message = response.message;\n    this.code = response.code;\n  }\n  toString() {\n    return `${this.message} (code: ${this.code})`;\n  }\n  toJSON() {\n    return {\n      message: this.message,\n      code: this.code\n    };\n  }\n};\n\n// src/sdk/utils.ts\nvar staticWrapper = (callback, instance, args) => {\n  if (!instance) {\n    instance = new Autumn();\n  }\n  return callback({ instance, ...args });\n};\n\n// src/sdk/customers/cusMethods.ts\nvar customerMethods = (instance) => {\n  return {\n    get: (id, params) => staticWrapper(getCustomer, instance, { id, params }),\n    create: (params) => staticWrapper(createCustomer, instance, { params }),\n    update: (id, params) => staticWrapper(updateCustomer, instance, { id, params }),\n    delete: (id) => staticWrapper(deleteCustomer, instance, { id }),\n    billingPortal: (id, params) => staticWrapper(billingPortal, instance, { id, params })\n  };\n};\nvar getExpandStr = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\nvar getCustomer = async ({\n  instance,\n  id,\n  params\n}) => {\n  if (!id) {\n    return {\n      data: null,\n      error: new AutumnError({\n        message: \"Customer ID is required\",\n        code: \"CUSTOMER_ID_REQUIRED\"\n      })\n    };\n  }\n  return instance.get(`/customers/${id}?${getExpandStr(params?.expand)}`);\n};\nvar createCustomer = async ({\n  instance,\n  params\n}) => {\n  return instance.post(`/customers?${getExpandStr(params?.expand)}`, params);\n};\nvar updateCustomer = async ({\n  instance,\n  id,\n  params\n}) => {\n  return instance.post(`/customers/${id}`, params);\n};\nvar deleteCustomer = async ({\n  instance,\n  id\n}) => {\n  return instance.delete(`/customers/${id}`);\n};\nvar billingPortal = async ({\n  instance,\n  id,\n  params\n}) => {\n  return instance.post(`/customers/${id}/billing_portal`, params);\n};\n\n// src/sdk/customers/entities/entMethods.ts\nvar entityMethods = (instance) => {\n  return {\n    get: (customer_id, entity_id, params) => staticWrapper(getEntity, instance, {\n      customer_id,\n      entity_id,\n      params\n    }),\n    create: (customer_id, params) => staticWrapper(createEntity, instance, { customer_id, params }),\n    delete: (customer_id, entity_id) => staticWrapper(deleteEntity, instance, { customer_id, entity_id })\n  };\n};\nvar getExpandStr2 = (expand) => {\n  if (!expand) {\n    return \"\";\n  }\n  return `expand=${expand.join(\",\")}`;\n};\nvar getEntity = async ({\n  instance,\n  customer_id,\n  entity_id,\n  params\n}) => {\n  return instance.get(\n    `/customers/${customer_id}/entities/${entity_id}?${getExpandStr2(\n      params?.expand\n    )}`\n  );\n};\nvar createEntity = async ({\n  instance,\n  customer_id,\n  params\n}) => {\n  return instance.post(`/customers/${customer_id}/entities`, params);\n};\nvar deleteEntity = async ({\n  instance,\n  customer_id,\n  entity_id\n}) => {\n  return instance.delete(`/customers/${customer_id}/entities/${entity_id}`);\n};\n\n// src/sdk/general/genMethods.ts\nvar handleAttach = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/attach\", params);\n};\nvar handleCancel = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/cancel\", params);\n};\nvar handleEntitled = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/entitled\", params);\n};\nvar handleEvent = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/events\", params);\n};\nvar handleTrack = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/track\", params);\n};\nvar handleUsage = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/usage\", params);\n};\nvar handleCheck = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/check\", params);\n};\n\n// src/sdk/products/prodMethods.ts\nvar productMethods = (instance) => {\n  return {\n    get: (id) => staticWrapper(getProduct, instance, { id }),\n    create: (params) => staticWrapper(createProduct, instance, { params }),\n    list: (params) => staticWrapper(listProducts, instance, { params })\n  };\n};\nvar listProducts = async ({\n  instance,\n  params\n}) => {\n  let path = \"/products\";\n  if (params) {\n    const queryParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(params)) {\n      if (value !== void 0) {\n        queryParams.append(key, String(value));\n      }\n    }\n    const queryString = queryParams.toString();\n    if (queryString) {\n      path += `?${queryString}`;\n    }\n  }\n  return instance.get(path);\n};\nvar getProduct = async ({\n  instance,\n  id\n}) => {\n  return instance.get(`/products/${id}`);\n};\nvar createProduct = async ({\n  instance,\n  params\n}) => {\n  return instance.post(\"/products\", params);\n};\n\n// src/sdk/response.ts\nvar toContainerResult = async (response) => {\n  if (response.status < 200 || response.status >= 300) {\n    let error;\n    try {\n      error = await response.json();\n    } catch (error2) {\n      return {\n        data: null,\n        error: new AutumnError({\n          message: \"Failed to parse JSON response from Autumn\",\n          code: \"internal_error\"\n        }),\n        statusCode: response.status\n      };\n    }\n    return {\n      data: null,\n      error: new AutumnError({\n        message: error.message,\n        code: error.code\n      }),\n      statusCode: response.status\n    };\n  }\n  try {\n    let data = await response.json();\n    return {\n      data,\n      error: null,\n      statusCode: response?.status\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: new AutumnError({\n        message: \"Failed to parse Autumn API response\",\n        code: \"internal_error\"\n      }),\n      statusCode: response?.status\n    };\n  }\n};\n\n// src/sdk/client.ts\nvar LATEST_API_VERSION = \"1.2\";\nvar Autumn = class {\n  constructor(options) {\n    __publicField(this, \"secretKey\");\n    __publicField(this, \"publishableKey\");\n    __publicField(this, \"level\");\n    __publicField(this, \"headers\");\n    __publicField(this, \"url\");\n    __publicField(this, \"customers\", customerMethods(this));\n    __publicField(this, \"products\", productMethods(this));\n    __publicField(this, \"entities\", entityMethods(this));\n    try {\n      this.secretKey = options?.secretKey || process.env.AUTUMN_SECRET_KEY;\n      this.publishableKey = options?.publishableKey || process.env.AUTUMN_PUBLISHABLE_KEY;\n    } catch (error) {\n    }\n    if (!this.secretKey && !this.publishableKey) {\n      throw new Error(\"Autumn secret key or publishable key is required\");\n    }\n    this.headers = {\n      Authorization: `Bearer ${this.secretKey || this.publishableKey}`,\n      \"Content-Type\": \"application/json\"\n    };\n    let version = options?.version || LATEST_API_VERSION;\n    this.headers[\"x-api-version\"] = version;\n    this.url = options?.url || \"https://api.useautumn.com/v1\";\n    this.level = this.secretKey ? \"secret\" : \"publishable\";\n  }\n  getLevel() {\n    return this.level;\n  }\n  async get(path) {\n    const response = await fetch(`${this.url}${path}`, {\n      headers: this.headers\n    });\n    return toContainerResult(response);\n  }\n  async post(path, body) {\n    const response = await fetch(`${this.url}${path}`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(body)\n    });\n    return toContainerResult(response);\n  }\n  async delete(path) {\n    const response = await fetch(`${this.url}${path}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    });\n    return toContainerResult(response);\n  }\n  async attach(params) {\n    return handleAttach({\n      instance: this,\n      params\n    });\n  }\n  async cancel(params) {\n    return handleCancel({\n      instance: this,\n      params\n    });\n  }\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new check() method instead.\n   */\n  async entitled(params) {\n    return handleEntitled({\n      instance: this,\n      params\n    });\n  }\n  async check(params) {\n    return handleCheck({\n      instance: this,\n      params\n    });\n  }\n  /**\n   * @deprecated This method is deprecated and will be removed in a future version.\n   * Please use the new track() method instead.\n   */\n  async event(params) {\n    return handleEvent({\n      instance: this,\n      params\n    });\n  }\n  async track(params) {\n    return handleTrack({\n      instance: this,\n      params\n    });\n  }\n  async usage(params) {\n    return handleUsage({\n      instance: this,\n      params\n    });\n  }\n};\n__publicField(Autumn, \"customers\", customerMethods());\n__publicField(Autumn, \"products\", productMethods());\n__publicField(Autumn, \"entities\", entityMethods());\n__publicField(Autumn, \"attach\", (params) => staticWrapper(handleAttach, void 0, { params }));\n__publicField(Autumn, \"usage\", (params) => staticWrapper(handleUsage, void 0, { params }));\n__publicField(Autumn, \"cancel\", (params) => staticWrapper(handleCancel, void 0, { params }));\n/**\n * @deprecated This method is deprecated and will be removed in a future version.\n * Please use the new check() method instead.\n */\n__publicField(Autumn, \"entitled\", (params) => staticWrapper(handleEntitled, void 0, { params }));\n__publicField(Autumn, \"check\", (params) => staticWrapper(handleCheck, void 0, { params }));\n/**\n * @deprecated This method is deprecated and will be removed in a future version.\n * Please use the new track() method instead.\n */\n__publicField(Autumn, \"event\", (params) => staticWrapper(handleEvent, void 0, { params }));\n__publicField(Autumn, \"track\", (params) => staticWrapper(handleTrack, void 0, { params }));\n\n// src/sdk/general/genEnums.ts\nvar AppEnv = /* @__PURE__ */ ((AppEnv2) => {\n  AppEnv2[\"Sandbox\"] = \"sandbox\";\n  AppEnv2[\"Live\"] = \"live\";\n  return AppEnv2;\n})(AppEnv || {});\n\n// src/sdk/customers/cusEnums.ts\nvar ProductStatus = /* @__PURE__ */ ((ProductStatus2) => {\n  ProductStatus2[\"Active\"] = \"active\";\n  ProductStatus2[\"Expired\"] = \"expired\";\n  ProductStatus2[\"Trialing\"] = \"trialing\";\n  ProductStatus2[\"Scheduled\"] = \"scheduled\";\n  return ProductStatus2;\n})(ProductStatus || {});\n\n// src/sdk/products/prodEnums.ts\nvar Infinite = \"inf\";\nvar FreeTrialDuration = /* @__PURE__ */ ((FreeTrialDuration2) => {\n  FreeTrialDuration2[\"Day\"] = \"day\";\n  return FreeTrialDuration2;\n})(FreeTrialDuration || {});\nvar UsageModel = /* @__PURE__ */ ((UsageModel2) => {\n  UsageModel2[\"Prepaid\"] = \"prepaid\";\n  UsageModel2[\"PayPerUse\"] = \"pay_per_use\";\n  return UsageModel2;\n})(UsageModel || {});\nvar ProductItemInterval = /* @__PURE__ */ ((ProductItemInterval2) => {\n  ProductItemInterval2[\"Minute\"] = \"minute\";\n  ProductItemInterval2[\"Hour\"] = \"hour\";\n  ProductItemInterval2[\"Day\"] = \"day\";\n  ProductItemInterval2[\"Week\"] = \"week\";\n  ProductItemInterval2[\"Month\"] = \"month\";\n  ProductItemInterval2[\"Quarter\"] = \"quarter\";\n  ProductItemInterval2[\"SemiAnnual\"] = \"semi_annual\";\n  ProductItemInterval2[\"Year\"] = \"year\";\n  ProductItemInterval2[\"Multiple\"] = \"multiple\";\n  return ProductItemInterval2;\n})(ProductItemInterval || {});\n\n// src/sdk/components/componentMethods.ts\nvar fetchPricingTable = async ({\n  instance,\n  params\n}) => {\n  let path = \"/components/pricing_table\";\n  if (params) {\n    const queryParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(params)) {\n      if (key === \"products\") {\n        continue;\n      }\n      if (value !== void 0) {\n        queryParams.append(key, String(value));\n      }\n    }\n    const queryString = queryParams.toString();\n    if (queryString) {\n      path += `?${queryString}`;\n    }\n  }\n  return await instance.get(path);\n};\n\nexport { AppEnv, Autumn, AutumnError, FreeTrialDuration, Infinite, ProductItemInterval, ProductStatus, UsageModel, fetchPricingTable, toContainerResult };\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,8]}