{"version":3,"sources":["turbopack:///[project]/node_modules/@vercel/analytics/src/nextjs/index.tsx","turbopack:///[project]/node_modules/@vercel/analytics/src/nextjs/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/package.json","turbopack:///[project]/node_modules/@vercel/analytics/src/queue.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/generic.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/react/utils.ts","turbopack:///[project]/node_modules/@vercel/analytics/src/react/index.tsx","turbopack:///[project]/node_modules/@tanstack/react-query-devtools/src/index.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/queryCache.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/mutationCache.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts","turbopack:///[project]/node_modules/@tanstack/query-core/src/queryClient.ts","turbopack:///[project]/lib/query-client.ts","turbopack:///[project]/components/providers/query-provider.tsx"],"sourcesContent":["'use client';\nimport React, { Suspense, type ReactNode } from 'react';\nimport { Analytics as AnalyticsScript } from '../react';\nimport type { AnalyticsProps, BeforeSend, BeforeSendEvent } from '../types';\nimport { getBasePath, useRoute } from './utils';\n\ntype Props = Omit<AnalyticsProps, 'route' | 'disableAutoTrack'>;\n\nfunction AnalyticsComponent(props: Props): ReactNode {\n  const { route, path } = useRoute();\n  return (\n    <AnalyticsScript\n      path={path}\n      route={route}\n      {...props}\n      basePath={getBasePath()}\n      framework=\"next\"\n    />\n  );\n}\n\nexport function Analytics(props: Props): null {\n  // Because of incompatible types between ReactNode in React 19 and React 18 we return null (which is also what we render)\n  return (\n    <Suspense fallback={null}>\n      <AnalyticsComponent {...props} />\n    </Suspense>\n  ) as never;\n}\n\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n","'use client';\n/* eslint-disable @typescript-eslint/no-unnecessary-condition -- can be empty in pages router */\nimport { useParams, usePathname, useSearchParams } from 'next/navigation.js';\nimport { computeRoute } from '../utils';\n\nexport const useRoute = (): {\n  route: string | null;\n  path: string;\n} => {\n  const params = useParams();\n  const searchParams = useSearchParams();\n  const path = usePathname();\n\n  // Until we have route parameters, we don't compute the route\n  if (!params) {\n    return { route: null, path };\n  }\n  // in Next.js@13, useParams() could return an empty object for pages router, and we default to searchParams.\n  const finalParams = Object.keys(params).length\n    ? params\n    : Object.fromEntries(searchParams.entries());\n  return { route: computeRoute(path, finalParams), path };\n};\n\nexport function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.NEXT_PUBLIC_VERCEL_OBSERVABILITY_BASEPATH;\n}\n","{\n  \"name\": \"@vercel/analytics\",\n  \"version\": \"1.5.0\",\n  \"description\": \"Gain real-time traffic insights with Vercel Web Analytics\",\n  \"keywords\": [\n    \"analytics\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/analytics\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"MPL-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./server\": {\n      \"node\": \"./dist/server/index.mjs\",\n      \"edge-light\": \"./dist/server/index.mjs\",\n      \"import\": \"./dist/server/index.mjs\",\n      \"require\": \"./dist/server/index.js\",\n      \"default\": \"./dist/server/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"server\": [\n        \"dist/server/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"@vercel/eslint-config\"\n    ],\n    \"rules\": {\n      \"tsdoc/syntax\": \"off\"\n    },\n    \"ignorePatterns\": [\n      \"jest.setup.ts\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.0\",\n    \"@types/react\": \"^18.3.12\",\n    \"@vercel/eslint-config\": \"workspace:0.0.0\",\n    \"server-only\": \"^0.0.1\",\n    \"svelte\": \"^5.1.10\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.12\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@remix-run/react\": \"^2\",\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@remix-run/react\": {\n      \"optional\": true\n    },\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import type { AllowedPropertyValues, AnalyticsProps, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  const mode = isBrowser() ? window.vam : detectEnvironment();\n  return mode || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest }\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown> | undefined,\n  options: {\n    strip?: boolean;\n  }\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  if (!properties) return undefined;\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', '\n      )}. Only strings, numbers, booleans, and null are allowed.`\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: AnalyticsProps & { basePath?: string }\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/script.debug.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/insights/script.js`;\n  }\n  return '/_vercel/insights/script.js';\n}\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type {\n  AllowedPropertyValues,\n  AnalyticsProps,\n  FlagsDataInput,\n  BeforeSend,\n  BeforeSendEvent,\n} from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n  computeRoute,\n  getScriptSrc,\n} from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n * @param [props.disableAutoTrack] - Whether the injected script should track page views from pushState events. Disable if route is updated after pushState, a manually call page pageview().\n */\nfunction inject(\n  props: AnalyticsProps & {\n    framework?: string;\n    disableAutoTrack?: boolean;\n    basePath?: string;\n  } = {\n    debug: true,\n  }\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.disableAutoTrack) {\n    script.dataset.disableAutoTrack = '1';\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/insights`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n\n  script.onerror = (): void => {\n    const errorMessage = isDevelopment()\n      ? 'Please check if any ad blockers are enabled and try again.'\n      : 'Be sure to enable Web Analytics for your project and deploy again. See https://vercel.com/docs/analytics/quickstart for more information.';\n\n    // eslint-disable-next-line no-console -- Logging to console is intentional\n    console.log(\n      `[Vercel Web Analytics] Failed to load script from ${src}. ${errorMessage}`\n    );\n  };\n\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nfunction track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n  options?: {\n    flags?: FlagsDataInput;\n  }\n): void {\n  if (!isBrowser()) {\n    const msg =\n      '[Vercel Web Analytics] Please import `track` from `@vercel/analytics/server` when using this function in a server environment';\n\n    if (isProduction()) {\n      // eslint-disable-next-line no-console -- Show warning in production\n      console.warn(msg);\n    } else {\n      throw new Error(msg);\n    }\n\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name, options });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n      options,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console -- Logging to console is intentional\n      console.error(err);\n    }\n  }\n}\n\nfunction pageview({\n  route,\n  path,\n}: {\n  route?: string | null;\n  path?: string;\n}): void {\n  window.va?.('pageview', { route, path });\n}\n\nexport { inject, track, pageview, computeRoute };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n\n// eslint-disable-next-line import/no-default-export -- Default export is intentional\nexport default {\n  inject,\n  track,\n  computeRoute,\n};\n","export function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n}\n","'use client';\nimport { useEffect } from 'react';\nimport { inject, track, pageview } from '../generic';\nimport type { AnalyticsProps, BeforeSend, BeforeSendEvent } from '../types';\nimport { getBasePath } from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @example\n * ```js\n * import { Analytics } from '@vercel/analytics/react';\n *\n * export default function App() {\n *  return (\n *   <div>\n *    <Analytics />\n *    <h1>My App</h1>\n *  </div>\n * );\n * }\n * ```\n */\nfunction Analytics(\n  props: AnalyticsProps & {\n    framework?: string;\n    route?: string | null;\n    path?: string | null;\n    basePath?: string;\n  }\n): null {\n  useEffect(() => {\n    if (props.beforeSend) {\n      window.va?.('beforeSend', props.beforeSend);\n    }\n  }, [props.beforeSend]);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only run once\n  useEffect(() => {\n    inject({\n      framework: props.framework || 'react',\n      basePath: props.basePath ?? getBasePath(),\n      ...(props.route !== undefined && { disableAutoTrack: true }),\n      ...props,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- only run once\n  }, []);\n\n  useEffect(() => {\n    // explicitely track page view, since we disabled auto tracking\n    if (props.route && props.path) {\n      pageview({ route: props.route, path: props.path });\n    }\n  }, [props.route, props.path]);\n\n  return null;\n}\n\nexport { track, Analytics };\nexport type { AnalyticsProps, BeforeSend, BeforeSendEvent };\n","'use client'\n\nimport * as Devtools from './ReactQueryDevtools'\nimport * as DevtoolsPanel from './ReactQueryDevtoolsPanel'\n\nexport const ReactQueryDevtools: (typeof Devtools)['ReactQueryDevtools'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : Devtools.ReactQueryDevtools\n\nexport const ReactQueryDevtoolsPanel: (typeof DevtoolsPanel)['ReactQueryDevtoolsPanel'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : DevtoolsPanel.ReactQueryDevtoolsPanel\n","import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n","import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type { DefaultError, MutationOptions, NotifyEvent } from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Set<Mutation<any, any, any, any>>\n  #scopes: Map<string, Array<Mutation<any, any, any, any>>>\n  #mutationId: number\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = new Set()\n    this.#scopes = new Map()\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.add(mutation)\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const scopedMutations = this.#scopes.get(scope)\n      if (scopedMutations) {\n        scopedMutations.push(mutation)\n      } else {\n        this.#scopes.set(scope, [mutation])\n      }\n    }\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation)\n      if (typeof scope === 'string') {\n        const scopedMutations = this.#scopes.get(scope)\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation)\n            if (index !== -1) {\n              scopedMutations.splice(index, 1)\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope)\n          }\n        }\n      }\n    }\n\n    // Currently we notify the removal even if the mutation was already removed.\n    // Consider making this an error or not notifying of the removal depending on the desired semantics.\n    this.notify({ type: 'removed', mutation })\n  }\n\n  canRun(mutation: Mutation<any, any, any, any>): boolean {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const mutationsWithSameScope = this.#scopes.get(scope)\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === 'pending',\n      )\n      // we can run if there is no current pending mutation (start use-case)\n      // or if WE are the first pending mutation (continue use-case)\n      return !firstPendingMutation || firstPendingMutation === mutation\n    } else {\n      // For unscoped mutations there are never any pending mutations in front of the\n      // current mutation\n      return true\n    }\n  }\n\n  runNext(mutation: Mutation<any, any, any, any>): Promise<unknown> {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const foundMutation = this.#scopes\n        .get(scope)\n        ?.find((m) => m !== mutation && m.state.isPaused)\n\n      return foundMutation?.continue() ?? Promise.resolve()\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: 'removed', mutation })\n      })\n      this.#mutations.clear()\n      this.#scopes.clear()\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return Array.from(this.#mutations)\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TContext = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    ) as Mutation<TData, TError, TVariables, TContext> | undefined\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused)\n\n    return notifyManager.batch(() =>\n      Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop)),\n      ),\n    )\n  }\n}\n\nfunction scopeFor(mutation: Mutation<any, any, any, any>) {\n  return mutation.options.scope?.id\n}\n","import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const createQueryFnContext = () => {\n            const queryFnContext: OmitKeyof<\n              QueryFunctionContext<QueryKey, unknown>,\n              'signal'\n            > = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? 'backward' : 'forward',\n              meta: context.options.meta,\n            }\n            addSignalProperty(queryFnContext)\n            return queryFnContext as QueryFunctionContext<QueryKey, unknown>\n          }\n\n          const queryFnContext = createQueryFnContext()\n\n          const page = await queryFn(queryFnContext)\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n","import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureInfiniteQueryDataOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InferDataFromTag,\n  InferErrorFromTag,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  NoInfer,\n  OmitKeyof,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { QueryState } from './query'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: OmitKeyof<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching<TQueryFilters extends QueryFilters<any> = QueryFilters>(\n    filters?: TQueryFilters,\n  ): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating<\n    TMutationFilters extends MutationFilters<any, any> = MutationFilters,\n  >(filters?: TMutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n\n    return this.#queryCache.get<TInferredQueryFnData>(options.queryHash)?.state\n      .data\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n    const query = this.#queryCache.build(this, defaultedOptions)\n    const cachedData = query.state.data\n\n    if (cachedData === undefined) {\n      return this.fetchQuery(options)\n    }\n\n    if (\n      options.revalidateIfStale &&\n      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))\n    ) {\n      void this.prefetchQuery(defaultedOptions)\n    }\n\n    return Promise.resolve(cachedData)\n  }\n\n  getQueriesData<\n    TQueryFnData = unknown,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(filters: TQueryFilters): Array<[QueryKey, TQueryFnData | undefined]> {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data as TQueryFnData | undefined\n      return [queryKey, data]\n    })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): NoInfer<TInferredQueryFnData> | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<\n    TQueryFnData,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(\n    filters: TQueryFilters,\n    updater: Updater<\n      NoInfer<TQueryFnData> | undefined,\n      NoInfer<TQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TInferredError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TInferredError>(\n      options.queryHash,\n    )?.state\n  }\n\n  removeQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n  ): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    options?: ResetOptions,\n  ): Promise<void> {\n    const queryCache = this.#queryCache\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(\n        {\n          type: 'active',\n          ...filters,\n        },\n        options,\n      )\n    })\n  }\n\n  cancelQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: InvalidateQueryFilters<TTaggedQueryKey>,\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters?.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? 'active',\n        },\n        options,\n      )\n    })\n  }\n\n  refetchQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: RefetchQueryFilters<TTaggedQueryKey>,\n    options: RefetchOptions = {},\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled() && !query.isStatic())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query),\n    )\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options as any)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  ensureInfiniteQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: EnsureInfiniteQueryDataOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n\n    return this.ensureQueryData(options as any)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n  >(\n    queryKey: QueryKey,\n    options: Partial<\n      OmitKeyof<\n        QueryObserverOptions<TQueryFnData, TError, TData, TQueryData>,\n        'queryKey'\n      >\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): OmitKeyof<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    const result: OmitKeyof<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = void,\n    TContext = unknown,\n  >(\n    mutationKey: MutationKey,\n    options: OmitKeyof<\n      MutationObserverOptions<TData, TError, TVariables, TContext>,\n      'mutationKey'\n    >,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): OmitKeyof<MutationObserverOptions<any, any, any, any>, 'mutationKey'> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    const result: OmitKeyof<\n      MutationObserverOptions<any, any, any, any>,\n      'mutationKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n","/**\n * Centralized React Query client configuration for the entire application.\n * Provides consistent defaults for caching, retries, and refetch behavior.\n * Used by QueryProvider to enable react-query functionality app-wide.\n */\nimport { QueryClient } from '@tanstack/react-query'\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      // Stale time: 5 minutes - data is considered fresh for 5 minutes\n      staleTime: 5 * 60 * 1000,\n      // Cache time: 10 minutes - data stays in cache for 10 minutes after becoming unused\n      gcTime: 10 * 60 * 1000,\n      // Retry failed requests 3 times with exponential backoff\n      retry: 3,\n      // Refetch on window focus for fresh data\n      refetchOnWindowFocus: true,\n      // Refetch on reconnect\n      refetchOnReconnect: true,\n      // Don't refetch on mount if data is fresh\n      refetchOnMount: true,\n    },\n    mutations: {\n      // Retry failed mutations once\n      retry: 1,\n    },\n  },\n}) ","'use client'\n\nimport { QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\nimport { queryClient } from '@/lib/query-client'\n\ninterface QueryProviderProps {\n  children: React.ReactNode\n}\n\nexport function QueryProvider({ children }: QueryProviderProps) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {/* Only show devtools in development */}\n      {process.env.NODE_ENV === 'development' && (\n        <ReactQueryDevtools initialIsOpen={false} />\n      )}\n    </QueryClientProvider>\n  )\n} "],"names":["getBasePath","Analytics","ReactQueryDevtools","ReactQueryDevtoolsPanel","queryFnContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}