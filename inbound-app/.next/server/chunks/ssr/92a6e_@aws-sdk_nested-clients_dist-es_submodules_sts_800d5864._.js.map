{"version":3,"sources":["turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/index.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/index.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@aws-sdk/credential-provider-node/node_modules/@aws-sdk/credential-provider-ini/node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js"],"sourcesContent":["export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    });\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import packageInfo from \"../../../package.json\";\nimport { AwsSdkSigV4Signer, NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion, } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => Object.assign(input, {\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return Object.assign(config_1, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n","import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n","export * from \"./AssumeRoleCommand\";\nexport * from \"./AssumeRoleWithWebIdentityCommand\";\n","export * from \"./models_0\";\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n","export * from \"./STSClient\";\nexport * from \"./STS\";\nexport * from \"./commands\";\nexport * from \"./models\";\nexport * from \"./defaultRoleAssumers\";\nexport { STSServiceException } from \"./models/STSServiceException\";\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}