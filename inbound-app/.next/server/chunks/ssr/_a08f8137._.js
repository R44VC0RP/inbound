module.exports={644399:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({AWSSESReceiptRuleManager:()=>b});var d=a.i(589734),e=a.i(139035),f=a.i(778105),g=a.i(274805),h=a.i(634249),i=a.i(247278),j=a.i(251045);class b{sesClient;region;constructor(a="us-east-2"){this.region=a,this.sesClient=new d.SESClient({region:a})}async configureEmailReceiving(a){let b=a.ruleSetName||"inbound-email-rules",c=`${a.domain}-rule`;try{console.log(`🔧 SES Rules - Configuring email receiving for domain: ${a.domain}`),console.log(`📧 SES Rules - Email addresses: ${a.emailAddresses.join(", ")}`),await this.ensureRuleSetExists(b);let d=await this.getRuleIfExists(b,c),e=a.emailAddresses.length>0?a.emailAddresses:[a.domain];if(d&&d.Recipients){let a=d.Recipients||[];console.log(`📋 SES Rules - Existing recipients: ${a.join(", ")}`);let b=new Set([...a,...e]);e=Array.from(b),console.log(`🔀 SES Rules - Merged recipients: ${e.join(", ")}`)}let h={Name:c,Enabled:!0,Recipients:e,Actions:[{S3Action:{BucketName:a.s3BucketName,ObjectKeyPrefix:`emails/${a.domain}/`,TopicArn:void 0}},{LambdaAction:{FunctionArn:a.lambdaFunctionArn,InvocationType:"Event"}}]},i="created";if(d){console.log(`🔄 SES Rules - Updating existing rule: ${c}`);let a=new g.UpdateReceiptRuleCommand({RuleSetName:b,Rule:h});await this.sesClient.send(a),i="updated"}else{console.log(`➕ SES Rules - Creating new rule: ${c}`);let a=new f.CreateReceiptRuleCommand({RuleSetName:b,Rule:h});await this.sesClient.send(a),i="created"}return await this.setActiveRuleSet(b),console.log(`✅ SES Rules - Successfully ${i} rule for ${a.domain}`),{ruleName:c,domain:a.domain,emailAddresses:e,status:i,isCatchAll:a.isCatchAll,catchAllWebhookId:a.catchAllWebhookId}}catch(b){return console.error("💥 SES Rules - Failed to configure email receiving:",b),{ruleName:c,domain:a.domain,emailAddresses:a.emailAddresses,status:"failed",error:b instanceof Error?b.message:"Unknown error",isCatchAll:a.isCatchAll,catchAllWebhookId:a.catchAllWebhookId}}}async removeEmailReceiving(a,b="inbound-email-rules"){try{let c=`${a}-rule`,d=new h.DeleteReceiptRuleCommand({RuleSetName:b,RuleName:c});return await this.sesClient.send(d),!0}catch(a){return console.error("Failed to remove receipt rule:",a),!1}}async getRuleIfExists(a,b){try{let c=new i.DescribeReceiptRuleSetCommand({RuleSetName:a}),d=await this.sesClient.send(c);return d.Rules?.find(a=>a.Name===b)||null}catch(c){return console.log(`📋 SES Rules - Rule set ${a} does not exist or rule ${b} not found`),null}}async ensureRuleSetExists(a){try{await this.sesClient.send(new i.DescribeReceiptRuleSetCommand({RuleSetName:a}))}catch(b){if(b instanceof Error&&"RuleSetDoesNotExistException"===b.name)await this.sesClient.send(new e.CreateReceiptRuleSetCommand({RuleSetName:a}));else throw b}}async setActiveRuleSet(a){await this.sesClient.send(new j.SetActiveReceiptRuleSetCommand({RuleSetName:a}))}static getLambdaFunctionArn(a,b,c){return`arn:aws:lambda:${c}:${b}:function:${a}`}static isValidEmailAddress(a){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(a)}static extractDomain(a){return a.split("@")[1]||""}async configureCatchAllDomain(a){let b=a.ruleSetName||"inbound-email-rules",c=`${a.domain}-catchall-rule`,d=`${a.domain}-rule`;try{console.log(`🌐 SES Rules - Configuring catch-all for domain: ${a.domain}`),console.log(`🪝 SES Rules - Webhook ID: ${a.webhookId}`),await this.ensureRuleSetExists(b),await this.getRuleIfExists(b,d)&&(console.log(`🗑️ SES Rules - Removing individual email rule to prevent conflicts: ${d}`),await this.sesClient.send(new h.DeleteReceiptRuleCommand({RuleSetName:b,RuleName:d})));let e={Name:c,Enabled:!0,Recipients:[a.domain],Actions:[{S3Action:{BucketName:a.s3BucketName,ObjectKeyPrefix:`emails/${a.domain}/catchall/`,TopicArn:void 0}},{LambdaAction:{FunctionArn:a.lambdaFunctionArn,InvocationType:"Event"}}]},i=await this.getRuleIfExists(b,c),j="created";if(i){console.log(`🔄 SES Rules - Updating existing catch-all rule: ${c}`);let a=new g.UpdateReceiptRuleCommand({RuleSetName:b,Rule:e});await this.sesClient.send(a),j="updated"}else{console.log(`➕ SES Rules - Creating new catch-all rule: ${c}`);let a=new f.CreateReceiptRuleCommand({RuleSetName:b,Rule:e});await this.sesClient.send(a),j="created"}return await this.setActiveRuleSet(b),console.log(`✅ SES Rules - Successfully ${j} catch-all rule for ${a.domain}`),{ruleName:c,domain:a.domain,emailAddresses:[a.domain],status:j,isCatchAll:!0,catchAllWebhookId:a.webhookId}}catch(b){return console.error("💥 SES Rules - Failed to configure catch-all:",b),{ruleName:c,domain:a.domain,emailAddresses:[a.domain],status:"failed",error:b instanceof Error?b.message:"Unknown error",isCatchAll:!0,catchAllWebhookId:a.webhookId}}}async removeCatchAllDomain(a,b="inbound-email-rules"){try{let c=`${a}-catchall-rule`,d=new h.DeleteReceiptRuleCommand({RuleSetName:b,RuleName:c});return await this.sesClient.send(d),console.log(`✅ SES Rules - Successfully removed catch-all rule for ${a}`),!0}catch(a){return console.error("Failed to remove catch-all receipt rule:",a),!1}}async isCatchAllConfigured(a,b="inbound-email-rules"){let c=`${a}-catchall-rule`;return null!==await this.getRuleIfExists(b,c)}async getDomainRules(a,b="inbound-email-rules"){let c=`${a}-rule`,d=`${a}-catchall-rule`;return{individualRule:await this.getRuleIfExists(b,c),catchAllRule:await this.getRuleIfExists(b,d)}}async restoreIndividualEmailRules(a,b,c,d,e="inbound-email-rules"){let g=`${a}-rule`;try{if(console.log(`🔄 SES Rules - Restoring individual email rules for domain: ${a}`),console.log(`📧 SES Rules - Email addresses: ${b.join(", ")}`),0===b.length)return console.log(`⚠️ SES Rules - No email addresses to restore for ${a}`),{ruleName:g,domain:a,emailAddresses:[],status:"created",isCatchAll:!1};let h={Name:g,Enabled:!0,Recipients:b,Actions:[{S3Action:{BucketName:d,ObjectKeyPrefix:`emails/${a}/`,TopicArn:void 0}},{LambdaAction:{FunctionArn:c,InvocationType:"Event"}}]};console.log(`➕ SES Rules - Creating individual email rule: ${g}`);let i=new f.CreateReceiptRuleCommand({RuleSetName:e,Rule:h});return await this.sesClient.send(i),await this.setActiveRuleSet(e),console.log(`✅ SES Rules - Successfully restored individual email rules for ${a}`),{ruleName:g,domain:a,emailAddresses:b,status:"created",isCatchAll:!1}}catch(c){return console.error("💥 SES Rules - Failed to restore individual email rules:",c),{ruleName:g,domain:a,emailAddresses:b,status:"failed",error:c instanceof Error?c.message:"Unknown error",isCatchAll:!1}}}}}},498718:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({addEmailAddress:()=>s,deleteEmailAddress:()=>t,disableDomainCatchAll:()=>x,downloadAttachment:()=>J,enableDomainCatchAll:()=>w,generateAutumnBillingPortal:()=>q,getAllDomainsForAdmin:()=>K,getAutumnCustomer:()=>r,getDomainCatchAllStatus:()=>y,getDomainEmailAddressesForAdmin:()=>L,getDomainStats:()=>z,getEmailAddresses:()=>u,getEmailDetails:()=>B,getEmailDetailsFromParsed:()=>C,getEmailsList:()=>D,getUnifiedEmailLogs:()=>M,getUserEmailLogs:()=>E,markAllEmailsAsRead:()=>G,markEmailAsRead:()=>F,parseEmail:()=>H,syncDomainsWithAWS:()=>A,updateEmailWebhook:()=>v});var d=a.i(930768);a.i(996945);var e=a.i(107729),f=a.i(409950),g=a.i(678270),h=a.i(900707);a.i(508384);var i=a.i(954523),j=a.i(287211),k=a.i(988777),l=a.i(746362),m=a.i(737169),n=a.i(14394),o=a.i(644399),p=a.i(988668);async function q(){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{error:"Unauthorized"};let{data:b,error:c}=await g.Autumn.customers.billingPortal(a.user.id,{return_url:`${process.env.BETTER_AUTH_URL}/settings`});return c||!b?.url?{error:"Failed to create billing portal session"}:{url:b.url}}async function r(){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{error:"Unauthorized"};let{data:b,error:c}=await g.Autumn.customers.get(a.user.id);return c||!b?{error:"Failed to fetch customer"}:{customer:b}}async function s(b,c,d,g){try{let j=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!j?.user?.id)return{error:"Unauthorized"};if(console.log("📧 Creating email address:",{emailAddress:c,webhookId:d,endpointId:g,domainId:b}),!b||!c)return{error:"Domain ID and email address are required"};if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(c))return{error:"Invalid email address format"};if(g){let{endpoints:b}=await a.r(913004)(a.i),c=await h.db.select().from(b).where((0,k.and)((0,k.eq)(b.id,g),(0,k.eq)(b.userId,j.user.id))).limit(1);if(!c[0])return{error:"Endpoint not found or does not belong to user"};if(!c[0].isActive)return{error:"Selected endpoint is disabled"}}else if(d){let a=await h.db.select().from(i.webhooks).where((0,k.and)((0,k.eq)(i.webhooks.id,d),(0,k.eq)(i.webhooks.userId,j.user.id))).limit(1);if(!a[0])return{error:"Webhook not found or does not belong to user"};if(!a[0].isActive)return{error:"Selected webhook is disabled"}}let l=await h.db.select().from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,b),(0,k.eq)(i.emailDomains.userId,j.user.id))).limit(1);if(!l[0])return{error:"Domain not found"};let m=l[0];if("verified"!==m.status)return{error:"Domain must be fully verified before adding email addresses"};if((await h.db.select().from(i.emailAddresses).where((0,k.eq)(i.emailAddresses.address,c)).limit(1))[0])return{error:"Email address already exists"};if(c.split("@")[1]!==m.domain)return{error:`Email address must belong to domain ${m.domain}`};let p={id:(0,n.nanoid)(),address:c,domainId:b,webhookId:d||null,endpointId:g||null,userId:j.user.id,isActive:!0,isReceiptRuleConfigured:!1,updatedAt:new Date},[q]=await h.db.insert(i.emailAddresses).values(p).returning();try{let a=new o.AWSSESReceiptRuleManager,b=process.env.AWS_REGION||"us-east-2",d=process.env.LAMBDA_FUNCTION_NAME||"email-processor",e=process.env.S3_BUCKET_NAME,f=process.env.AWS_ACCOUNT_ID;if(!e||!f)return{success:!0,data:{id:q.id,address:q.address,isActive:!0,isReceiptRuleConfigured:!1,receiptRuleName:null,createdAt:q.createdAt,emailsLast24h:0,warning:"AWS configuration incomplete. Missing S3_BUCKET_NAME or AWS_ACCOUNT_ID"}};let g=o.AWSSESReceiptRuleManager.getLambdaFunctionArn(d,f,b),j=await a.configureEmailReceiving({domain:m.domain,emailAddresses:[c],lambdaFunctionArn:g,s3BucketName:e});if("created"===j.status||"updated"===j.status)return await h.db.update(i.emailAddresses).set({isReceiptRuleConfigured:!0,receiptRuleName:j.ruleName,updatedAt:new Date}).where((0,k.eq)(i.emailAddresses.id,q.id)),{success:!0,data:{id:q.id,address:q.address,isActive:!0,isReceiptRuleConfigured:!0,receiptRuleName:j.ruleName,createdAt:q.createdAt,emailsLast24h:0}};return{success:!0,data:{id:q.id,address:q.address,isActive:!0,isReceiptRuleConfigured:!1,receiptRuleName:null,createdAt:q.createdAt,emailsLast24h:0,warning:"Email address created but SES configuration failed"}}}catch(a){return console.error("SES configuration error:",a),{success:!0,data:{id:q.id,address:q.address,isActive:!0,isReceiptRuleConfigured:!1,receiptRuleName:null,createdAt:q.createdAt,emailsLast24h:0,warning:"Email address created but SES configuration failed"}}}}catch(a){return console.error("Error adding email address:",a),{error:"Failed to add email address"}}}async function t(a,b){try{let c=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!c?.user?.id)return{error:"Unauthorized"};if(!a||!b)return{error:"Domain ID and email address ID are required"};if(!(await h.db.select().from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,a),(0,k.eq)(i.emailDomains.userId,c.user.id))).limit(1))[0])return{error:"Domain not found"};if(!(await h.db.select().from(i.emailAddresses).where((0,k.and)((0,k.eq)(i.emailAddresses.id,b),(0,k.eq)(i.emailAddresses.domainId,a),(0,k.eq)(i.emailAddresses.userId,c.user.id))).limit(1))[0])return{error:"Email address not found"};return await h.db.delete(i.emailAddresses).where((0,k.eq)(i.emailAddresses.id,b)),{success:!0,message:"Email address deleted successfully"}}catch(a){return console.error("Error deleting email address:",a),{error:"Failed to delete email address"}}}async function u(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if(!a)return{error:"Domain ID is required"};if(!(await h.db.select().from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,a),(0,k.eq)(i.emailDomains.userId,b.user.id))).limit(1))[0])return{error:"Domain not found"};let c=await h.db.select().from(i.emailAddresses).where((0,k.and)((0,k.eq)(i.emailAddresses.domainId,a),(0,k.eq)(i.emailAddresses.userId,b.user.id)));return{success:!0,data:c}}catch(a){return console.error("Error fetching email addresses:",a),{error:"Failed to fetch email addresses"}}}async function v(b,c,d,g){try{let j=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!j?.user?.id)return{error:"Unauthorized"};if(console.log("🔗 Updating endpoint assignment:",{emailId:c,webhookId:d,endpointId:g,domainId:b}),!(await h.db.select().from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,b),(0,k.eq)(i.emailDomains.userId,j.user.id))).limit(1))[0])return{error:"Domain not found"};if(!(await h.db.select().from(i.emailAddresses).where((0,k.and)((0,k.eq)(i.emailAddresses.id,c),(0,k.eq)(i.emailAddresses.domainId,b),(0,k.eq)(i.emailAddresses.userId,j.user.id))).limit(1))[0])return{error:"Email address not found"};if(g){let{endpoints:b}=await a.r(913004)(a.i),c=await h.db.select().from(b).where((0,k.and)((0,k.eq)(b.id,g),(0,k.eq)(b.userId,j.user.id))).limit(1);if(!c[0])return{error:"Endpoint not found or does not belong to user"};if(!c[0].isActive)return{error:"Selected endpoint is disabled"}}else if(d){let a=await h.db.select().from(i.webhooks).where((0,k.and)((0,k.eq)(i.webhooks.id,d),(0,k.eq)(i.webhooks.userId,j.user.id))).limit(1);if(!a[0])return{error:"Webhook not found or does not belong to user"};if(!a[0].isActive)return{error:"Selected webhook is disabled"}}let[l]=await h.db.update(i.emailAddresses).set({endpointId:g||null,webhookId:d||null,updatedAt:new Date}).where((0,k.and)((0,k.eq)(i.emailAddresses.id,c),(0,k.eq)(i.emailAddresses.userId,j.user.id))).returning();return{success:!0,data:l,message:g?"Endpoint assigned successfully":d?"Webhook assigned successfully":"Assignment removed successfully"}}catch(a){return console.error("Error updating endpoint assignment:",a),{error:"Failed to update endpoint assignment"}}}async function w(b,c,d){try{let g=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!g?.user?.id)return{error:"Unauthorized"};if(console.log("🌐 Enabling catch-all for domain:",{domainId:b,webhookId:c,endpointId:d}),!b||!c&&!d)return{error:"Domain ID and either webhook ID or endpoint ID are required"};let j=await h.db.select().from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,b),(0,k.eq)(i.emailDomains.userId,g.user.id))).limit(1);if(!j[0])return{error:"Domain not found"};let l=j[0];if("verified"!==l.status)return{error:"Domain must be fully verified before enabling catch-all"};let m=null,n=null;if(d){let{endpoints:b}=await a.r(913004)(a.i),c=await h.db.select().from(b).where((0,k.and)((0,k.eq)(b.id,d),(0,k.eq)(b.userId,g.user.id))).limit(1);if(!c[0])return{error:"Endpoint not found or does not belong to user"};if(!c[0].isActive)return{error:"Selected endpoint is disabled"};n=d}else if(c){let a=await h.db.select().from(i.webhooks).where((0,k.and)((0,k.eq)(i.webhooks.id,c),(0,k.eq)(i.webhooks.userId,g.user.id))).limit(1);if(!a[0])return{error:"Webhook not found or does not belong to user"};if(!a[0].isActive)return{error:"Selected webhook is disabled"};m=c}try{let a=new o.AWSSESReceiptRuleManager,c=process.env.AWS_REGION||"us-east-2",d=process.env.LAMBDA_FUNCTION_NAME||"email-processor",e=process.env.S3_BUCKET_NAME,f=process.env.AWS_ACCOUNT_ID;if(!e||!f)return{error:"AWS configuration incomplete. Missing S3_BUCKET_NAME or AWS_ACCOUNT_ID"};let g=o.AWSSESReceiptRuleManager.getLambdaFunctionArn(d,f,c),j=await a.configureCatchAllDomain({domain:l.domain,webhookId:m||"endpoint-based",lambdaFunctionArn:g,s3BucketName:e});if("created"!==j.status&&"updated"!==j.status)return{error:"Failed to configure SES catch-all rule",details:j.error};{let[a]=await h.db.update(i.emailDomains).set({isCatchAllEnabled:!0,catchAllWebhookId:m,catchAllEndpointId:n,catchAllReceiptRuleName:j.ruleName,updatedAt:new Date}).where((0,k.eq)(i.emailDomains.id,b)).returning();return{success:!0,data:{domain:a.domain,isCatchAllEnabled:!0,catchAllWebhookId:m,catchAllEndpointId:n,receiptRuleName:j.ruleName,webhookUrl:m?"legacy-webhook":"endpoint-based"},message:"Catch-all enabled successfully"}}}catch(a){return console.error("SES catch-all configuration error:",a),{error:"Failed to configure SES catch-all rule",details:a instanceof Error?a.message:"Unknown SES error"}}}catch(a){return console.error("Error enabling domain catch-all:",a),{error:"Failed to enable catch-all for domain"}}}async function x(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if(console.log("🚫 Disabling catch-all for domain:",{domainId:a}),!a)return{error:"Domain ID is required"};let c=await h.db.select().from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,a),(0,k.eq)(i.emailDomains.userId,b.user.id))).limit(1);if(!c[0])return{error:"Domain not found"};let d=c[0];if(!d.isCatchAllEnabled)return{error:"Catch-all is not currently enabled for this domain"};let g=await h.db.select().from(i.emailAddresses).where((0,k.and)((0,k.eq)(i.emailAddresses.domainId,a),(0,k.eq)(i.emailAddresses.userId,b.user.id),(0,k.eq)(i.emailAddresses.isActive,!0)));try{let b=new o.AWSSESReceiptRuleManager;if(!await b.removeCatchAllDomain(d.domain))return{error:"Failed to remove SES catch-all rule"};{if(g.length>0){let a=process.env.AWS_REGION||"us-east-2",c=process.env.LAMBDA_FUNCTION_NAME||"email-processor",e=process.env.S3_BUCKET_NAME,f=process.env.AWS_ACCOUNT_ID;if(e&&f){let h=o.AWSSESReceiptRuleManager.getLambdaFunctionArn(c,f,a),i=g.map(a=>a.address),j=await b.restoreIndividualEmailRules(d.domain,i,h,e);"created"===j.status?console.log(`✅ Restored individual email rules for ${g.length} addresses`):console.warn(`⚠️ Failed to restore individual email rules: ${j.error}`)}}let[c]=await h.db.update(i.emailDomains).set({isCatchAllEnabled:!1,catchAllWebhookId:null,catchAllEndpointId:null,catchAllReceiptRuleName:null,updatedAt:new Date}).where((0,k.eq)(i.emailDomains.id,a)).returning();return{success:!0,data:{domain:c.domain,isCatchAllEnabled:!1,restoredEmailCount:g.length},message:`Catch-all disabled successfully${g.length>0?` and restored ${g.length} individual email addresses`:""}`}}}catch(a){return console.error("SES catch-all removal error:",a),{error:"Failed to remove SES catch-all rule",details:a instanceof Error?a.message:"Unknown SES error"}}}catch(a){return console.error("Error disabling domain catch-all:",a),{error:"Failed to disable catch-all for domain"}}}async function y(b){try{let c=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!c?.user?.id)return{error:"Unauthorized"};if(!b)return{error:"Domain ID is required"};let d=await h.db.select({id:i.emailDomains.id,domain:i.emailDomains.domain,status:i.emailDomains.status,isCatchAllEnabled:i.emailDomains.isCatchAllEnabled,catchAllWebhookId:i.emailDomains.catchAllWebhookId,catchAllEndpointId:i.emailDomains.catchAllEndpointId,catchAllReceiptRuleName:i.emailDomains.catchAllReceiptRuleName}).from(i.emailDomains).where((0,k.and)((0,k.eq)(i.emailDomains.id,b),(0,k.eq)(i.emailDomains.userId,c.user.id))).limit(1);if(!d[0])return{error:"Domain not found"};let g=d[0],j=null,l=null;if(g.isCatchAllEnabled)if(g.catchAllEndpointId){let{endpoints:b}=await a.r(913004)(a.i);l=(await h.db.select({id:b.id,name:b.name,type:b.type,isActive:b.isActive}).from(b).where((0,k.eq)(b.id,g.catchAllEndpointId)).limit(1))[0]||null}else g.catchAllWebhookId&&(j=(await h.db.select({id:i.webhooks.id,name:i.webhooks.name,url:i.webhooks.url,isActive:i.webhooks.isActive}).from(i.webhooks).where((0,k.eq)(i.webhooks.id,g.catchAllWebhookId)).limit(1))[0]||null);return{success:!0,data:{domain:g.domain,domainStatus:g.status,isCatchAllEnabled:g.isCatchAllEnabled,catchAllWebhookId:g.catchAllWebhookId,catchAllEndpointId:g.catchAllEndpointId,receiptRuleName:g.catchAllReceiptRuleName,webhook:j,endpoint:l}}}catch(a){return console.error("Error fetching domain catch-all status:",a),{error:"Failed to fetch catch-all status"}}}async function z(){try{let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{error:"Unauthorized"};let{data:b,error:c}=await g.Autumn.check({customer_id:a.user.id,feature_id:"domains"});c&&console.error("Failed to check domain limits:",c);let d=new Date(Date.now()-864e5),j=(await h.db.select({id:i.emailDomains.id,domain:i.emailDomains.domain,status:i.emailDomains.status,canReceiveEmails:i.emailDomains.canReceiveEmails,isCatchAllEnabled:i.emailDomains.isCatchAllEnabled,catchAllWebhookId:i.emailDomains.catchAllWebhookId,catchAllEndpointId:i.emailDomains.catchAllEndpointId,createdAt:i.emailDomains.createdAt,updatedAt:i.emailDomains.updatedAt,emailAddressCount:l.sql`COALESCE(${l.sql`(
                    SELECT COUNT(*)::int 
                    FROM ${i.emailAddresses} 
                    WHERE ${i.emailAddresses.domainId} = ${i.emailDomains.id} 
                    AND ${i.emailAddresses.isActive} = true
                )`}, 0)`,emailsLast24h:l.sql`COALESCE(${l.sql`(
                    SELECT COUNT(*)::int 
                    FROM ${i.sesEvents} 
                    WHERE EXISTS (
                        SELECT 1 
                        FROM jsonb_array_elements_text(${i.sesEvents.destination}::jsonb) AS dest_email
                        WHERE dest_email LIKE '%@' || ${i.emailDomains.domain}
                    )
                    AND ${i.sesEvents.timestamp} >= ${d}
                )`}, 0)`}).from(i.emailDomains).where((0,k.eq)(i.emailDomains.userId,a.user.id)).orderBy(i.emailDomains.createdAt)).map(a=>({id:a.id,domain:a.domain,status:a.status,isVerified:a.status===i.DOMAIN_STATUS.VERIFIED&&(a.canReceiveEmails||!1),isCatchAllEnabled:a.isCatchAllEnabled||!1,catchAllWebhookId:a.catchAllWebhookId||null,catchAllEndpointId:a.catchAllEndpointId||null,emailAddressCount:a.emailAddressCount,emailsLast24h:a.emailsLast24h,createdAt:a.createdAt?.toISOString()||"",updatedAt:a.updatedAt?.toISOString()||""}));return{domains:j,totalDomains:j.length,verifiedDomains:j.filter(a=>a.isVerified).length,totalEmailAddresses:j.reduce((a,b)=>a+b.emailAddressCount,0),totalEmailsLast24h:j.reduce((a,b)=>a+b.emailsLast24h,0),limits:b?{allowed:b.allowed,unlimited:b.unlimited||!1,balance:b.balance||null,current:j.length,remaining:b.unlimited?null:Math.max(0,(b.balance||0)-j.length)}:null}}catch(a){return console.error("Error fetching domain stats:",a),{error:"Failed to fetch domain statistics"}}}async function A(){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};let c=b.user.id,d=await h.db.select({id:i.emailDomains.id,domain:i.emailDomains.domain,status:i.emailDomains.status,canReceiveEmails:i.emailDomains.canReceiveEmails}).from(i.emailDomains).where((0,k.eq)(i.emailDomains.userId,c));if(0===d.length)return{success:!0,message:"No domains found for user",synced:0};try{let{SESClient:b,GetIdentityVerificationAttributesCommand:c}=await a.r(985182)(a.i),e=new b({region:process.env.AWS_REGION||"us-east-1",credentials:{accessKeyId:process.env.AWS_ACCESS_KEY_ID,secretAccessKey:process.env.AWS_SECRET_ACCESS_KEY}}),f=d.map(a=>a.domain),g=new c({Identities:f}),j=(await e.send(g)).VerificationAttributes||{},l=0,m=[];for(let a of d){let b=j[a.domain];if(b){let c="Success"===b.VerificationStatus,d=c?i.DOMAIN_STATUS.VERIFIED:a.status;a.status!==d||a.canReceiveEmails!==c?(await h.db.update(i.emailDomains).set({canReceiveEmails:c,status:d,lastSesCheck:new Date,updatedAt:new Date}).where((0,k.eq)(i.emailDomains.id,a.id)),l++,m.push({domain:a.domain,oldStatus:a.status,newStatus:d,canReceiveEmails:c,updated:!0})):m.push({domain:a.domain,status:a.status,canReceiveEmails:a.canReceiveEmails,updated:!1})}}return{success:!0,message:`Synced ${l} domains with AWS SES`,synced:l,total:d.length,results:m}}catch(a){return console.error("AWS SES sync error:",a),{error:"Failed to sync with AWS SES",details:a instanceof Error?a.message:"Unknown AWS error"}}}catch(a){return console.error("Domain sync error:",a),{error:"Failed to sync domains with AWS SES"}}}async function B(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if(!a)return{error:"Email ID is required"};let c=await h.db.select({id:i.structuredEmails.id,emailId:i.structuredEmails.emailId,messageId:i.structuredEmails.messageId,subject:i.structuredEmails.subject,date:i.structuredEmails.date,fromData:i.structuredEmails.fromData,toData:i.structuredEmails.toData,ccData:i.structuredEmails.ccData,bccData:i.structuredEmails.bccData,replyToData:i.structuredEmails.replyToData,inReplyTo:i.structuredEmails.inReplyTo,references:i.structuredEmails.references,textBody:i.structuredEmails.textBody,htmlBody:i.structuredEmails.htmlBody,rawContent:i.structuredEmails.rawContent,attachments:i.structuredEmails.attachments,headers:i.structuredEmails.headers,priority:i.structuredEmails.priority,parseSuccess:i.structuredEmails.parseSuccess,parseError:i.structuredEmails.parseError,userId:i.structuredEmails.userId,sesEventId:i.structuredEmails.sesEventId,createdAt:i.structuredEmails.createdAt,updatedAt:i.structuredEmails.updatedAt,emailContent:i.sesEvents.emailContent,spamVerdict:i.sesEvents.spamVerdict,virusVerdict:i.sesEvents.virusVerdict,spfVerdict:i.sesEvents.spfVerdict,dkimVerdict:i.sesEvents.dkimVerdict,dmarcVerdict:i.sesEvents.dmarcVerdict,actionType:i.sesEvents.actionType,s3BucketName:i.sesEvents.s3BucketName,s3ObjectKey:i.sesEvents.s3ObjectKey,s3ContentFetched:i.sesEvents.s3ContentFetched,s3ContentSize:i.sesEvents.s3ContentSize,s3Error:i.sesEvents.s3Error,commonHeaders:i.sesEvents.commonHeaders,processingTimeMillis:i.sesEvents.processingTimeMillis,timestamp:i.sesEvents.timestamp,receiptTimestamp:i.sesEvents.receiptTimestamp}).from(i.structuredEmails).leftJoin(i.sesEvents,(0,k.eq)(i.structuredEmails.sesEventId,i.sesEvents.id)).where((0,k.and)((0,k.eq)(i.structuredEmails.id,a),(0,k.eq)(i.structuredEmails.userId,b.user.id))).limit(1);if(0===c.length)return{error:"Email not found"};let d=c[0],g=null;if(d.fromData)try{g=JSON.parse(d.fromData)}catch(a){console.error("Failed to parse fromData:",a)}let j=null;if(d.toData)try{j=JSON.parse(d.toData)}catch(a){console.error("Failed to parse toData:",a)}let l=[];if(d.attachments)try{l=JSON.parse(d.attachments)}catch(a){console.error("Failed to parse attachments:",a)}let m={};if(d.headers)try{m=JSON.parse(d.headers)}catch(a){console.error("Failed to parse headers:",a)}let n=[];if(d.references)try{n=JSON.parse(d.references)}catch(a){console.error("Failed to parse references:",a)}let o=null;if(d.commonHeaders)try{o=JSON.parse(d.commonHeaders)}catch(a){console.error("Failed to parse common headers:",a)}let q=d.htmlBody?(0,p.sanitizeHtml)(d.htmlBody):null,r=j?.addresses?.[0]?.address||"unknown",s=g?.addresses?.[0]?.address||"unknown",t={id:d.id,emailId:d.emailId,messageId:d.messageId,from:s,to:j?.text||"",recipient:r,subject:d.subject,receivedAt:d.date,processedAt:d.createdAt,status:"processed",emailContent:{htmlBody:q,textBody:d.textBody,attachments:l,headers:m,rawContent:d.rawContent},parsedData:{fromData:g,toData:j,ccData:d.ccData?JSON.parse(d.ccData):null,bccData:d.bccData?JSON.parse(d.bccData):null,replyToData:d.replyToData?JSON.parse(d.replyToData):null,inReplyTo:d.inReplyTo,references:n,priority:d.priority,parseSuccess:d.parseSuccess,parseError:d.parseError},authResults:{spf:d.spfVerdict||"UNKNOWN",dkim:d.dkimVerdict||"UNKNOWN",dmarc:d.dmarcVerdict||"UNKNOWN",spam:d.spamVerdict||"UNKNOWN",virus:d.virusVerdict||"UNKNOWN"},metadata:{processingTime:d.processingTimeMillis,timestamp:d.timestamp,receiptTimestamp:d.receiptTimestamp,actionType:d.actionType,s3Info:{bucketName:d.s3BucketName,objectKey:d.s3ObjectKey,contentFetched:d.s3ContentFetched,contentSize:d.s3ContentSize,error:d.s3Error},commonHeaders:o},createdAt:d.createdAt,updatedAt:d.updatedAt};return{success:!0,data:t}}catch(a){return console.error("Error fetching email details:",a),{error:"Failed to fetch email details"}}}async function C(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if(!a)return{error:"Email ID is required"};let c=await h.db.select({id:i.structuredEmails.id,emailId:i.structuredEmails.emailId,messageId:i.structuredEmails.messageId,subject:i.structuredEmails.subject,date:i.structuredEmails.date,fromData:i.structuredEmails.fromData,toData:i.structuredEmails.toData,ccData:i.structuredEmails.ccData,bccData:i.structuredEmails.bccData,replyToData:i.structuredEmails.replyToData,inReplyTo:i.structuredEmails.inReplyTo,references:i.structuredEmails.references,textBody:i.structuredEmails.textBody,htmlBody:i.structuredEmails.htmlBody,rawContent:i.structuredEmails.rawContent,attachments:i.structuredEmails.attachments,headers:i.structuredEmails.headers,priority:i.structuredEmails.priority,parseSuccess:i.structuredEmails.parseSuccess,parseError:i.structuredEmails.parseError,isRead:i.structuredEmails.isRead,readAt:i.structuredEmails.readAt,userId:i.structuredEmails.userId,createdAt:i.structuredEmails.createdAt,updatedAt:i.structuredEmails.updatedAt}).from(i.structuredEmails).where((0,k.and)((0,k.eq)(i.structuredEmails.id,a),(0,k.eq)(i.structuredEmails.userId,b.user.id))).limit(1);if(0===c.length)return{error:"Email not found"};let d=c[0],g=null;if(d.fromData)try{g=JSON.parse(d.fromData)}catch(a){console.error("Failed to parse fromData:",a)}let j=null;if(d.toData)try{j=JSON.parse(d.toData)}catch(a){console.error("Failed to parse toData:",a)}let l=[];if(d.attachments)try{l=JSON.parse(d.attachments)}catch(a){console.error("Failed to parse attachments:",a)}let m={};if(d.headers)try{m=JSON.parse(d.headers)}catch(a){console.error("Failed to parse headers:",a)}let n=[];if(d.references)try{n=JSON.parse(d.references)}catch(a){console.error("Failed to parse references:",a)}let o=d.htmlBody?(0,p.sanitizeHtml)(d.htmlBody):null,q=j?.addresses?.[0]?.address||"unknown",r=g?.addresses?.[0]?.address||"unknown",s={id:d.id,emailId:d.emailId,messageId:d.messageId,from:r,to:j?.text||"",recipient:q,subject:d.subject,receivedAt:d.date,processedAt:d.createdAt,status:"processed",isRead:d.isRead||!1,readAt:d.readAt,emailContent:{htmlBody:o,textBody:d.textBody,attachments:l,headers:m},parsedData:{fromData:g,toData:j,ccData:d.ccData?JSON.parse(d.ccData):null,bccData:d.bccData?JSON.parse(d.bccData):null,replyToData:d.replyToData?JSON.parse(d.replyToData):null,subject:d.subject,emailDate:d.date,inReplyTo:d.inReplyTo,references:n,priority:d.priority,attachmentCount:l.length,hasAttachments:l.length>0,hasTextBody:!!d.textBody,hasHtmlBody:!!d.htmlBody,parseSuccess:d.parseSuccess,parseError:d.parseError},createdAt:d.createdAt,updatedAt:d.updatedAt};return{success:!0,data:s}}catch(a){return console.error("Error fetching email details from parsed:",a),{error:"Failed to fetch email details"}}}async function D(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};let{limit:c=50,offset:d=0,searchQuery:g="",statusFilter:j="all",domainFilter:n="all"}=a||{},o=[(0,k.eq)(i.structuredEmails.userId,b.user.id)];"all"!==j&&"failed"===j?o.push((0,k.eq)(i.structuredEmails.parseSuccess,!1)):"all"!==j&&"processed"===j&&o.push((0,k.eq)(i.structuredEmails.parseSuccess,!0)),"all"!==n&&o.push(l.sql`${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address' LIKE ${`%@${n}`}`),g&&o.push(l.sql`(
                    ${i.structuredEmails.subject} ILIKE ${`%${g}%`} OR
                    ${i.structuredEmails.messageId} ILIKE ${`%${g}%`} OR
                    ${i.structuredEmails.fromData}::text ILIKE ${`%${g}%`} OR
                    ${i.structuredEmails.toData}::text ILIKE ${`%${g}%`}
                )`);let p=await h.db.select({id:i.structuredEmails.id,emailId:i.structuredEmails.emailId,messageId:i.structuredEmails.messageId,subject:i.structuredEmails.subject,date:i.structuredEmails.date,fromData:i.structuredEmails.fromData,toData:i.structuredEmails.toData,textBody:i.structuredEmails.textBody,htmlBody:i.structuredEmails.htmlBody,attachments:i.structuredEmails.attachments,parseSuccess:i.structuredEmails.parseSuccess,parseError:i.structuredEmails.parseError,createdAt:i.structuredEmails.createdAt,isRead:i.structuredEmails.isRead,readAt:i.structuredEmails.readAt}).from(i.structuredEmails).where((0,k.and)(...o)).orderBy((0,m.desc)(i.structuredEmails.date)).limit(c).offset(d),q=await h.db.select({count:l.sql`count(*)`}).from(i.structuredEmails).where((0,k.and)(...o)),r=q[0]?.count||0,s=await h.db.select({count:l.sql`count(*)`}).from(i.structuredEmails).where((0,k.and)((0,k.eq)(i.structuredEmails.userId,b.user.id),(0,k.eq)(i.structuredEmails.isRead,!1))),t=s[0]?.count||0,u=(await h.db.select({domain:l.sql`DISTINCT SPLIT_PART(${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address', '@', 2)`}).from(i.structuredEmails).where((0,k.eq)(i.structuredEmails.userId,b.user.id)).orderBy(l.sql`SPLIT_PART(${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address', '@', 2)`)).map(a=>a.domain).filter(Boolean),v=p.map(a=>{let b=null,c=null,d=[];try{a.fromData&&(b=JSON.parse(a.fromData)),a.toData&&(c=JSON.parse(a.toData)),a.attachments&&(d=JSON.parse(a.attachments))}catch(a){console.error("Failed to parse email data for display:",a)}let e=b?.addresses?.[0]?.address||"unknown",f=c?.addresses?.[0]?.address||"unknown",g=f.split("@")[1]||"",h="No preview available";return a.textBody?h=a.textBody.slice(0,150).replace(/\n/g," ").trim():a.htmlBody&&(h=a.htmlBody.replace(/<[^>]*>/g,"").slice(0,150).replace(/\n/g," ").trim()),{id:a.id,emailId:a.emailId,messageId:a.messageId,from:e,recipient:f,subject:a.subject||"No Subject",receivedAt:a.date?.toISOString()||a.createdAt?.toISOString(),status:a.parseSuccess?"processed":"failed",domain:g,isRead:a.isRead||!1,readAt:a.readAt?.toISOString()||null,parsedData:{fromData:b,toData:c,subject:a.subject,textContent:a.textBody||null,htmlContent:a.htmlBody||null,preview:h,attachmentCount:d.length,hasAttachments:d.length>0,emailDate:a.date?.toISOString(),parseSuccess:a.parseSuccess,parseError:a.parseError}}});return{success:!0,data:{emails:v,pagination:{total:r,limit:c,offset:d,hasMore:d+c<r},filters:{uniqueDomains:u},unreadCount:t}}}catch(a){return console.error("Error fetching emails list:",a),{error:"Failed to fetch emails list"}}}async function E(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};let{limit:c=50,offset:d=0,searchQuery:g="",statusFilter:j="all",domainFilter:n="all",timeRange:o="7d"}=a||{},p=null,q=new Date;switch(o){case"24h":p=new Date(q.getTime()-864e5);break;case"7d":default:p=new Date(q.getTime()-6048e5);break;case"30d":p=new Date(q.getTime()-2592e6);break;case"90d":p=new Date(q.getTime()-7776e6)}let r=[(0,k.eq)(i.structuredEmails.userId,b.user.id)];p&&r.push((0,k.gte)(i.structuredEmails.createdAt,p)),"all"!==n&&r.push(l.sql`${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address' LIKE ${`%@${n}`}`),g&&r.push(l.sql`(
                    ${i.structuredEmails.subject} ILIKE ${`%${g}%`} OR
                    ${i.structuredEmails.messageId} ILIKE ${`%${g}%`} OR
                    ${i.structuredEmails.fromData}::text ILIKE ${`%${g}%`} OR
                    ${i.structuredEmails.toData}::text ILIKE ${`%${g}%`}
                )`);let s=await h.db.select({id:i.structuredEmails.id,emailId:i.structuredEmails.emailId,messageId:i.structuredEmails.messageId,subject:i.structuredEmails.subject,date:i.structuredEmails.date,fromData:i.structuredEmails.fromData,toData:i.structuredEmails.toData,textBody:i.structuredEmails.textBody,htmlBody:i.structuredEmails.htmlBody,attachments:i.structuredEmails.attachments,parseSuccess:i.structuredEmails.parseSuccess,parseError:i.structuredEmails.parseError,createdAt:i.structuredEmails.createdAt,isRead:i.structuredEmails.isRead,readAt:i.structuredEmails.readAt,spfVerdict:i.sesEvents.spfVerdict,dkimVerdict:i.sesEvents.dkimVerdict,dmarcVerdict:i.sesEvents.dmarcVerdict,spamVerdict:i.sesEvents.spamVerdict,virusVerdict:i.sesEvents.virusVerdict,processingTimeMillis:i.sesEvents.processingTimeMillis,webhookDeliveryId:i.webhookDeliveries.id,webhookDeliveryStatus:i.webhookDeliveries.status,webhookDeliveryAttempts:i.webhookDeliveries.attempts,webhookDeliveryError:i.webhookDeliveries.error,webhookDeliveryTime:i.webhookDeliveries.deliveryTime,webhookDeliveryLastAttempt:i.webhookDeliveries.lastAttemptAt,webhookDeliveryResponseCode:i.webhookDeliveries.responseCode,webhookName:i.webhooks.name,webhookUrl:i.webhooks.url,endpointDeliveryId:i.endpointDeliveries.id,endpointDeliveryStatus:i.endpointDeliveries.status,endpointDeliveryType:i.endpointDeliveries.deliveryType,endpointDeliveryAttempts:i.endpointDeliveries.attempts,endpointDeliveryLastAttempt:i.endpointDeliveries.lastAttemptAt,endpointDeliveryResponseData:i.endpointDeliveries.responseData,endpointName:i.endpoints.name,endpointType:i.endpoints.type,endpointConfig:i.endpoints.config}).from(i.structuredEmails).leftJoin(i.sesEvents,(0,k.eq)(i.structuredEmails.sesEventId,i.sesEvents.id)).leftJoin(i.webhookDeliveries,(0,k.eq)(i.structuredEmails.emailId,i.webhookDeliveries.emailId)).leftJoin(i.webhooks,(0,k.eq)(i.webhookDeliveries.webhookId,i.webhooks.id)).leftJoin(i.endpointDeliveries,(0,k.eq)(i.structuredEmails.emailId,i.endpointDeliveries.emailId)).leftJoin(i.endpoints,(0,k.eq)(i.endpointDeliveries.endpointId,i.endpoints.id)).where((0,k.and)(...r)).orderBy((0,m.desc)(i.structuredEmails.createdAt)).limit(c).offset(d),t=await h.db.select({count:l.sql`count(*)`}).from(i.structuredEmails).where((0,k.and)(...r)),u=t[0]?.count||0,v=(await h.db.select({domain:l.sql`DISTINCT SPLIT_PART(${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address', '@', 2)`}).from(i.structuredEmails).where((0,k.eq)(i.structuredEmails.userId,b.user.id)).orderBy(l.sql`SPLIT_PART(${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address', '@', 2)`)).map(a=>a.domain).filter(Boolean),w=new Map;s.forEach(a=>{let b=a.emailId;if(!w.has(b)){let c=null,d=null,e=[];try{a.fromData&&(c=JSON.parse(a.fromData)),a.toData&&(d=JSON.parse(a.toData)),a.attachments&&(e=JSON.parse(a.attachments))}catch(a){console.error("Failed to parse email data for display:",a)}let f=c?.addresses?.[0]?.address||"unknown",g=d?.addresses?.[0]?.address||"unknown",h=g.split("@")[1]||"",i="No preview available";a.textBody?i=a.textBody.slice(0,150).replace(/\n/g," ").trim():a.htmlBody&&(i=a.htmlBody.replace(/<[^>]*>/g,"").slice(0,150).replace(/\n/g," ").trim()),w.set(b,{id:a.id,emailId:a.emailId,messageId:a.messageId,from:f,recipient:g,subject:a.subject||"No Subject",receivedAt:a.date?.toISOString()||a.createdAt?.toISOString(),domain:h,isRead:a.isRead||!1,readAt:a.readAt?.toISOString()||null,preview:i,attachmentCount:e.length,hasAttachments:e.length>0,parseSuccess:a.parseSuccess,parseError:a.parseError,processingTimeMs:a.processingTimeMillis||0,authResults:{spf:a.spfVerdict||"UNKNOWN",dkim:a.dkimVerdict||"UNKNOWN",dmarc:a.dmarcVerdict||"UNKNOWN",spam:a.spamVerdict||"UNKNOWN",virus:a.virusVerdict||"UNKNOWN"},deliveries:[]})}let c=w.get(b);if(a.webhookDeliveryId){let b=null;try{b={name:a.webhookName||"Unknown Webhook",url:a.webhookUrl||"Unknown URL"}}catch(a){console.error("Failed to parse webhook config:",a)}c.deliveries.push({id:a.webhookDeliveryId,type:"webhook",status:a.webhookDeliveryStatus||"unknown",attempts:a.webhookDeliveryAttempts||0,lastAttemptAt:a.webhookDeliveryLastAttempt?.toISOString()||null,error:a.webhookDeliveryError||null,deliveryTimeMs:a.webhookDeliveryTime||null,responseCode:a.webhookDeliveryResponseCode||null,config:b})}if(a.endpointDeliveryId){let b=null;try{b={name:a.endpointName||"Unknown Endpoint",type:a.endpointType||"unknown",config:a.endpointConfig?JSON.parse(a.endpointConfig):null}}catch(a){console.error("Failed to parse endpoint config:",a)}let d=null;try{d=a.endpointDeliveryResponseData?JSON.parse(a.endpointDeliveryResponseData):null}catch(a){console.error("Failed to parse endpoint response data:",a)}c.deliveries.push({id:a.endpointDeliveryId,type:a.endpointDeliveryType||"unknown",status:a.endpointDeliveryStatus||"unknown",attempts:a.endpointDeliveryAttempts||0,lastAttemptAt:a.endpointDeliveryLastAttempt?.toISOString()||null,responseData:d,config:b})}});let x=Array.from(w.values());"all"!==j&&(x=x.filter(a=>{switch(j){case"delivered":return a.deliveries.some(a=>"success"===a.status);case"failed":return a.deliveries.some(a=>"failed"===a.status)||!a.parseSuccess;case"pending":return a.deliveries.some(a=>"pending"===a.status);case"no_delivery":return 0===a.deliveries.length;case"parse_failed":return!a.parseSuccess;default:return!0}}));let y={totalEmails:x.length,delivered:x.filter(a=>a.deliveries.some(a=>"success"===a.status)).length,failed:x.filter(a=>a.deliveries.some(a=>"failed"===a.status)||!a.parseSuccess).length,pending:x.filter(a=>a.deliveries.some(a=>"pending"===a.status)).length,noDelivery:x.filter(a=>0===a.deliveries.length).length,avgProcessingTime:x.reduce((a,b)=>a+b.processingTimeMs,0)/(x.length||1)};return{success:!0,data:{emails:x,pagination:{total:u,limit:c,offset:d,hasMore:d+c<u},filters:{uniqueDomains:v},stats:y}}}catch(a){return console.error("Error fetching user email logs:",a),{error:"Failed to fetch email logs"}}}async function F(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if(!a)return{error:"Email ID is required"};let c=await h.db.update(i.structuredEmails).set({isRead:!0,readAt:new Date,updatedAt:new Date}).where((0,k.and)((0,k.eq)(i.structuredEmails.id,a),(0,k.eq)(i.structuredEmails.userId,b.user.id))).returning({id:i.structuredEmails.id});if(0===c.length)return{error:"Email not found or access denied"};return{success:!0,message:"Email marked as read",data:{id:a}}}catch(a){return console.error("Error marking email as read:",a),{error:"Failed to mark email as read"}}}async function G(){try{let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{error:"Unauthorized"};let b=await h.db.update(i.structuredEmails).set({isRead:!0,readAt:new Date,updatedAt:new Date}).where((0,k.and)((0,k.eq)(i.structuredEmails.userId,a.user.id),(0,k.eq)(i.structuredEmails.isRead,!1))).returning({id:i.structuredEmails.id});return{success:!0,message:`Marked ${b.length} emails as read`,data:{count:b.length}}}catch(a){return console.error("Error marking all emails as read:",a),{error:"Failed to mark all emails as read"}}}async function H(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if(!a)return{error:"Email content is required"};let c=await (0,p.parseEmail)(a);return console.log("📧 Parsed Email Data:",JSON.stringify(c,null,2)),{success:!0,data:c}}catch(a){return console.error("Error parsing email:",a),{error:"Failed to parse email",details:a instanceof Error?a.message:"Unknown error"}}}async function I(b){console.log(`[parseEmailForAttachments] Parsing email content of ${b.length} characters`);let c=await (0,p.parseEmail)(b),{simpleParser:d}=await a.r(898841)(a.i),e=await d(b),f=c.attachments?.map(a=>{let b=e.attachments?.find(b=>b.filename===a.filename&&b.contentType===a.contentType);return{filename:a.filename||"unknown",contentType:a.contentType||"application/octet-stream",size:a.size||0,content:b?.content||Buffer.from("")}})||[];return console.log(`[parseEmailForAttachments] Found ${f.length} attachments with content`),{attachments:f,messageId:c.messageId,from:c.from?.addresses[0]?.address||"unknown",to:c.to?.addresses[0]?.address||"unknown",subject:c.subject||"No Subject",body:{text:c.textBody,html:c.htmlBody},headers:c.headers||{},timestamp:c.date||new Date}}async function J(b,c){try{let d;console.log(`[downloadAttachment] Starting download for emailId: ${b}, filename: ${c}`);let g=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!g?.user?.id)return console.log("[downloadAttachment] Unauthorized - no session or user ID"),{error:"Unauthorized"};if(!b||!c)return console.log(`[downloadAttachment] Missing required parameters - emailId: ${b}, filename: ${c}`),{error:"Email ID and attachment filename are required"};console.log(`[downloadAttachment] Looking up structured email for emailId: ${b}, userId: ${g.user.id}`);let j=await h.db.select({sesEventId:i.structuredEmails.sesEventId,userId:i.structuredEmails.userId}).from(i.structuredEmails).where((0,k.and)((0,k.eq)(i.structuredEmails.id,b),(0,k.eq)(i.structuredEmails.userId,g.user.id))).limit(1);if(console.log("[downloadAttachment] Structured email query result:",j),!j.length)return console.log(`[downloadAttachment] Email not found for emailId: ${b}, userId: ${g.user.id}`),{error:"Email not found"};let l=j[0].sesEventId;if(console.log(`[downloadAttachment] Found structured email, sesEventId: ${l}`),!l)return console.log("[downloadAttachment] No sesEventId found in structured email"),{error:"Email SES event ID not found"};console.log(`[downloadAttachment] Looking up SES event for sesEventId: ${l}`);let m=await h.db.select({id:i.sesEvents.id,s3BucketName:i.sesEvents.s3BucketName,s3ObjectKey:i.sesEvents.s3ObjectKey,emailContent:i.sesEvents.emailContent,messageId:i.sesEvents.messageId}).from(i.sesEvents).where((0,k.eq)(i.sesEvents.id,l)).limit(1);if(console.log("[downloadAttachment] SES event query result:",{...m[0],emailContent:m[0]?.emailContent?`${m[0].emailContent.length} characters`:"null"}),!m.length)return console.log(`[downloadAttachment] SES event not found for sesEventId: ${l}`),{error:"SES event not found"};let n=m[0].s3BucketName,o=m[0].s3ObjectKey,p=m[0].emailContent;if(console.log(`[downloadAttachment] S3 location - bucket: ${n}, key: ${o}`),console.log(`[downloadAttachment] Direct email content available: ${!!p}`),n&&o){console.log(`[downloadAttachment] Fetching email content from S3: ${n}/${o}`);try{let{getEmailFromS3:b}=await a.r(71672)(a.i);d=await b(n,o),console.log("[downloadAttachment] Successfully fetched from S3")}catch(a){if(console.error("[downloadAttachment] S3 fetch failed:",a),p)console.log("[downloadAttachment] Falling back to direct email content"),d=await I(p);else throw a}}else{if(!p)return console.log("[downloadAttachment] No S3 location and no direct email content available"),{error:"Email content not found"};console.log("[downloadAttachment] Using direct email content (no S3 location)"),d=await I(p)}console.log(`[downloadAttachment] Email processed, found ${d.attachments.length} attachments`),console.log("[downloadAttachment] Attachment filenames:",d.attachments.map(a=>a.filename));let q=d.attachments.find(a=>a.filename===c);if(!q)return console.log(`[downloadAttachment] Attachment not found with filename: ${c}`),console.log("[downloadAttachment] Available attachments:",d.attachments.map(a=>({filename:a.filename,contentType:a.contentType,size:a.size}))),{error:"Attachment not found"};if(console.log("[downloadAttachment] Found attachment:",{filename:q.filename,contentType:q.contentType,size:q.size,hasContent:!!q.content,contentLength:q.content?.length||0}),!q.content||0===q.content.length)return console.log("[downloadAttachment] Attachment found but no binary content available"),{error:"Attachment content not available - this may be due to the email being stored without full binary data"};return{success:!0,data:{filename:q.filename,contentType:q.contentType,size:q.size,content:q.content.toString("base64")}}}catch(a){return console.error("[downloadAttachment] Error downloading attachment:",a),console.error("[downloadAttachment] Error stack:",a instanceof Error?a.stack:"No stack trace"),{error:"Failed to download attachment"}}}async function K(){try{let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{error:"Unauthorized"};if("admin"!==a.user.role)return{error:"Admin access required"};let b=await h.db.select({id:i.emailDomains.id,domain:i.emailDomains.domain,status:i.emailDomains.status,canReceiveEmails:i.emailDomains.canReceiveEmails,hasMxRecords:i.emailDomains.hasMxRecords,domainProvider:i.emailDomains.domainProvider,providerConfidence:i.emailDomains.providerConfidence,lastDnsCheck:i.emailDomains.lastDnsCheck,lastSesCheck:i.emailDomains.lastSesCheck,isCatchAllEnabled:i.emailDomains.isCatchAllEnabled,createdAt:i.emailDomains.createdAt,updatedAt:i.emailDomains.updatedAt,userId:i.emailDomains.userId,userName:j.user.name,userEmail:j.user.email,emailAddressCount:l.sql`(
                    SELECT COUNT(*)::int 
                    FROM ${i.emailAddresses} 
                    WHERE ${i.emailAddresses.domainId} = ${i.emailDomains.id}
                )`.as("email_address_count"),activeEmailAddressCount:l.sql`(
                    SELECT COUNT(*)::int 
                    FROM ${i.emailAddresses} 
                    WHERE ${i.emailAddresses.domainId} = ${i.emailDomains.id} 
                    AND ${i.emailAddresses.isActive} = true
                )`.as("active_email_address_count")}).from(i.emailDomains).leftJoin(j.user,(0,k.eq)(i.emailDomains.userId,j.user.id)).orderBy(i.emailDomains.createdAt);return{success:!0,domains:b.map(a=>({id:a.id,domain:a.domain,status:a.status,canReceiveEmails:a.canReceiveEmails||!1,hasMxRecords:a.hasMxRecords||!1,domainProvider:a.domainProvider||null,providerConfidence:a.providerConfidence||null,lastDnsCheck:a.lastDnsCheck||null,lastSesCheck:a.lastSesCheck||null,isCatchAllEnabled:a.isCatchAllEnabled||!1,createdAt:a.createdAt||new Date,updatedAt:a.updatedAt||new Date,userId:a.userId,userName:a.userName||"Unknown User",userEmail:a.userEmail||"Unknown Email",emailAddressCount:a.emailAddressCount||0,activeEmailAddressCount:a.activeEmailAddressCount||0}))}}catch(a){return console.error("Error fetching all domains for admin:",a),{error:"Failed to fetch domains"}}}async function L(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};if("admin"!==b.user.role)return{error:"Admin access required"};if(!a)return{error:"Domain ID is required"};let c=await h.db.select({id:i.emailDomains.id,domain:i.emailDomains.domain,userId:i.emailDomains.userId,userName:j.user.name,userEmail:j.user.email}).from(i.emailDomains).leftJoin(j.user,(0,k.eq)(i.emailDomains.userId,j.user.id)).where((0,k.eq)(i.emailDomains.id,a)).limit(1);if(!c[0])return{error:"Domain not found"};let d=await h.db.select({id:i.emailAddresses.id,address:i.emailAddresses.address,isActive:i.emailAddresses.isActive,isReceiptRuleConfigured:i.emailAddresses.isReceiptRuleConfigured,receiptRuleName:i.emailAddresses.receiptRuleName,webhookId:i.emailAddresses.webhookId,endpointId:i.emailAddresses.endpointId,createdAt:i.emailAddresses.createdAt,updatedAt:i.emailAddresses.updatedAt,webhookName:i.webhooks.name,endpointName:i.endpoints.name,endpointType:i.endpoints.type}).from(i.emailAddresses).leftJoin(i.webhooks,(0,k.eq)(i.emailAddresses.webhookId,i.webhooks.id)).leftJoin(i.endpoints,(0,k.eq)(i.emailAddresses.endpointId,i.endpoints.id)).where((0,k.eq)(i.emailAddresses.domainId,a)).orderBy(i.emailAddresses.createdAt);return{success:!0,domain:{id:c[0].id,domain:c[0].domain,userId:c[0].userId,userName:c[0].userName||"Unknown User",userEmail:c[0].userEmail||"Unknown Email"},emailAddresses:d.map(a=>({id:a.id,address:a.address,isActive:a.isActive||!1,isReceiptRuleConfigured:a.isReceiptRuleConfigured||!1,receiptRuleName:a.receiptRuleName||null,webhookId:a.webhookId||null,webhookName:a.webhookName||null,endpointId:a.endpointId||null,endpointName:a.endpointName||null,endpointType:a.endpointType||null,createdAt:a.createdAt||new Date,updatedAt:a.updatedAt||new Date}))}}catch(a){return console.error("Error fetching domain email addresses for admin:",a),{error:"Failed to fetch email addresses"}}}async function M(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{error:"Unauthorized"};let{limit:c=50,offset:d=0,searchQuery:g="",statusFilter:j="all",typeFilter:n="all",domainFilter:o="all",timeRange:p="7d"}=a||{},q=null,r=new Date;switch(p){case"24h":q=new Date(r.getTime()-864e5);break;case"7d":default:q=new Date(r.getTime()-6048e5);break;case"30d":q=new Date(r.getTime()-2592e6);break;case"90d":q=new Date(r.getTime()-7776e6)}let s=b.user.id,t=[];if("all"===n||"inbound"===n){let a=[(0,k.eq)(i.structuredEmails.userId,s)];q&&a.push((0,k.gte)(i.structuredEmails.createdAt,q)),"all"!==o&&a.push(l.sql`${i.structuredEmails.toData}::jsonb->'addresses'->0->>'address' LIKE ${`%@${o}`}`),g&&a.push(l.sql`(
                        ${i.structuredEmails.subject} ILIKE ${`%${g}%`} OR
                        ${i.structuredEmails.messageId} ILIKE ${`%${g}%`} OR
                        ${i.structuredEmails.fromData}::text ILIKE ${`%${g}%`} OR
                        ${i.structuredEmails.toData}::text ILIKE ${`%${g}%`}
                    )`);let b=await h.db.select({id:i.structuredEmails.id,emailId:i.structuredEmails.emailId,messageId:i.structuredEmails.messageId,subject:i.structuredEmails.subject,date:i.structuredEmails.date,fromData:i.structuredEmails.fromData,toData:i.structuredEmails.toData,textBody:i.structuredEmails.textBody,htmlBody:i.structuredEmails.htmlBody,attachments:i.structuredEmails.attachments,parseSuccess:i.structuredEmails.parseSuccess,parseError:i.structuredEmails.parseError,createdAt:i.structuredEmails.createdAt,updatedAt:i.structuredEmails.updatedAt,isRead:i.structuredEmails.isRead,readAt:i.structuredEmails.readAt,spfVerdict:i.sesEvents.spfVerdict,dkimVerdict:i.sesEvents.dkimVerdict,dmarcVerdict:i.sesEvents.dmarcVerdict,spamVerdict:i.sesEvents.spamVerdict,virusVerdict:i.sesEvents.virusVerdict,processingTimeMillis:i.sesEvents.processingTimeMillis,endpointDeliveryId:i.endpointDeliveries.id,endpointDeliveryStatus:i.endpointDeliveries.status,endpointDeliveryType:i.endpointDeliveries.deliveryType,endpointDeliveryAttempts:i.endpointDeliveries.attempts,endpointDeliveryLastAttempt:i.endpointDeliveries.lastAttemptAt,endpointDeliveryResponseData:i.endpointDeliveries.responseData,endpointName:i.endpoints.name,endpointType:i.endpoints.type,endpointConfig:i.endpoints.config}).from(i.structuredEmails).leftJoin(i.sesEvents,(0,k.eq)(i.structuredEmails.sesEventId,i.sesEvents.id)).leftJoin(i.endpointDeliveries,(0,k.eq)(i.structuredEmails.emailId,i.endpointDeliveries.emailId)).leftJoin(i.endpoints,(0,k.eq)(i.endpointDeliveries.endpointId,i.endpoints.id)).where((0,k.and)(...a)).orderBy((0,m.desc)(i.structuredEmails.createdAt)),c=new Map;b.forEach(a=>{let b=a.emailId;if(!c.has(b)){let d=null,e=null,f=[];try{a.fromData&&(d=JSON.parse(a.fromData)),a.toData&&(e=JSON.parse(a.toData)),a.attachments&&(f=JSON.parse(a.attachments))}catch(a){console.error("Failed to parse inbound email data:",a)}let g=d?.addresses?.[0]?.address||"unknown",h=e?.addresses?.[0]?.address||"unknown",i=h.split("@")[1]||"",j="No preview available";a.textBody?j=a.textBody.slice(0,150).replace(/\n/g," ").trim():a.htmlBody&&(j=a.htmlBody.replace(/<[^>]*>/g,"").slice(0,150).replace(/\n/g," ").trim()),c.set(b,{type:"inbound",id:a.id,emailId:a.emailId,messageId:a.messageId,from:g,recipient:h,subject:a.subject||"No Subject",receivedAt:a.date?.toISOString()||a.createdAt?.toISOString(),domain:i,isRead:a.isRead||!1,readAt:a.readAt?.toISOString()||null,preview:j,attachmentCount:f.length,hasAttachments:f.length>0,parseSuccess:a.parseSuccess,parseError:a.parseError,processingTimeMs:a.processingTimeMillis||0,createdAt:a.createdAt?.toISOString(),updatedAt:a.updatedAt?.toISOString()||null,authResults:{spf:a.spfVerdict||"UNKNOWN",dkim:a.dkimVerdict||"UNKNOWN",dmarc:a.dmarcVerdict||"UNKNOWN",spam:a.spamVerdict||"UNKNOWN",virus:a.virusVerdict||"UNKNOWN"},deliveries:[]})}let d=c.get(b);if(a.endpointDeliveryId){let b=null;try{b={name:a.endpointName||"Unknown Endpoint",type:a.endpointType||"unknown",config:a.endpointConfig?JSON.parse(a.endpointConfig):null}}catch(a){console.error("Failed to parse endpoint config:",a)}let c=null;try{c=a.endpointDeliveryResponseData?JSON.parse(a.endpointDeliveryResponseData):null}catch(a){console.error("Failed to parse endpoint response data:",a)}d.deliveries.push({id:a.endpointDeliveryId,type:a.endpointDeliveryType||"unknown",status:a.endpointDeliveryStatus||"unknown",attempts:a.endpointDeliveryAttempts||0,lastAttemptAt:a.endpointDeliveryLastAttempt?.toISOString()||null,responseData:c,config:b})}}),t.push(...Array.from(c.values()))}if("all"===n||"outbound"===n){let a=[(0,k.eq)(i.sentEmails.userId,s)];q&&a.push((0,k.gte)(i.sentEmails.createdAt,q)),"all"!==o&&a.push((0,k.eq)(i.sentEmails.fromDomain,o)),g&&a.push(l.sql`(
                        ${i.sentEmails.subject} ILIKE ${`%${g}%`} OR
                        ${i.sentEmails.messageId} ILIKE ${`%${g}%`} OR
                        ${i.sentEmails.from} ILIKE ${`%${g}%`} OR
                        ${i.sentEmails.to}::text ILIKE ${`%${g}%`}
                    )`);let b=(await h.db.select({id:i.sentEmails.id,from:i.sentEmails.from,fromAddress:i.sentEmails.fromAddress,fromDomain:i.sentEmails.fromDomain,to:i.sentEmails.to,cc:i.sentEmails.cc,bcc:i.sentEmails.bcc,replyTo:i.sentEmails.replyTo,subject:i.sentEmails.subject,textBody:i.sentEmails.textBody,htmlBody:i.sentEmails.htmlBody,headers:i.sentEmails.headers,attachments:i.sentEmails.attachments,status:i.sentEmails.status,messageId:i.sentEmails.messageId,provider:i.sentEmails.provider,providerResponse:i.sentEmails.providerResponse,sentAt:i.sentEmails.sentAt,failureReason:i.sentEmails.failureReason,idempotencyKey:i.sentEmails.idempotencyKey,createdAt:i.sentEmails.createdAt,updatedAt:i.sentEmails.updatedAt}).from(i.sentEmails).where((0,k.and)(...a)).orderBy((0,m.desc)(i.sentEmails.createdAt))).map(a=>{let b=[],c=[],d=[],e=[],f=[];try{a.to&&(b=JSON.parse(a.to)),a.cc&&(c=JSON.parse(a.cc)),a.bcc&&(d=JSON.parse(a.bcc)),a.replyTo&&(e=JSON.parse(a.replyTo)),a.attachments&&(f=JSON.parse(a.attachments))}catch(a){console.error("Failed to parse outbound email data:",a)}let g="No preview available";return a.textBody?g=a.textBody.slice(0,150).replace(/\n/g," ").trim():a.htmlBody&&(g=a.htmlBody.replace(/<[^>]*>/g,"").slice(0,150).replace(/\n/g," ").trim()),{type:"outbound",id:a.id,emailId:a.id,messageId:a.messageId||"",from:a.fromAddress,to:b,cc:c.length>0?c:null,bcc:d.length>0?d:null,replyTo:e.length>0?e:null,subject:a.subject||"No Subject",domain:a.fromDomain,isRead:!0,readAt:a.sentAt?.toISOString()||null,preview:g,attachmentCount:f.length,hasAttachments:f.length>0,status:a.status,provider:a.provider||"ses",sentAt:a.sentAt?.toISOString()||null,failureReason:a.failureReason,providerResponse:a.providerResponse?JSON.parse(a.providerResponse):null,idempotencyKey:a.idempotencyKey,createdAt:a.createdAt?.toISOString(),updatedAt:a.updatedAt?.toISOString()||null}});t.push(...b)}t.sort((a,b)=>new Date(b.createdAt).getTime()-new Date(a.createdAt).getTime()),"all"!==j&&(t=t.filter(a=>{switch(j){case"delivered":if("inbound"===a.type)return a.deliveries.some(a=>"success"===a.status);return"sent"===a.status;case"failed":if("inbound"===a.type)return a.deliveries.some(a=>"failed"===a.status)||!a.parseSuccess;return"failed"===a.status;case"pending":if("inbound"===a.type)return a.deliveries.some(a=>"pending"===a.status);return"pending"===a.status;case"no_delivery":return"inbound"===a.type&&0===a.deliveries.length;case"parse_failed":return"inbound"===a.type&&!a.parseSuccess;default:return!0}}));let u=t.slice(d,d+c),v=new Set;t.forEach(a=>{a.domain&&v.add(a.domain)});let w=Array.from(v).sort(),x=t.filter(a=>"inbound"===a.type),y=t.filter(a=>"outbound"===a.type),z={totalEmails:t.length,inbound:x.length,outbound:y.length,delivered:t.filter(a=>"inbound"===a.type?a.deliveries.some(a=>"success"===a.status):"sent"===a.status).length,failed:t.filter(a=>"inbound"===a.type?a.deliveries.some(a=>"failed"===a.status)||!a.parseSuccess:"failed"===a.status).length,pending:t.filter(a=>"inbound"===a.type?a.deliveries.some(a=>"pending"===a.status):"pending"===a.status).length,noDelivery:x.filter(a=>0===a.deliveries.length).length,avgProcessingTime:x.reduce((a,b)=>a+(b.processingTimeMs||0),0)/(x.length||1)};return{success:!0,data:{emails:u,pagination:{total:t.length,limit:c,offset:d,hasMore:d+c<t.length},filters:{uniqueDomains:w},stats:z}}}catch(a){return console.error("Error fetching unified email logs:",a),{error:"Failed to fetch unified email logs"}}}(0,a.i(377991).ensureServerEntryExports)([q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,J,K,L,M]),(0,d.registerServerReference)(q,"00282b3a5eacbbc918f95ec4473b7dc09d0e5ffcf8",null),(0,d.registerServerReference)(r,"00bd5c39d59f2c9e83dce14d93d44f40e9d2c4f1ae",null),(0,d.registerServerReference)(s,"7848afd1cdcc3ae573fcaecb1453834adc0592d546",null),(0,d.registerServerReference)(t,"6038de76c7ae2545850e8729e79a407495cbc9a40e",null),(0,d.registerServerReference)(u,"406b7a077c6d0a54b7520bc10a0d91fc0355d84be9",null),(0,d.registerServerReference)(v,"786dba56b7c784a99df68b6d2e76f67e69ef2c65bd",null),(0,d.registerServerReference)(w,"70d230978430f640516a282d4115ab7d68884a8fe1",null),(0,d.registerServerReference)(x,"40950417619d8cd10d24264f29cf27e873fba95681",null),(0,d.registerServerReference)(y,"40bce4c2c0fd226ef09e83e4f2df13ec819e47e49e",null),(0,d.registerServerReference)(z,"00faa09f01a5256e987f59d5eb3348cc00f9bf9491",null),(0,d.registerServerReference)(A,"00eb7bf31da46fbf5d1c4db2ebc56b7fb2a100f488",null),(0,d.registerServerReference)(B,"40ccd8d8e26d5a0a7819f93603cecd1770ab9afb12",null),(0,d.registerServerReference)(C,"40134f515b8fe5278d31a536a3a223c156ec6b61af",null),(0,d.registerServerReference)(D,"4062391b8b9fea3dab173568dc243176dcda35bc73",null),(0,d.registerServerReference)(E,"4036a927bdcc185c7cd5221062f42afb70733d159f",null),(0,d.registerServerReference)(F,"400e0c4e16c3c0c54c42073a20508c7d05f4dd64fa",null),(0,d.registerServerReference)(G,"00b110dd3c06704b76c3b03d988a4765d56aaab563",null),(0,d.registerServerReference)(H,"403ca280edbc2484f07159b2cc7d071e15e32b0416",null),(0,d.registerServerReference)(J,"6021894a83b2e73334806bae731dbe3ae3e2d52354",null),(0,d.registerServerReference)(K,"00560e01c105f4a71ab091dc08be600fefa3f70dc5",null),(0,d.registerServerReference)(L,"404cfffacaa2fc043fcb99ab6963947b8e9cbebc7f",null),(0,d.registerServerReference)(M,"40f4308e9524f900b328889cf8d5095aa19d019d23",null)},290143:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Body:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{children:c,style:d}=a,f=o(a,["children","style"]);return(0,e.jsx)("body",n(m({},f),{ref:b,style:d,children:c}))});p.displayName="Body"},962408:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Container:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{children:c,style:d}=a,f=o(a,["children","style"]);return(0,e.jsx)("table",n(m({align:"center",width:"100%"},f),{border:0,cellPadding:"0",cellSpacing:"0",ref:b,role:"presentation",style:m({maxWidth:"37.5em"},d),children:(0,e.jsx)("tbody",{children:(0,e.jsx)("tr",{style:{width:"100%"},children:(0,e.jsx)("td",{children:c})})})}))});p.displayName="Container"},157664:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Head:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{children:c}=a,d=o(a,["children"]);return(0,e.jsxs)("head",n(m({},d),{ref:b,children:[(0,e.jsx)("meta",{content:"text/html; charset=UTF-8",httpEquiv:"Content-Type"}),(0,e.jsx)("meta",{name:"x-apple-disable-message-reformatting"}),c]}))});p.displayName="Head"},507660:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Heading:()=>r});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=a=>[q(a.m,["margin"]),q(a.mx,["marginLeft","marginRight"]),q(a.my,["marginTop","marginBottom"]),q(a.mt,["marginTop"]),q(a.mr,["marginRight"]),q(a.mb,["marginBottom"]),q(a.ml,["marginLeft"])].filter(a=>Object.keys(a).length).reduce((a,b)=>m(m({},a),b),{}),q=(a,b)=>b.reduce((b,c)=>isNaN(parseFloat(a))?b:n(m({},b),{[c]:`${a}px`}),{}),r=(0,d.forwardRef)((a,b)=>{var{as:c="h1",children:d,style:f,m:g,mx:h,my:i,mt:j,mr:k,mb:l,ml:q}=a,r=o(a,["as","children","style","m","mx","my","mt","mr","mb","ml"]);return(0,e.jsx)(c,n(m({},r),{ref:b,style:m(m({},p({m:g,mx:h,my:i,mt:j,mr:k,mb:l,ml:q})),f),children:d}))});r.displayName="Heading"},557420:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Html:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{children:c,lang:d="en",dir:f="ltr"}=a,g=o(a,["children","lang","dir"]);return(0,e.jsx)("html",n(m({},g),{dir:f,lang:d,ref:b,children:c}))});p.displayName="Html"},9085:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Img:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{alt:c,src:d,width:f,height:g,style:h}=a,i=o(a,["alt","src","width","height","style"]);return(0,e.jsx)("img",n(m({},i),{alt:c,height:g,ref:b,src:d,style:m({display:"block",outline:"none",border:"none",textDecoration:"none"},h),width:f}))});p.displayName="Img"},954159:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Link:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{target:c="_blank",style:d}=a,f=o(a,["target","style"]);return(0,e.jsx)("a",n(m({},f),{ref:b,style:m({color:"#067df7",textDecorationLine:"none"},d),target:c,children:f.children}))});p.displayName="Link"},622310:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Preview:()=>p,renderWhiteSpace:()=>q});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{children:c=""}=a,d=o(a,["children"]);let f=(Array.isArray(c)?c.join(""):c).substring(0,150);return(0,e.jsxs)("div",n(m({style:{display:"none",overflow:"hidden",lineHeight:"1px",opacity:0,maxHeight:0,maxWidth:0},"data-skip-in-text":!0},d),{ref:b,children:[f,q(f)]}))});p.displayName="Preview";var q=a=>a.length>=150?null:(0,e.jsx)("div",{children:" ‌​‍‎‏\uFEFF".repeat(150-a.length)})},748021:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Section:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{children:c,style:d}=a,f=o(a,["children","style"]);return(0,e.jsx)("table",n(m({align:"center",width:"100%",border:0,cellPadding:"0",cellSpacing:"0",role:"presentation"},f),{ref:b,style:d,children:(0,e.jsx)("tbody",{children:(0,e.jsx)("tr",{children:(0,e.jsx)("td",{children:c})})})}))});p.displayName="Section"},223656:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({Text:()=>p});var d=a.i(465421),e=a.i(129629),f=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable,l=(a,b,c)=>b in a?f(a,b,{enumerable:!0,configurable:!0,writable:!0,value:c}):a[b]=c,m=(a,b)=>{for(var c in b||(b={}))j.call(b,c)&&l(a,c,b[c]);if(i)for(var c of i(b))k.call(b,c)&&l(a,c,b[c]);return a},n=(a,b)=>g(a,h(b)),o=(a,b)=>{var c={};for(var d in a)j.call(a,d)&&0>b.indexOf(d)&&(c[d]=a[d]);if(null!=a&&i)for(var d of i(a))0>b.indexOf(d)&&k.call(a,d)&&(c[d]=a[d]);return c},p=(0,d.forwardRef)((a,b)=>{var{style:c}=a,d=o(a,["style"]);let f={};(null==c?void 0:c.marginTop)===void 0&&(f.marginTop="16px"),(null==c?void 0:c.marginBottom)===void 0&&(f.marginBottom="16px");let g=function(a){let b={marginTop:void 0,marginRight:void 0,marginBottom:void 0,marginLeft:void 0};for(let[c,d]of Object.entries(a))"margin"===c?b=function(a){if("number"==typeof a)return{marginTop:a,marginBottom:a,marginLeft:a,marginRight:a};if("string"==typeof a){let b=a.toString().trim().split(/\s+/);if(1===b.length)return{marginTop:b[0],marginBottom:b[0],marginLeft:b[0],marginRight:b[0]};if(2===b.length)return{marginTop:b[0],marginRight:b[1],marginBottom:b[0],marginLeft:b[1]};if(3===b.length)return{marginTop:b[0],marginRight:b[1],marginBottom:b[2],marginLeft:b[1]};if(4===b.length)return{marginTop:b[0],marginRight:b[1],marginBottom:b[2],marginLeft:b[3]}}return{marginTop:void 0,marginBottom:void 0,marginLeft:void 0,marginRight:void 0}}(d):"marginTop"===c?b.marginTop=d:"marginRight"===c?b.marginRight=d:"marginBottom"===c?b.marginBottom=d:"marginLeft"===c&&(b.marginLeft=d);return b}(m(m({},f),c));return(0,e.jsx)("p",n(m({},d),{ref:b,style:m(m({fontSize:"14px",lineHeight:"24px"},c),g)}))});p.displayName="Text"},321877:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({FeedbackEmail:()=>b,default:()=>c});var d=a.i(129629),e=a.i(290143),f=a.i(962408),g=a.i(157664),h=a.i(507660),i=a.i(557420),j=a.i(9085),k=a.i(954159),l=a.i(622310),m=a.i(748021),n=a.i(223656);let b=({userFirstname:a="User",userEmail:b,feedback:c,submittedAt:C=new Date().toLocaleDateString()})=>(0,d.jsxs)(i.Html,{children:[(0,d.jsx)(g.Head,{}),(0,d.jsxs)(l.Preview,{children:["New feedback from ",a," - inbound"]}),(0,d.jsx)(e.Body,{style:o,children:(0,d.jsxs)(f.Container,{style:p,children:[(0,d.jsx)(m.Section,{style:q,children:(0,d.jsx)("div",{style:r,children:(0,d.jsx)(j.Img,{src:"https://inbound.new/inbound-wordmark.png",alt:"inbound",width:"200",height:"60",style:s})})}),(0,d.jsx)(n.Text,{style:z,children:"Hey Ryan! 👋"}),(0,d.jsxs)(n.Text,{style:z,children:["You've received new feedback from ",(0,d.jsx)("strong",{children:a})," (",b,")."]}),(0,d.jsx)(m.Section,{style:t,children:(0,d.jsxs)(n.Text,{style:u,children:["📅 Submitted on ",C]})}),(0,d.jsxs)(m.Section,{style:v,children:[(0,d.jsx)(h.Heading,{style:w,children:"💬 Feedback"}),(0,d.jsx)(n.Text,{style:x,children:c})]}),(0,d.jsxs)(n.Text,{style:z,children:["You can reply directly to this email to respond to ",a,".",(0,d.jsx)("br",{}),(0,d.jsx)("br",{}),"- inbound feedback system"]}),(0,d.jsx)(m.Section,{style:y,children:(0,d.jsxs)(n.Text,{style:A,children:[(0,d.jsx)(k.Link,{href:"https://inbound.new/dashboard",style:B,children:"dashboard"})," • ",(0,d.jsx)(k.Link,{href:"https://inbound.new/docs",style:B,children:"docs"})]})})]})})]}),c=b,o={backgroundColor:"#f8fafc",fontFamily:"Outfit, Arial, sans-serif"},p={backgroundColor:"#ffffff",margin:"0 auto",padding:"20px 0 48px",marginBottom:"64px",borderRadius:"12px",boxShadow:"0 4px 6px -1px rgba(0, 0, 0, 0.1)"},q={textAlign:"center",padding:"32px 0 24px",borderBottom:"1px solid #e2e8f0",marginBottom:"32px"},r={textAlign:"center",marginBottom:"0"},s={maxWidth:"100%",height:"auto"},t={backgroundColor:"#f8fafc",padding:"20px 24px"},u={color:"#334155",fontSize:"14px",lineHeight:"22px",margin:"0",fontFamily:"Outfit, Arial, sans-serif",wordBreak:"break-word"},v={backgroundColor:"#f8fafc",padding:"24px",margin:"24px 0"},w={color:"#334155",fontSize:"18px",fontWeight:"600",margin:"0 0 16px 0",fontFamily:"Outfit, Arial, sans-serif"},x={color:"#334155",fontSize:"16px",lineHeight:"24px",margin:"0",fontFamily:"Outfit, Arial, sans-serif",whiteSpace:"pre-wrap"},y={textAlign:"center",marginTop:"40px",paddingTop:"20px",borderTop:"1px solid #e2e8f0"},z={color:"#334155",fontSize:"16px",lineHeight:"24px",margin:"16px 24px",fontFamily:"Outfit, Arial, sans-serif"},A={color:"#64748b",fontSize:"14px",lineHeight:"24px",margin:"0",fontFamily:"Outfit, Arial, sans-serif",textAlign:"center"},B={color:"#6C47FF",textDecoration:"underline",fontWeight:"500"}}},253685:a=>{"use strict";var{g:b,__dirname:c,a:d}=a;d(async(b,c)=>{try{a.s({sendFeedbackAction:()=>l});var d=a.i(930768);a.i(996945);var e=a.i(107729),f=a.i(409950),g=a.i(775725),h=a.i(919379),i=a.i(321877),j=a.i(377991),k=b([h]);[h]=k.then?(await k)():k;let m=new g.Resend(process.env.RESEND_API_KEY);async function l(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{success:!1,error:"Authentication required"};if(!process.env.RESEND_API_KEY)return console.error("❌ sendFeedbackAction - RESEND_API_KEY not configured"),{success:!1,error:"Email service not configured"};if(!a.feedback?.trim())return{success:!1,error:"Feedback content is required"};if(a.feedback.length>5e3)return{success:!1,error:"Feedback is too long (max 5000 characters)"};console.log(`📧 sendFeedbackAction - Sending feedback from user: ${b.user.email}`);let c={userFirstname:b.user.name?.split(" ")[0]||"User",userEmail:b.user.email,feedback:a.feedback.trim(),submittedAt:new Date().toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",timeZoneName:"short"})},d=await (0,h.render)((0,i.default)(c)),g=await m.emails.send({from:"inbound feedback <notifications@inbound.new>",to:"ryan@inbound.new",replyTo:b.user.email?b.user.email:"ryan@inbound.new",subject:`💬 New Feedback from ${b.user.name||b.user.email} - inbound`,html:d,tags:[{name:"type",value:"user-feedback"},{name:"user_id",value:b.user.id}]});if(g.error)return console.error("❌ sendFeedbackAction - Resend API error:",g.error),{success:!1,error:`Email sending failed: ${g.error.message}`};return console.log(`✅ sendFeedbackAction - Feedback email sent successfully from ${b.user.email}`),console.log(`   📧 Message ID: ${g.data?.id}`),{success:!0,messageId:g.data?.id}}catch(a){return console.error("❌ sendFeedbackAction - Unexpected error:",a),{success:!1,error:a instanceof Error?a.message:"Unknown error occurred"}}}(0,j.ensureServerEntryExports)([l]),(0,d.registerServerReference)(l,"4001b46509619c2e0fe09e06802ee8157c6226ec8c",null),c()}catch(a){c(a)}},!1)},255593:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({completeOnboarding:()=>k,getOnboardingStatus:()=>l});var d=a.i(930768);a.i(996945);var e=a.i(107729),f=a.i(409950),g=a.i(900707);a.i(508384);var h=a.i(954523),i=a.i(988777),j=a.i(14394);async function k(a){try{let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{success:!1,error:"Unauthorized"};if(a!==b.user.id)return{success:!1,error:"Forbidden - can only update your own onboarding status"};console.log(`📝 Completing onboarding for user ${a}`);let[c]=await g.db.update(h.userOnboarding).set({isCompleted:!0,completedAt:new Date,updatedAt:new Date}).where((0,i.eq)(h.userOnboarding.userId,a)).returning();if(!c){let[b]=await g.db.insert(h.userOnboarding).values({id:(0,j.nanoid)(),userId:a,isCompleted:!0,defaultEndpointCreated:!1,completedAt:new Date,createdAt:new Date,updatedAt:new Date}).returning();return console.log(`✅ Created and completed onboarding record for user ${a}`),{success:!0,onboarding:b}}return console.log(`✅ Marked onboarding as completed for user ${a}`),{success:!0,onboarding:c}}catch(a){return console.error("❌ Error completing onboarding:",a),{success:!1,error:"Failed to complete onboarding",details:a instanceof Error?a.message:"Unknown error"}}}async function l(a){try{let b=a;if(!b){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{success:!1,error:"Unauthorized"};b=a.user.id}console.log(`📋 Getting onboarding status for user ${b}`);let[c]=await g.db.select().from(h.userOnboarding).where((0,i.eq)(h.userOnboarding.userId,b)).limit(1);if(!c)return{success:!0,onboarding:{isCompleted:!1,defaultEndpointCreated:!1}};return{success:!0,onboarding:c}}catch(a){return console.error("❌ Error getting onboarding status:",a),{success:!1,error:"Failed to get onboarding status",details:a instanceof Error?a.message:"Unknown error"}}}(0,a.i(377991).ensureServerEntryExports)([k,l]),(0,d.registerServerReference)(k,"40d01e1907c9b1aadfc6cf61c68b9fb60a9d17348f",null),(0,d.registerServerReference)(l,"40d22d6e027abaab42994fd38d69f454c777a42914",null)}};

//# sourceMappingURL=_a08f8137._.js.map