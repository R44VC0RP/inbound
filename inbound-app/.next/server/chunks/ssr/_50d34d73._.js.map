{"version":3,"sources":["turbopack:///[project]/components/icons/share-right-2.tsx","turbopack:///[project]/app/(main)/settings/page.tsx"],"sourcesContent":["import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction ShareRight2({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M12.265,1.205c-.218-.205-.536-.262-.812-.144-.275,.119-.453,.39-.453,.689V3.783c-4.723,.422-6,4.832-6,7.217,0,.329,.215,.619,.529,.716,.073,.022,.147,.034,.221,.034,.243,0,.477-.119,.62-.327,.02-.029,1.868-2.685,4.63-3.114v1.942c0,.299,.178,.57,.453,.689,.276,.119,.594,.062,.812-.144l4.5-4.25c.15-.142,.235-.339,.235-.545s-.085-.404-.235-.545L12.265,1.205Z\" fill={secondaryfill}/>\n\t\t<path d=\"M15.25,10c-.414,0-.75,.336-.75,.75v2.5c0,.689-.561,1.25-1.25,1.25H4.75c-.689,0-1.25-.561-1.25-1.25V4.75c0-.689,.561-1.25,1.25-1.25h2.5c.414,0,.75-.336,.75-.75s-.336-.75-.75-.75h-2.5c-1.517,0-2.75,1.233-2.75,2.75V13.25c0,1.517,1.233,2.75,2.75,2.75H13.25c1.517,0,2.75-1.233,2.75-2.75v-2.5c0-.414-.336-.75-.75-.75Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default ShareRight2;","\"use client\"\n\nimport { useSession } from '@/lib/auth/auth-client'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Badge } from '@/components/ui/badge'\nimport { Skeleton } from '@/components/ui/skeleton'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { useState, useEffect } from 'react'\nimport { toast } from 'sonner'\nimport {\n  useCustomerQuery,\n  useDomainStatsQuery,\n  useApiKeysQuery,\n  useCreateApiKeyMutation,\n  useUpdateApiKeyMutation,\n  useDeleteApiKeyMutation,\n  useBillingPortalMutation\n} from '@/features/settings/hooks'\nimport {\n  Customer,\n  DomainStatsResponse,\n  ApiKey,\n  CreateApiKeyForm,\n  CircularProgressProps\n} from '@/features/settings/types'\nimport CreditCard2 from \"@/components/icons/credit-card-2\"\nimport ChartTrendUp from \"@/components/icons/chart-trend-up\"\nimport CircleCheck from \"@/components/icons/circle-check\"\nimport Key2 from \"@/components/icons/key-2\"\nimport CirclePlus from \"@/components/icons/circle-plus\"\nimport Clipboard2 from \"@/components/icons/clipboard-2\"\nimport Trash2 from \"@/components/icons/trash-2\"\nimport { formatDistanceToNow } from 'date-fns'\nimport { PricingTable } from '@/components/autumn/pricing-table-format'\nimport { useRouter, useSearchParams } from 'next/navigation'\nimport Globe2 from '@/components/icons/globe-2'\nimport Archive from '@/components/icons/archive-export'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport Send from '@/components/icons/share-right-2'\nimport X from '@/components/icons/tab-close'\n\n\n\n\n// Types are now imported from @/features/settings/types\n\nfunction CircularProgress({ value, max, size = 60, strokeWidth = 6, className = \"\", children }: CircularProgressProps) {\n  const radius = (size - strokeWidth) / 2\n  const circumference = radius * 2 * Math.PI\n  const percentage = max > 0 ? (value / max) * 100 : 0\n  const strokeDashoffset = circumference - (percentage / 100) * circumference\n\n  return (\n    <div className={`relative inline-flex items-center justify-center ${className}`}>\n      <svg\n        width={size}\n        height={size}\n        className=\"transform -rotate-90\"\n      >\n        {/* Background circle */}\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n          className=\"text-slate-700\"\n        />\n        {/* Progress circle */}\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"currentColor\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n          strokeDasharray={circumference}\n          strokeDashoffset={strokeDashoffset}\n          strokeLinecap=\"round\"\n          className=\"text-purple-400 transition-all duration-300 ease-in-out\"\n        />\n      </svg>\n      {children && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default function SettingsPage() {\n  const { data: session, isPending } = useSession()\n  const [isLoading, setIsLoading] = useState(false)\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\n  const [isUpgradeSuccessOpen, setIsUpgradeSuccessOpen] = useState(false)\n  \n  // React Query hooks\n  const { \n    data: customerData, \n    isLoading: isLoadingCustomer,\n    error: customerError,\n    refetch: refetchCustomer \n  } = useCustomerQuery()\n  \n  const { \n    data: domainStats, \n    isLoading: isLoadingDomainStats,\n    error: domainStatsError\n  } = useDomainStatsQuery()\n  \n  const { \n    data: apiKeys = [], \n    isLoading: isLoadingApiKeys,\n    error: apiKeysError\n  } = useApiKeysQuery()\n  \n  // Mutations\n  const createApiKeyMutation = useCreateApiKeyMutation()\n  const updateApiKeyMutation = useUpdateApiKeyMutation()\n  const deleteApiKeyMutation = useDeleteApiKeyMutation()\n  const billingPortalMutation = useBillingPortalMutation()\n  \n  // API Key state\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false)\n  const [newApiKey, setNewApiKey] = useState<string | null>(null)\n  const [showNewApiKey, setShowNewApiKey] = useState(false)\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false)\n  const [keyToDelete, setKeyToDelete] = useState<string | null>(null)\n  const [createForm, setCreateForm] = useState<CreateApiKeyForm>({\n    name: '',\n    prefix: ''\n  })\n  \n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  const handleUpdateProfile = async (formData: FormData) => {\n    setIsLoading(true)\n    try {\n      // Implementation would go here\n      toast.success('Profile updated successfully')\n    } catch (error) {\n      toast.error('Failed to update profile')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleCreateApiKey = async () => {\n    try {\n      const createData = {\n        name: createForm.name || undefined,\n        prefix: createForm.prefix || undefined,\n      }\n      \n      const result = await createApiKeyMutation.mutateAsync(createData)\n      \n      if (result?.key) {\n        setNewApiKey(result.key)\n        setShowNewApiKey(true)\n        toast.success('API key created successfully')\n        \n        // Reset form\n        setCreateForm({\n          name: '',\n          prefix: ''\n        })\n      }\n    } catch (error) {\n      console.error('Error creating API key:', error)\n      toast.error(error instanceof Error ? error.message : 'Failed to create API key')\n    }\n  }\n\n  const handleDeleteApiKey = async (keyId: string) => {\n    try {\n      await deleteApiKeyMutation.mutateAsync(keyId)\n      toast.success('API key deleted successfully')\n    } catch (error) {\n      console.error('Error deleting API key:', error)\n      toast.error(error instanceof Error ? error.message : 'Failed to delete API key')\n    }\n  }\n\n  const handleUpdateApiKey = async (keyId: string, updates: { name?: string; enabled?: boolean }) => {\n    try {\n      await updateApiKeyMutation.mutateAsync({ keyId, ...updates })\n      toast.success('API key updated successfully')\n    } catch (error) {\n      console.error('Error updating API key:', error)\n      toast.error(error instanceof Error ? error.message : 'Failed to update API key')\n    }\n  }\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text)\n      toast.success('Copied to clipboard')\n    } catch (error) {\n      toast.error('Failed to copy to clipboard')\n    }\n  }\n\n  const handleManageBilling = async () => {\n    try {\n      const url = await billingPortalMutation.mutateAsync()\n      window.open(url, '_blank')\n    } catch (error) {\n      console.error('Error creating billing portal session:', error)\n      toast.error(error instanceof Error ? error.message : 'Failed to open billing portal')\n    }\n  }\n\n  // Check for upgrade success parameter\n  useEffect(() => {\n    const upgradeParam = searchParams.get('upgrade')\n    if (upgradeParam === 'true') {\n      setIsUpgradeSuccessOpen(true)\n      // Remove the parameter from URL\n      const newUrl = new URL(window.location.href)\n      newUrl.searchParams.delete('upgrade')\n      router.replace(newUrl.pathname + newUrl.search)\n    }\n  }, [searchParams, router])\n\n  if (isPending) {\n    return (\n      <div className=\"flex flex-1 flex-col gap-4 p-4 pt-0\">\n        <div className=\"flex items-center justify-center\">\n          <div className=\"text-muted-foreground\">Loading...</div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!session) {\n    return (\n      <div className=\"flex flex-1 flex-col gap-4 p-4 pt-0\">\n        <div className=\"flex items-center justify-center\">\n          <div className=\"text-muted-foreground\">Please sign in to access settings</div>\n        </div>\n      </div>\n    )\n  }\n\n  const activeProduct = customerData?.products?.find(p => p.status === 'active')\n  const domainsFeature = customerData?.features?.['domains']\n  const inboundTriggersFeature = customerData?.features?.['inbound_triggers']\n  const emailRetentionFeature = customerData?.features?.['email_retention']\n  const vipByokFeature = customerData?.features?.['vip_byok']\n  const emailsSentFeature = customerData?.features?.['emails_sent']\n\n  // For domains, use actual domain count from domain stats\n  const currentDomainCount = domainStats?.totalDomains || 0\n  const maxDomains = domainsFeature?.balance || 0\n\n  // Show upgrade button for all users except Scale plan\n  const showUpgradeButton = !activeProduct || \n    !activeProduct.name?.toLowerCase().includes('scale')\n\n  const handleOpenUpgrade = () => {\n    setIsDialogOpen(true)\n  }\n\n  return (\n    <div className=\"flex flex-1 flex-col gap-4 p-4 pt-10\">\n      <div className=\"space-y-6\">\n        {/* Subscription Management */}\n        <Card className=\"bg-slate-900 text-white border-slate-800\">\n          <CardContent className=\"p-6\">\n            {isLoadingCustomer ? (\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <Skeleton className=\"h-6 w-32 bg-slate-800 mb-2\" />\n                  <Skeleton className=\"h-4 w-64 bg-slate-800\" />\n                </div>\n                <div className=\"space-y-3\">\n                  <Skeleton className=\"h-12 w-32 bg-slate-800\" />\n                  <Skeleton className=\"h-12 w-32 bg-slate-800\" />\n                </div>\n              </div>\n            ) : customerData ? (\n              <div className=\"flex items-center justify-between\">\n                {/* Left side - Plan Info */}\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center gap-3 mb-2\">\n                    <h3 className=\"text-xl font-semibold\">\n                      {activeProduct?.name || 'Free'}\n                    </h3>\n                    <Badge \n                      variant={activeProduct?.status === 'active' ? 'default' : 'secondary'}\n                      className=\"capitalize bg-slate-700 text-slate-200\"\n                    >\n                      {activeProduct?.status || 'Inactive'}\n                    </Badge>\n                  </div>\n                  <p className=\"text-slate-300 text-sm mb-4 max-w-md\">\n                    {activeProduct?.name === 'Pro' \n                      ? 'Advanced email processing with unlimited triggers and extended retention.'\n                      : activeProduct?.name === 'Scale'\n                      ? 'Enterprise-grade email infrastructure with maximum limits and priority support.'\n                      : 'Get started with basic email forwarding and domain management.'}\n                  </p>\n                  <div className=\"flex items-center gap-3\">\n                    <Button \n                      variant=\"secondary\" \n                      onClick={handleManageBilling}\n                      disabled={!customerData || billingPortalMutation.isPending}\n                      className='bg-slate-800 hover:bg-slate-700 text-white border-slate-600'\n                    >\n                      {billingPortalMutation.isPending ? 'Loading...' : 'Manage'}\n                    </Button>\n                    {showUpgradeButton && (\n                      <Button \n                        onClick={handleOpenUpgrade}\n                        variant=\"primary\"\n                      >\n                        <ChartTrendUp width=\"16\" height=\"16\" className=\"mr-2\" />\n                        Upgrade\n                      </Button>\n                    )}\n                  </div>\n                </div>\n\n                {/* Right side - Usage Metrics */}\n                <div className=\"space-y-4\">\n                  {/* Domains */}\n                  {domainsFeature && (\n                    <div className=\"flex items-center gap-3\">\n                      <CircularProgress \n                        value={currentDomainCount} \n                        max={domainsFeature.unlimited ? 100 : maxDomains}\n                        size={40}\n                        strokeWidth={4}\n                      />\n                      <div>\n                        <div className=\"text-sm font-medium text-white\">Domains</div>\n                        <div className=\"text-xs text-slate-400\">\n                          {domainsFeature.unlimited ? (\n                            'unlimited'\n                          ) : (\n                            `${currentDomainCount} / ${maxDomains.toLocaleString()}`\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Inbound Triggers */}\n                  {inboundTriggersFeature && (\n                    <div className=\"flex items-center gap-3\">\n                      <CircularProgress \n                        value={inboundTriggersFeature.unlimited ? 0 : inboundTriggersFeature.usage || 0} \n                        max={inboundTriggersFeature.unlimited ? 100 : inboundTriggersFeature.balance || 0}\n                        size={40}\n                        strokeWidth={4}\n                      />\n                      <div>\n                        <div className=\"text-sm font-medium text-white\">Triggers</div>\n                        <div className=\"text-xs text-slate-400\">\n                          {inboundTriggersFeature.unlimited ? (\n                            'unlimited'\n                          ) : (\n                            `${inboundTriggersFeature.usage?.toLocaleString()} / ${inboundTriggersFeature.balance?.toLocaleString()}`\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Email Retention */}\n                  {emailRetentionFeature && (\n                    <div className=\"flex items-center gap-3\">\n                      <div \n                        className={`w-10 h-10 rounded-full border-2 flex items-center justify-center ${\n                          emailRetentionFeature.balance && emailRetentionFeature.balance >= 30 \n                            ? 'border-green-500 bg-green-500/10' \n                            : emailRetentionFeature.balance && emailRetentionFeature.balance >= 8\n                            ? 'border-yellow-500 bg-yellow-500/10'\n                            : 'border-red-500 bg-red-500/10'\n                        }`}\n                      >\n                        <div \n                          className={`w-2 h-2 rounded-full ${\n                            emailRetentionFeature.balance && emailRetentionFeature.balance >= 30 \n                              ? 'bg-green-500' \n                              : emailRetentionFeature.balance && emailRetentionFeature.balance >= 8\n                              ? 'bg-yellow-500'\n                              : 'bg-red-500'\n                          }`}\n                        ></div>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-white\">Retention</div>\n                        <div className=\"text-xs text-slate-400\">\n                          {emailRetentionFeature.balance?.toLocaleString()} days\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : customerError ? (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <CreditCard2 width=\"32\" height=\"32\" className=\"mx-auto mb-2 opacity-50\" />\n                <p>Unable to load subscription data</p>\n                <p className=\"text-sm text-destructive mt-1\">\n                  {customerError instanceof Error ? customerError.message : 'Unknown error'}\n                </p>\n                <Button \n                  variant=\"secondary\" \n                  size=\"sm\" \n                  onClick={() => refetchCustomer()}\n                  className=\"mt-2\"\n                >\n                  Retry\n                </Button>\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <CreditCard2 width=\"32\" height=\"32\" className=\"mx-auto mb-2 opacity-50\" />\n                <p>No subscription data available</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Features Overview */}\n        {customerData && (\n          <Card className=\"border-none\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <ChartTrendUp width=\"20\" height=\"20\" className=\"text-purple-600\" />\n                Features Overview\n              </CardTitle>\n              <CardDescription>\n                Your current plan features and usage limits\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n                {/* VIP BYOK */}\n                {vipByokFeature && (\n                  <div className=\"p-6 rounded-xl bg-slate-50 dark:bg-slate-900/50 border border-slate-200 dark:border-slate-800 space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium text-slate-900 dark:text-slate-100\">VIP BYOK</h4>\n                      <div \n                        className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                          (vipByokFeature.unlimited || vipByokFeature.balance)\n                            ? 'bg-green-500/20 text-green-500' \n                            : 'bg-slate-500/20 text-slate-500'\n                        }`}\n                      >\n                        {(vipByokFeature.unlimited || vipByokFeature.balance) ? (\n                          <CircleCheck className=\"w-4 h-4\" />\n                        ) : (\n                          <X className=\"w-4 h-4\" />\n                        )}\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                      {(vipByokFeature.unlimited || vipByokFeature.balance) ? 'Enabled' : 'Disabled'}\n                    </p>\n                  </div>\n                )}\n\n                {/* Domains */}\n                {domainsFeature && (\n                  <div className=\"p-6 rounded-xl bg-slate-50 dark:bg-slate-900/50 border border-slate-200 dark:border-slate-800 space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium text-slate-900 dark:text-slate-100\">Domains</h4>\n                      <Globe2 className=\"w-5 h-5 text-blue-500\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-baseline\">\n                        <span className=\"text-2xl font-semibold text-slate-900 dark:text-slate-100\">\n                          {currentDomainCount}\n                        </span>\n                        <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                          / {domainsFeature.unlimited ? '∞' : domainsFeature.balance}\n                        </span>\n                      </div>\n                      {!domainsFeature.unlimited && domainsFeature.balance && (\n                        <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                            style={{ width: `${Math.min((currentDomainCount / domainsFeature.balance) * 100, 100)}%` }}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Email Retention */}\n                {emailRetentionFeature && (\n                  <div className=\"p-6 rounded-xl bg-slate-50 dark:bg-slate-900/50 border border-slate-200 dark:border-slate-800 space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium text-slate-900 dark:text-slate-100\">Email Retention</h4>\n                      <Archive className=\"w-5 h-5 text-amber-500\" />\n                    </div>\n                    <div className=\"space-y-1\">\n                      <p className=\"text-2xl font-semibold text-slate-900 dark:text-slate-100\">\n                        {emailRetentionFeature.unlimited ? 'Unlimited' : `${emailRetentionFeature.balance} days`}\n                      </p>\n                      <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n                        {emailRetentionFeature.unlimited ? 'Never expires' : 'Retention period'}\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Emails Received */}\n                {inboundTriggersFeature && (\n                  <div className=\"p-6 rounded-xl bg-slate-50 dark:bg-slate-900/50 border border-slate-200 dark:border-slate-800 space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium text-slate-900 dark:text-slate-100\">Emails Received</h4>\n                      <Envelope2 className=\"w-5 h-5 text-green-500\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-baseline\">\n                        <span className=\"text-2xl font-semibold text-slate-900 dark:text-slate-100\">\n                          {inboundTriggersFeature.usage || 0}\n                        </span>\n                        <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                          / {inboundTriggersFeature.unlimited ? '∞' : inboundTriggersFeature.balance}\n                        </span>\n                      </div>\n                      {!inboundTriggersFeature.unlimited && inboundTriggersFeature.balance && inboundTriggersFeature.balance > 0 && (\n                        <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\n                            style={{ width: `${Math.min(((inboundTriggersFeature.usage || 0) / inboundTriggersFeature.balance) * 100, 100)}%` }}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Emails Sent */}\n                {emailsSentFeature && (\n                  <div className=\"p-6 rounded-xl bg-slate-50 dark:bg-slate-900/50 border border-slate-200 dark:border-slate-800 space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-medium text-slate-900 dark:text-slate-100\">Emails Sent</h4>\n                      <Send className=\"w-5 h-5 text-purple-500\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-baseline\">\n                        <span className=\"text-2xl font-semibold text-slate-900 dark:text-slate-100\">\n                          {emailsSentFeature.usage || 0}\n                        </span>\n                        <span className=\"text-sm text-slate-600 dark:text-slate-400\">\n                          / {emailsSentFeature.unlimited ? '∞' : emailsSentFeature.balance}\n                        </span>\n                      </div>\n                      {!emailsSentFeature.unlimited && emailsSentFeature.balance && emailsSentFeature.balance > 0 && (\n                        <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\n                          <div \n                            className=\"bg-purple-500 h-2 rounded-full transition-all duration-300\"\n                            style={{ width: `${Math.min(((emailsSentFeature.usage || 0) / emailsSentFeature.balance) * 100, 100)}%` }}\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* API Keys Management */}\n        <Card className=\"border-none\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Key2 width=\"20\" height=\"20\" className=\"text-purple-600\" />\n                  API Keys\n                </CardTitle>\n                <CardDescription>\n                  Manage API keys for programmatic access to your account\n                </CardDescription>\n              </div>\n              <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n                <DialogTrigger asChild>\n                  <Button>\n                    <CirclePlus width=\"16\" height=\"16\" className=\"mr-2\" />\n                    Create API Key\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"sm:max-w-md\">\n                  <DialogHeader>\n                    <DialogTitle>Create New API Key</DialogTitle>\n                    <DialogDescription>\n                      Create a new API key for programmatic access to your account.\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4\" onKeyDown={(e) => {\n                    if (e.key === 'Enter' && !createApiKeyMutation.isPending) {\n                      e.preventDefault()\n                      handleCreateApiKey()\n                    }\n                  }}>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"name\">Name (optional)</Label>\n                      <Input\n                        id=\"name\"\n                        placeholder=\"My API Key\"\n                        value={createForm.name}\n                        onChange={(e) => setCreateForm(prev => ({ ...prev, name: e.target.value }))}\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"prefix\">Prefix (optional)</Label>\n                      <Input\n                        id=\"prefix\"\n                        placeholder=\"myapp\"\n                        value={createForm.prefix}\n                        onChange={(e) => {\n                          const value = e.target.value.replace(/\\s+/g, '-')\n                          setCreateForm(prev => ({ ...prev, prefix: value }))\n                        }}\n                      />\n                    </div>\n                                         <div className=\"flex justify-end gap-2\">\n                       <Button\n                         variant=\"secondary\"\n                         onClick={() => setIsCreateDialogOpen(false)}\n                       >\n                         Cancel\n                       </Button>\n                       <Button\n                         onClick={handleCreateApiKey}\n                         disabled={createApiKeyMutation.isPending}\n                       >\n                         {createApiKeyMutation.isPending ? 'Creating...' : 'Create API Key'}\n                       </Button>\n                     </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </div>\n          </CardHeader>\n          <CardContent>\n            {apiKeysError ? (\n              <div className=\"text-center py-8\">\n                <Key2 width=\"32\" height=\"32\" className=\"text-red-500 mx-auto mb-2\" />\n                <p className=\"text-sm text-red-600 mb-3\">Failed to load API keys</p>\n                <p className=\"text-xs text-muted-foreground mb-3\">\n                  {apiKeysError instanceof Error ? apiKeysError.message : 'Unknown error'}\n                </p>\n                <Button \n                  variant=\"secondary\" \n                  size=\"sm\" \n                  onClick={() => window.location.reload()}\n                >\n                  Retry\n                </Button>\n              </div>\n            ) : isLoadingApiKeys ? (\n              <div className=\"space-y-3\">\n                {[...Array(3)].map((_, i) => (\n                  <div key={i} className=\"flex items-center justify-between p-3 rounded-lg border\">\n                    <div className=\"flex items-center gap-3\">\n                      <Skeleton className=\"w-8 h-8 rounded-md\" />\n                      <div>\n                        <Skeleton className=\"h-4 w-32 mb-1\" />\n                        <Skeleton className=\"h-3 w-40\" />\n                      </div>\n                    </div>\n                    <Skeleton className=\"h-6 w-16 rounded-full\" />\n                  </div>\n                ))}\n              </div>\n            ) : apiKeys.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Key2 width=\"32\" height=\"32\" className=\"text-muted-foreground mx-auto mb-2\" />\n                <p className=\"text-sm text-muted-foreground mb-3\">No API keys created yet</p>\n                <Button \n                  variant=\"secondary\" \n                  size=\"sm\" \n                  onClick={() => setIsCreateDialogOpen(true)}\n                >\n                  <CirclePlus width=\"16\" height=\"16\" className=\"mr-2\" />\n                  Create Your First API Key\n                </Button>\n              </div>\n            ) : (\n              <div className=\"space-y-3\">\n                {apiKeys.map((apiKey) => (\n                  <div \n                    key={apiKey.id}\n                    className={`flex items-center justify-between p-1 ${apiKeys.length > 1 ? 'border-b' : ''}`}\n                  >\n                    <div className=\"flex items-center gap-3 flex-1\">\n                      <div className=\"flex items-center justify-center w-8 h-8 rounded-md bg-purple-100 border border-purple-200\">\n                        <Key2 width=\"16\" height=\"16\" className=\"text-purple-600\" />\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <div className=\"font-medium text-sm truncate\">\n                            {apiKey.name || 'Unnamed API Key'}\n                          </div>\n                          <Badge variant={apiKey.enabled ? \"default\" : \"secondary\"}>\n                            {apiKey.enabled ? 'Active' : 'Disabled'}\n                          </Badge>\n                        </div>\n                        <div className=\"text-xs text-muted-foreground space-y-1\">\n                          <div className=\"flex items-center gap-4\">\n                            <span>Key: {apiKey.prefix ? `${apiKey.prefix}_` : ''}***{apiKey.start}</span>\n                            {apiKey.remaining !== null && (\n                              <span>Remaining: {apiKey.remaining.toLocaleString()}</span>\n                            )}\n                          </div>\n                          <div className=\"flex items-center gap-4\">\n                            <span>Created: {formatDistanceToNow(new Date(apiKey.createdAt), { addSuffix: true })}</span>\n                            {apiKey.expiresAt && (\n                              <span className={new Date(apiKey.expiresAt) < new Date() ? 'text-red-500' : ''}>\n                                Expires: {formatDistanceToNow(new Date(apiKey.expiresAt), { addSuffix: true })}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                                             <Button\n                         variant=\"ghost\"\n                         size=\"sm\"\n                         onClick={() => handleUpdateApiKey(apiKey.id, { enabled: !apiKey.enabled })}\n                         disabled={updateApiKeyMutation.isPending}\n                       >\n                         {updateApiKeyMutation.isPending ? 'Updating...' : (apiKey.enabled ? 'Disable' : 'Enable')}\n                       </Button>\n                       <Button \n                         variant=\"ghost\" \n                         size=\"sm\" \n                         className=\"text-red-600 hover:text-red-700\"\n                         onClick={() => {\n                           setKeyToDelete(apiKey.id)\n                           setDeleteConfirmOpen(true)\n                         }}\n                       >\n                         <Trash2 width=\"16\" height=\"16\" />\n                       </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-none\">\n          <CardHeader>\n            <CardTitle>Profile Information</CardTitle>\n            <CardDescription>\n              Update your profile details and personal information\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <form action={handleUpdateProfile} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"name\">Full Name</Label>\n                  <Input \n                    id=\"name\" \n                    name=\"name\" \n                    defaultValue={session.user.name || ''} \n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">Email Address</Label>\n                  <Input \n                    id=\"email\" \n                    name=\"email\" \n                    type=\"email\" \n                    defaultValue={session.user.email} \n                    disabled\n                    className=\"bg-muted\"\n                  />\n                </div>\n              </div>\n              {/* <div className=\"space-y-2\">\n                <Label htmlFor=\"image\">Profile Image URL</Label>\n                <Input \n                  id=\"image\" \n                  name=\"image\" \n                  type=\"url\" \n                  defaultValue={session.user.image || ''} \n                  placeholder=\"https://example.com/avatar.jpg\"\n                />\n              </div> */}\n              <Button type=\"submit\" disabled={isLoading}>\n                {isLoading ? 'Updating...' : 'Update Profile'}\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-none\">\n          <CardHeader>\n            <CardTitle>Account Status</CardTitle>\n            <CardDescription>\n              Your account verification and status information\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <span>Email Verification</span>\n              <Badge variant={session.user.emailVerified ? \"default\" : \"destructive\"}>\n                {session.user.emailVerified ? 'Verified' : 'Unverified'}\n              </Badge>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span>Account Created</span>\n              <span className=\"text-sm text-muted-foreground\">\n                {new Date(session.user.createdAt).toLocaleDateString()}\n              </span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span>Last Updated</span>\n              <span className=\"text-sm text-muted-foreground\">\n                {new Date(session.user.updatedAt).toLocaleDateString()}\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={deleteConfirmOpen} onOpenChange={setDeleteConfirmOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Delete API Key</DialogTitle>\n            <DialogDescription>\n              Are you sure you want to delete this API key? This action cannot be undone and will immediately revoke access for any applications using this key.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex justify-end gap-2 mt-4\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setDeleteConfirmOpen(false)\n                setKeyToDelete(null)\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => {\n                if (keyToDelete) {\n                  handleDeleteApiKey(keyToDelete)\n                  setDeleteConfirmOpen(false)\n                  setKeyToDelete(null)\n                }\n              }}\n            >\n              Delete\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* New API Key Display Dialog */}\n      <Dialog open={showNewApiKey} onOpenChange={setShowNewApiKey}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <CircleCheck width=\"20\" height=\"20\" className=\"text-green-600\" />\n              API Key Created\n            </DialogTitle>\n            <DialogDescription>\n              Your new API key has been created. Make sure to copy it now as you won't be able to see it again.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label>API Key</Label>\n              <div className=\"flex items-center gap-2\">\n                <Input\n                  value={newApiKey || ''}\n                  readOnly\n                  className=\"font-mono text-sm\"\n                />\n                                 <Button\n                   variant=\"secondary\"\n                   size=\"sm\"\n                   onClick={() => copyToClipboard(newApiKey || '')}\n                 >\n                   <Clipboard2 width=\"16\" height=\"16\" />\n                 </Button>\n              </div>\n            </div>\n            <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-3\">\n              <div className=\"flex items-start gap-2\">\n                <div className=\"w-4 h-4 rounded-full bg-amber-500 mt-0.5 flex-shrink-0\"></div>\n                <div className=\"text-sm text-amber-800\">\n                  <strong>Important:</strong> This is the only time you'll see this API key. Make sure to copy and store it securely.\n                </div>\n              </div>\n            </div>\n            <Button \n              onClick={() => {\n                setShowNewApiKey(false)\n                setNewApiKey(null)\n                setIsCreateDialogOpen(false)\n              }}\n              className=\"w-full\"\n            >\n              I've Saved My API Key\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Upgrade Dialog */}\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent className=\"sm:max-w-6xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"text-2xl font-bold text-center\">Upgrade Your Plan</DialogTitle>\n            <DialogDescription className=\"text-center\">\n              Choose the plan that best fits your needs and unlock more features\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"mt-6\">\n            <PricingTable />\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Upgrade Success Dialog */}\n      <Dialog open={isUpgradeSuccessOpen} onOpenChange={setIsUpgradeSuccessOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <div className=\"mx-auto w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mb-4\">\n              <CircleCheck width=\"24\" height=\"24\" className=\"text-green-600\" />\n            </div>\n            <DialogTitle className=\"text-2xl font-bold text-center\">Upgrade Successful!</DialogTitle>\n            <DialogDescription className=\"text-center\">\n              Thank you for upgrading your plan! Your new features and limits are now active.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"mt-6 flex justify-center\">\n            <Button \n              onClick={() => {\n                setIsUpgradeSuccessOpen(false)\n                // Refresh customer data to show updated plan\n                refetchCustomer()\n              }}\n              className=\"w-full\"\n            >\n              Continue\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n} "],"names":[],"mappings":"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"}