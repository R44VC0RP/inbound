{"version":3,"sources":["turbopack:///[project]/node_modules/@radix-ui/number/src/number.ts","turbopack:///[project]/node_modules/@radix-ui/react-select/src/select.tsx","turbopack:///[project]/components/icons/chevron-up.tsx","turbopack:///[project]/components/ui/select.tsx"],"sourcesContent":["function clamp(value: number, [min, max]: [number, number]): number {\n  return Math.min(max, Math.max(min, value));\n}\n\nexport { clamp };\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VISUALLY_HIDDEN_STYLES } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value: string | undefined;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface ControlledClearableSelectProps {\n  value: string | undefined;\n  defaultValue?: never;\n  onValueChange: (value: string | undefined) => void;\n}\n\ninterface ControlledUnclearableSelectProps {\n  value: string;\n  defaultValue?: never;\n  onValueChange: (value: string) => void;\n}\n\ninterface UncontrolledSelectProps {\n  value?: never;\n  defaultValue?: string;\n  onValueChange?: {\n    (value: string): void;\n    (value: string | undefined): void;\n  };\n}\n\ntype SelectControlProps =\n  | ControlledClearableSelectProps\n  | ControlledUnclearableSelectProps\n  | UncontrolledSelectProps;\n\ninterface SelectSharedProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n  form?: string;\n}\n\n// TODO: Should improve typing somewhat, but this would be a breaking change.\n// Consider using in the next major version (along with some testing to be sure\n// it works as expected and doesn't cause problems)\ntype _FutureSelectProps = SelectSharedProps & SelectControlProps;\n\ntype SelectProps = SelectSharedProps & {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n};\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: SELECT_NAME,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange as any,\n    caller: SELECT_NAME,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? form || !!trigger.closest('form') : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <SelectBubbleInput\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n            form={form}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </SelectBubbleInput>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = (pointerEvent?: React.MouseEvent | React.PointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY),\n        };\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={shouldShowPlaceholder(context.value) ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n\n            // Open on click when using a touch or pen device\n            if (pointerTypeRef.current !== 'mouse') {\n              handleOpen(event);\n            }\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            pointerTypeRef.current = event.pointerType;\n\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click); also not for touch\n            // devices because that would open the menu on scroll. (pen devices behave as touch on iOS).\n            if (event.button === 0 && event.ctrlKey === false && event.pointerType === 'mouse') {\n              handleOpen(event);\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder = '', ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {shouldShowPlaceholder(context.value) ? <>{placeholder}</> : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '▼'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst Slot = createSlot('SelectContent.RemoveScroll');\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem =\n          items.length > 0 && selectedItem === items[items.length - 1]!.ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0]!.ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              // Viewport should only be scrollable in the vertical direction.\n              // This won't work in vertical writing modes, so we'll need to\n              // revisit this if/when that is supported\n              // https://developer.chrome.com/blog/vertical-form-controls\n              overflow: 'hidden auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    if (value === '') {\n      throw new Error(\n        'A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.'\n      );\n    }\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onClick={composeEventHandlers(itemProps.onClick, () => {\n              // Open on click when using a touch or pen device\n              if (pointerTypeRef.current !== 'mouse') handleSelect();\n            })}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, () => {\n              // Using a mouse you should be able to do pointer down, move through\n              // the list, and release the pointer over the item to select it.\n              if (pointerTypeRef.current === 'mouse') handleSelect();\n            })}\n            onPointerDown={composeEventHandlers(itemProps.onPointerDown, (event) => {\n              pointerTypeRef.current = event.pointerType;\n            })}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              // Remember pointer type when sliding over to this item from another one\n              pointerTypeRef.current = event.pointerType;\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else if (pointerTypeRef.current === 'mouse') {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'SelectBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.select>;\ninterface SwitchBubbleInputProps extends InputProps {}\n\nconst SelectBubbleInput = React.forwardRef<HTMLSelectElement, SwitchBubbleInputProps>(\n  ({ __scopeSelect, value, ...props }: ScopedProps<SwitchBubbleInputProps>, forwardedRef) => {\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current;\n      if (!select) return;\n\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much as\n     * possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programmatically and bubble to any parent form `onChange`\n     * event. Adding the `value` will cause React to consider the programmatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use visually hidden styles rather than `display: \"none\"` because\n     * Safari autofill won't work otherwise.\n     */\n    return (\n      <Primitive.select\n        {...props}\n        style={{ ...VISUALLY_HIDDEN_STYLES, ...props.style }}\n        ref={composedRefs}\n        defaultValue={value}\n      />\n    );\n  }\n);\n\nSelectBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction shouldShowPlaceholder(value?: string) {\n  return value === '' || value === undefined;\n}\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0]! : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n","import React, {SVGProps} from 'react';\n\ntype IconProps = SVGProps<SVGSVGElement> & {\n\tsecondaryfill?: string;\n\tstrokewidth?: number;\n\ttitle?: string;\n}\n\nfunction ChevronUp({fill = 'currentColor', secondaryfill, title = 'badge 13', ...props}: IconProps) {\n\tsecondaryfill = secondaryfill || fill;\n\n\treturn (\n\t\t<svg height=\"18\" width=\"18\" {...props} viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<title>{title}</title>\n\t<g fill={fill}>\n\t\t<path d=\"M9.53,4.72c-.293-.293-.768-.293-1.061,0L2.22,10.97c-.293,.293-.293,.768,0,1.061s.768,.293,1.061,0l5.72-5.72,5.72,5.72c.146,.146,.338,.22,.53,.22s.384-.073,.53-.22c.293-.293,.293-.768,0-1.061l-6.25-6.25Z\" fill={fill}/>\n\t</g>\n</svg>\n\t);\n};\n\nexport default ChevronUp;","\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport Check2 from \"@/components/icons/check-2\"\nimport ChevronDown from \"@/components/icons/chevron-down\"\nimport ChevronUp from \"@/components/icons/chevron-up\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-xl border border-border bg-background text-foreground px-3 py-2 text-sm shadow-sm data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-primary disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"opacity-50\" width=\"16\" height=\"16\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp width=\"16\" height=\"16\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown width=\"16\" height=\"16\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-xl border border-border bg-card text-card-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-lg py-1.5 pl-2 pr-8 text-sm text-foreground outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 hover:bg-accent/50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check2 width=\"16\" height=\"16\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":["handleScroll","canScrollUp","canScrollDown","Root","Content","Arrow"],"mappings":"+DAAA,SAAS,EAAM,CAAA,CAAe,CAAC,EAAK,EAAG,CAAA,CACrC,AADkE,OAC3D,KAAK,GAAA,CAAI,EAAK,KAAK,GAAA,CAAI,EAAK,GACrC,EAD0C,CAAC,sqBCD3C,IAAA,EAAuB,EAAA,CAAA,CAAA,EAAX,MACZ,EAA0B,EAAA,CADH,AACG,CAAA,EAAd,MACZ,EAAsB,EAAA,CAAb,AAAa,CAAA,EADI,MAE1B,EAAqC,EADf,AACe,CAA5B,AAA4B,CAAA,QACrC,EAAiC,EAAA,CAAA,AAAxB,CAAwB,QACjC,EAAgC,EAAA,CAAvB,AAAuB,AAFK,CAEL,QAChC,CAFiC,CAEE,EAAA,CAA1B,AAA0B,CAAA,QADH,AAEhC,EAA6B,EAAA,CAAA,AAApB,CAAoB,QAC7B,EAAiC,CAFE,CAEF,CAAxB,AAAwB,CAAA,KADJ,GAE7B,EAA+B,EAAA,CAAtB,AAAsB,CAAA,OAC/B,EAFiC,AAEN,EAAA,CAAlB,AAAkB,CAAA,QADI,AAE/B,EAAsB,EAAA,CAAA,AAAb,CAAa,GADK,KAE3B,EAAiC,EAAA,AADX,CACW,CAAA,EAArB,MAEZ,EAA0C,EAAA,CAAjC,AAAiC,CAAA,QAC1C,CAHiC,AAEd,CACO,EAAA,CAAjB,AAAiB,CAAA,QAC1B,EAA2B,EAAA,CAAA,AAAlB,CAAkB,EADD,EADgB,IAG1C,EAA+B,EAAA,CAAtB,AAAsB,CAAA,GADJ,KAE3B,EAAqC,EAAA,CAA5B,AAA4B,CAAA,OADN,CAE/B,EAAgC,EAAA,CAAvB,AAAuB,CAAA,QAChC,EAA4B,EAAA,CAAA,AAFS,AAE5B,CAAmB,QAC5B,AAFgC,EAEO,EAAA,CAA9B,AAA8B,CAAA,IADX,IAE5B,EAA2B,EAAA,CAAlB,AAAkB,CAAA,QAC3B,EAA6B,EAAA,CAAA,AAApB,CAAoB,CAFU,EACZ,KAkLjB,EAAA,EAAA,CAAA,AA0LsC,CA1LtC,KAjLmB,GAMvB,CA2KI,CA3KQ,CAAC,GA6LT,CA7Lc,QAAS,GA2KvB,OA3KkC,WAAW,CAAA,CACjD,EAAiB,CAAC,IAAK,OAAO,CAAA,CAM9B,EAAc,SAGd,CAAC,EAAY,EAAe,EAAqB,CAAA,CAAA,EAAA,EAAI,aAAJ,GAAI,EAGzD,GAGI,CAAC,EAAqB,EAAiB,CAAA,CAAA,CAHhC,CAGgC,EAAI,SAAJ,SAAI,EAAmB,EAAa,CAC/E,IACA,iBAAA,CACD,EACK,EAAA,CAAiB,EAAA,EAAA,iBAAA,CAAkB,GAoBnC,CAAC,EAAgB,EAAgB,CAAI,EAAwC,GAQ7E,CAAC,EAA6B,EAA6B,CAC/D,EAAqD,AAThB,AAAuD,GA6DxF,EAAgC,AAAC,IACrC,EArDgE,CAqD1D,GADmE,SArDV,GAuD7D,CAAA,UACA,CAAA,CACA,KAAM,CAAA,aACN,CAAA,cACA,CAAA,CACA,MAAO,CAAA,cACP,CAAA,eACA,CAAA,CACA,KAAA,MACA,CAAA,CACA,cAAA,UACA,CAAA,UACA,CAAA,MACA,CAAA,CACF,CAAI,EACE,EAAc,EAAe,GAC7B,CAAC,EAAS,EAAU,CAAA,CAAA,EAAA,CADsB,CACZ,EAAV,MAAU,EAAsC,IAAI,EACxE,CAAC,EAAW,EAAY,CAAA,CAAA,EAAU,EAAA,IAAV,IAAU,EAAoC,IAAI,EAC1E,CAAC,EAAsB,EAAuB,CAAA,CAAA,EAAA,EAAU,QAAA,GAAS,GACjE,CAD8C,CAC9C,AADsE,CACtE,EAAA,EAAY,YAAA,EAAa,GAAG,AAC5B,CAAC,EAAM,EAAO,CAAA,CAAA,EAAI,CAAJ,CAAI,oBAAA,EAAqB,CAC3C,KAAM,EACN,YAAa,GAAe,GAC5B,SAAU,EACV,OAAQ,CACV,CAAC,EACK,CAAC,EAAO,EAAQ,CAAA,CAAA,EAAA,EAAI,AAAJ,oBAAI,EAAqB,CAC7C,KAAM,EACN,YAAa,EACb,SAAU,EACV,OAAQ,CACV,CAAC,EACK,EAAA,CAAA,EAAA,EAAiC,MAAA,EAAwC,IAAI,EAG7E,GAAgB,GAAU,GAAQ,CAAC,CAAC,EAAQ,OAAA,CAAQ,MAAM,EAC1D,CAAC,CAD6D,CAC3C,EAAmB,CAAA,CAAA,EAAA,EAAU,QAAA,EAAS,CAAnB,GAAuB,IAAkB,CAAC,AAOhF,EAAkB,EAPuC,IAOjC,IAAA,CAAK,GAChC,GAAA,CAAI,AAAC,GAAW,EAAO,IADyB,CACzB,CAAM,KAAK,EAClC,IAAA,CAAK,GAAG,EAEX,MACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAiB,EAAjB,EAAiB,CAAhB,CAAsB,GAAG,CAAA,CACxB,SAAA,CAAA,EAAA,EAAA,IAAA,CADF,CACG,EAAA,CAAD,SACE,EACA,MAAO,UACP,CAHF,CAIE,gBAAiB,YACjB,EACA,kBAAmB,uBACnB,EACA,6BAA8B,EAC9B,UAAW,CAAA,EAAA,EAAA,KAAA,CAAM,SACjB,EACA,cAAe,OACf,EACA,aAAc,EACd,IAAK,2BACL,WACA,EAEA,SAAA,CAAA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,QAAA,CAAX,CAAoB,MAAO,EAC1B,SAAA,CAAA,EADF,AACE,EAAA,GAAA,EAAC,EAAA,CACC,CADF,KACS,EAAM,aAAA,CACb,OAFF,WAEE,CAAA,EAAA,EAAyB,WAAA,EAAY,AAAC,IACpC,EAAoB,AAAC,GAAS,EADiB,EACb,IAAI,GAAM,CAAF,EAAE,CAAI,GAClD,EAAG,CAAC,AADoD,CACnD,AADoD,EAEzD,qBAAA,CAAA,EAAA,EAA4B,WAAA,EAAY,AAAC,IACvC,EAAoB,AAAC,IACnB,CAFgD,GAE1C,CADsB,CACT,IAAI,IAAI,GAE3B,CAF+B,MAC/B,EAAW,MAAA,CAAO,GACX,CACT,CAAC,CAFyB,AAG5B,EAAG,CAAC,CAAC,WAEJ,CAAA,EACH,CACF,EAEC,EACC,CAAA,EAAA,EAAA,IAAA,EAAC,GAAA,AAAD,CAEE,YAFF,GAEa,WACX,CAHF,CAIE,SAAU,CAAA,OACV,eACA,QACA,EAEA,SAAU,AAAC,GAAU,EAAS,EAAM,MAAA,CAAO,KAAK,WAChD,OACA,EAEC,SAAA,CAAU,KAAA,IAAV,AAAsB,EAAA,CAAA,EAAA,EAAA,GAAA,EAAC,CAAD,QAAC,CAAO,MAAM,EAAA,CAAG,EAAK,KAC5C,MADsB,AAChB,IAAA,CAAK,GAAgB,EAbvB,GAeL,KAAA,EACN,CACF,AAJoC,CAMxC,EAEA,EAAO,WAAA,CAAc,EAMrB,IAAM,EAAe,gBAMf,EAAA,CAAA,EAAA,EAAsB,UAAA,EAC1B,CAAC,EAAwC,KACvC,GAAM,SADkD,MAChD,CAAA,CAAe,YAAW,CAAA,CAAO,GAAG,EAAa,CAAI,EACvD,EAAc,EAAe,GAC7B,CAFmD,CAEzC,EAAiB,EAAc,GACzC,CAF0C,CAE7B,EAAQ,MADiC,EACjC,EAAY,EACjC,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,EAAQ,eAAe,EACpE,EAAW,EAAc,GACzB,EAAuB,CAAA,EAAA,EAAA,GADe,GACf,EAA0C,OAAO,EAExE,CAAC,EAAW,EAAuB,EAAc,CAAI,GAAmB,AAAC,IAC7E,IADqD,AAC/C,EAAe,CADmE,GACxD,KAAF,CAAE,CAAO,AAAC,GAAS,CAAC,EAAK,QAAQ,EACzD,EAAc,EAAa,IAAA,CAAK,AAAC,GAAS,EAAK,KAAA,GAAU,EAAQ,KAAK,EACtE,EAAW,GAAa,EAAc,EAAQ,EACnC,MAAA,GAD8C,AACnC,CAAxB,GACF,EAAQ,aAAA,CAAc,EAAS,KAAK,CAExC,CAAC,EAEK,EAAa,AAAC,IACb,IACH,EAAQ,MADO,CAD0D,KAEjE,EAAa,GAErB,CAFyB,IAKvB,IACF,EAAQ,IAJO,IAGC,gBACR,CAAyB,OAAA,CAAU,CACzC,EAAG,KAAK,KAAA,CAAM,EAAa,KAAK,EAChC,EAAG,KAAK,KAAA,CAAM,EAAa,KAAK,EAClC,CAEJ,EAEA,MACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAiB,EAAjB,IAAiB,CAAhB,CAAuB,SAAO,EAAE,GAAG,CAAA,CAClC,MADF,GACE,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,MAAA,CAAV,CACC,KAAK,OADP,EAEE,KAAK,WACL,gBAAe,EAAQ,SAAA,CACvB,gBAAe,EAAQ,IAAA,CACvB,gBAAe,EAAQ,QAAA,CACvB,oBAAkB,OAClB,IAAK,EAAQ,GAAA,CACb,aAAY,EAAQ,IAAA,CAAO,OAAS,SACpC,SAAU,EACV,gBAAe,EAAa,GAAK,KAAA,EACjC,mBAAkB,GAAsB,EAAQ,KAAK,EAAI,GAAK,KAAA,EAC7D,GAAG,CAAA,CACJ,IAAK,EAEL,QAAA,CAAA,EAAA,EAAS,oBAAA,EAAqB,EAAa,OAAA,CAAS,AAAC,IAMnD,EAAM,IANuD,SAMvD,CAAc,KAAA,CAAM,EAGK,SAAS,CAApC,EAAe,OAAA,EACjB,EAAW,EAEf,CAAC,EAFmB,AAGpB,cAAA,CAAA,EAAA,EAAe,oBAAA,EAAqB,EAAa,aAAA,CAAgB,AAAD,IAC9D,EAAe,IAD0D,GAC1D,CAAU,EAAM,WAAA,CAI/B,IAAM,EAAS,EAAM,MAAA,CACjB,EAAO,iBAAA,CAAkB,EAAM,SAAS,GAAG,AAC7C,EAAO,qBAAA,CAAsB,EAAM,SAAS,EAMzB,IAAjB,EAAM,MAAA,EAAkC,KAAlB,EAAM,OAAA,EAAqB,AAAsB,SAAS,GAAzB,WAAA,GACzD,EAAW,GAEX,EAFgB,AAEV,cAAA,CAAe,EAEzB,CAAC,EACD,UAAA,CAAW,EAAA,EAAA,oBAAA,EAAqB,EAAa,SAAA,CAAW,AAAC,IACvD,IAAM,EAD2D,AACrB,KAAtB,EAAU,OAAA,AAE5B,CADkB,AACjB,EADuB,OAAA,EAAW,EAAM,MAAA,EAAU,EAAM,OAAA,EAClB,EAAG,EAAxB,EAAM,GAAA,CAAI,MAAA,EAAc,EAAsB,EAAM,GAAG,IACzE,GAAiB,AAAc,QAAR,GAAA,AAAQ,EAAK,CAAA,AACpC,EAAU,QAAA,CAAS,EAAM,GAAG,GAAG,CACjC,IACA,EAAM,KADK,SACL,CAAe,EAEzB,CAAC,CAAA,EACH,CACF,CAEJ,GAGF,EAAc,WAAA,CAAc,EAM5B,IAAM,EAAa,cAQb,EAAA,CAAA,EAAA,EAAoB,UAAA,EACxB,CAAC,EAAsC,KAErC,GAAM,SAFgD,MAE9C,CAAA,WAAe,CAAA,OAAW,CAAA,UAAO,CAAA,aAAU,EAAc,EAAA,CAAI,GAAG,EAAW,CAAI,EACjF,EAAU,EAAiB,EAAY,AADsC,GAE7E,UADoD,oBAClD,CAAA,CAA6B,CAAI,EACnC,EAAc,AAAa,KAAA,MAC3B,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,EAAQ,iBAAiB,EAM5E,MAJA,CAKE,AALF,EAAA,EAAA,SAKE,MALF,EAAgB,KACd,CADoB,CACS,EAC/B,EAAG,CAAC,EAA8B,EAAY,EADJ,AAIxC,CAAA,CALF,CAKE,EAAA,EAH2C,CAG3C,EAAA,EAAC,SAAA,CAAU,IAAA,CAAV,CACE,GAAG,CAAA,CACJ,IAAK,EAGL,GALF,GAKS,CAAE,cAAe,MAAO,EAE9B,SAAA,GAAsB,EAAQ,KAAK,EAAI,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,CAAA,CAAG,SAAA,CAAA,CAAY,EAAM,CAAA,EAGnE,GAGF,CANgD,CAMpC,MANoC,KAMpC,CAAc,EAW1B,IAAM,EAAA,CAAA,EAAA,EAAmB,UAAA,EACvB,CAAC,EAAqC,KACpC,GAAM,SAD+C,MAC7C,CAAA,UAAe,CAAA,CAAU,GAAG,EAAU,CAAI,EAClD,KAD8C,CAE5C,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,EAAD,OAAC,CAAU,IAAA,CAAV,CAAe,cAAhB,CAA2B,EAAE,GAAG,CAAA,CAAW,IAAK,EAC7C,SAAA,GAAY,GAAA,CACf,CAEJ,GAGF,EAAW,WAAA,CAhBO,EAgBO,WAiBzB,IAAM,EAA4C,AAAC,GAC1C,CAAA,EAAA,EAAA,EADoF,CACpF,EAAA,EAAC,MAAA,CAAA,CAAgB,SAAO,EAAE,GAAG,CAAA,CAAO,EAG7C,EAAa,EAHJ,SAGI,CAfO,EAeO,aAM3B,IAAM,EAAe,gBAKf,EAAA,CAAA,EAAA,EAAsB,UAAA,EAC1B,CAAC,EAAwC,KACvC,IAAM,EAAU,EAAiB,EAAc,EADS,AACH,aAAa,EAC5D,CAAC,EAAU,EAAW,CAAA,CAAA,EAAA,EAAU,GAAV,KAAU,CAA2B,SAOjE,CAJA,CAAA,EAAA,AAII,EAJJ,eAAA,EAAgB,KACd,CADoB,CACR,IAAI,SADlB,QACmC,AACnC,CADoC,CACjC,CAAC,CAAC,EAEA,EAAQ,IAAA,EAAM,AAcZ,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAmB,GAAG,CAAA,CAAO,IAAK,CAAA,CAAc,EAZ/C,EAAA,CAAA,EAAA,EACM,SAWR,GAXQ,EACP,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAsB,AAAvB,MAA8B,EAAM,aAAA,CAClC,OADF,EACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,EAAZ,EAAY,CAAX,CAAgB,MAAO,EAAM,aAAA,CAC5B,EADF,OACE,CAAA,EAAA,EAAA,GAAA,EAAC,IAAD,EAAC,CAAK,SAAA,EAAM,QAAA,CAAS,CAAA,CACvB,CAAA,CACF,CAFI,CALG,CAQP,EAEF,IAIR,GAGF,EAAc,WAAA,CAAc,EA2B5B,GAAM,CAAC,EAAuB,EAAuB,CACnD,EAA+C,GAgC3C,EAAA,CAAA,EAAA,EAAO,EAhCgD,MADR,EAiCxC,EAAW,4BAA4B,EAE9C,EAAA,CAAA,EAAA,EAA0B,UAAA,EAC9B,CAAC,EAA4C,KAC3C,GAAM,SADsD,MAE1D,CAAA,UACA,EAAW,cAAA,kBACX,CAAA,CACA,iBAAA,sBACA,CAAA,EAAA,EAAA,EAGA,CAAA,YACA,CAAA,OACA,CAAA,CACA,aAAA,cACA,CAAA,mBACA,CAAA,kBACA,CAAA,QACA,CAAA,kBACA,CAAA,iBACA,CAAA,CAEA,CAFA,EAAA,AAEG,EACL,CAAI,EACE,EAAU,EAAiB,EAAc,GACzC,CAAC,EAAS,EAAU,CAAA,CAAA,EAAA,CADkC,CACxB,EAAV,MAAU,EAA0C,IAAI,EAC5E,CAAC,EAAU,EAAW,CAAA,CAAA,EAAU,EAAA,GAAV,KAAU,EAAuC,IAAI,EAC3E,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,AAAC,GAAS,EAAW,IAAI,AACtE,CADuE,AACtE,EAAc,EAAe,CAAA,CAAA,EAAA,EAAU,OAAV,CAAU,EAAmC,IAAI,EAC/E,CAAC,EAAkB,EAAmB,CAAA,CAAA,EAAA,EAAU,QAAA,EACpD,CAD0C,KAGtC,EAAW,EAAc,GACzB,CAAC,EAAc,EAAe,CAAA,CAAA,EAAA,CADQ,CACE,OAAV,CAAU,GAAS,GACjD,EADsD,AACtD,CAAA,EAAA,EAA+B,MAAA,GAAO,KAAK,GAG3C,SAAA,EAAU,KACd,CADoB,EAChB,CAJ+B,CAItB,MAAA,CAAA,EAAA,EAAO,UAAA,EAAW,EACjC,EAAG,CAAC,EADoC,AAC5B,EAIZ,CAAA,EAJW,AAIX,EAAA,WALsB,GAKtB,CAAe,GAEf,IAAM,EAAA,CAAmB,EAAA,EAAA,OAFzB,IAEyB,EACvB,AAAC,IACC,GAAM,CAAC,EAAW,GAAG,EADoB,AACX,CAAI,IAAW,EAAf,CAAe,CAAI,AAAC,CAAP,EAAgB,EAAK,GAAA,CAAI,OAAO,EACrE,CAAC,EAAQ,CAAI,EAAU,GAAd,EAAc,CAAM,CAAA,CAAE,EAE/B,EAA6B,SAAS,aAAA,CAC5C,IAAA,IAAW,KAAa,EAEtB,GAAI,IAAc,EAFgB,EAGlC,GAAW,eAAe,CAAE,IADkB,EACX,SAAU,CAAC,EAE1C,IAAc,GAAa,IAAU,EAAS,GAAT,MAAS,EAAY,EAC1D,IAAc,GAAY,IAAU,EAAS,GAAT,MAAS,CAAY,EAAS,YAAA,EACtE,GAAW,MAAM,EACb,SAAS,aAAA,GAAkB,GANe,MAQlD,EACA,CAAC,EAAU,EAAQ,EAGf,EAAA,CAAA,CAHe,CAGf,EAA0B,EANiC,CAAA,QAMjC,EAC9B,IAAM,EAAW,CAAC,EAAc,EAAQ,EACxC,CAAC,EADsC,AAC1B,EAAc,EAAO,GAK9B,EAL8B,AAK9B,EAAA,SAAA,EAAU,KACV,CADgB,EAElB,GAEJ,EAAG,CAAC,EAAc,EAAkB,CAHhB,CAOpB,GAAM,GANgB,OAEa,IAI3B,CAAA,0BAAc,CAAA,CAAyB,CAAI,GAC7C,EAAA,EAAA,SAAA,EAAU,KACd,CADoB,EAChB,EAAS,CACX,IAAI,EAAmB,CAAE,EAAG,EAAG,EAAG,CAAE,EAE9B,EAAoB,AAAC,IACzB,EAAmB,CACjB,EAAG,CAF4C,IAEvC,GAAA,CAAI,KAAK,KAAA,CAAM,EAAM,KAAK,GAAK,CAAL,CAA8B,OAAA,EAAS,IAAK,CAAA,CAAE,CAChF,EAAG,KAAK,GAAA,CAAI,KAAK,KAAA,CAAM,EAAM,KAAK,GAAK,CAAL,CAA8B,OAAA,EAAS,IAAK,CAAA,CAAE,AAClF,CACF,EACM,EAAkB,AAAC,IAEnB,EAAiB,CAAA,EAAK,CAFqB,GAEf,EAAiB,CAAA,EAAK,GACpD,CADwD,CAClD,cAAA,CAAe,EAGjB,AAAC,EAAQ,QAAA,CAAS,EAAM,MAAqB,GAAG,AAClD,GAAa,GAGjB,EAHsB,OAGb,mBAAA,CAAoB,cAAe,GAC5C,EAAyB,OAAA,CAAU,IAD0B,AAE/D,EAOA,OALyC,MAAM,CAA3C,EAAyB,OAAA,GAC3B,SAAS,gBAAA,CAAiB,cAAe,GACzC,SAAS,KADiD,WACjD,CAAiB,YAAa,EAAiB,CAAE,QAAS,GAAM,MAAM,CAAK,CAAC,GAGhF,KACL,CADW,QACF,mBAAA,CAAoB,cAAe,GAC5C,SAAS,KADoD,cACpD,CAAoB,YAAa,EAAiB,CAAE,SAAS,CAAK,CAAC,CAC9E,CACF,CACF,EAAG,CAAC,EAAS,EAAc,EAAyB,OAE9C,SAAA,EAAU,IAFmC,CAGjD,CADoB,GACd,EAAQ,IAAM,GAAa,GAGjC,EAHsC,KACtC,OAAO,gBAAA,CAAiB,OAAQ,GAChC,EADqC,KAC9B,gBAAA,CAAiB,SAAU,GAC3B,EADgC,GAErC,CADW,MACJ,mBAAA,CAAoB,OAAQ,GACnC,EADwC,KACjC,mBAAA,CAAoB,SAAU,EACvC,CACF,EAF8C,AAE3C,CAAC,EAAa,EAEjB,GAAM,CAAC,EAAW,EAFF,AAEuB,CAAI,GAAmB,AAAC,IAC7D,IAAM,EAAe,CADmD,GACxC,CADK,IACP,CAAE,CAAQ,AAAD,GAAU,CAAC,EAAK,QAAQ,EACzD,EAAc,EAAa,IAAA,CAAK,AAAC,GAAS,EAAK,GAAA,CAAI,OAAA,GAAY,SAAS,aAAa,EACrF,EAAW,GAAa,EAAc,EAAQ,GAChD,GAKF,KAN6D,EACjD,IAKD,IAAO,EAAS,GAAA,CAAI,OAAA,CAAwB,KAAA,CAAM,CAAC,CAElE,CAAC,EAEK,EAAA,CAAwB,EAAA,EAAA,WAAA,EAC5B,CAAC,EAAgC,EAAe,KAC9C,IAAM,EAAmB,CAAC,CAD0C,CACnB,OAAA,EAAW,CAAC,GACpB,AACrC,KADqC,IAAlB,EAAQ,KAAA,EAAuB,EAAQ,KAAA,GAAU,GAClD,CAAA,GAAkB,CACtC,EAAgB,GACZ,CADgB,GACE,EAAuB,OAAA,EAAU,CAAA,CAAjC,CAE1B,EACA,CAAC,EAAQ,KAAK,CAAA,EAEV,GAAA,CAAA,EAAA,EAAwB,WAAA,EAAY,IAAM,GAAS,MAAM,EAAG,CAAC,EAAQ,EACrE,GADoE,AACpE,CAAA,EAAA,EAA4B,WAAA,EAChC,CAAC,EAAoC,EAAe,KAClD,IAAM,EAAmB,CAAC,CAD8C,CACvB,OAAA,EAAW,CAAC,GACpB,AACrC,KADqC,IAAlB,EAAQ,KAAA,EAAuB,EAAQ,KAAA,GAAU,GAClD,CAAA,GAAkB,AACtC,EAAoB,EAExB,EAF4B,AAG5B,CAAC,EAAQ,KAAK,CAAA,EAGV,GAA8B,WAAb,EAAwB,GAAuB,EAGhE,GACJ,KAAmB,GACf,CACE,kBACA,QACA,cACA,eACA,oBACA,mBACA,SACA,EACA,mCACA,CACF,EACA,CAAC,EAEP,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CACC,CADF,KACS,UACP,EACA,WAHF,AAIE,iBAAkB,EAClB,+BACA,EACA,YAAa,uBACb,qBACA,mBACA,EACA,WACA,eACA,YAEA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,UAAC,CAAA,CAAa,GAAI,EAAM,WAAxB,KAAsC,EACpC,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,QAAC,CAAA,CACC,QAAO,GAGP,OAJF,CAIW,EAAQ,IAAA,CACjB,iBAAmB,AAAD,IAEhB,EAAM,IAFqB,UAErB,CAAe,CACvB,EACA,mBAAA,CAAA,EAAA,EAAoB,oBAAA,EAAqB,EAAkB,AAAC,IAC1D,EAAQ,IAD4D,GAAlD,AACV,EAAS,MAAM,CAAE,eAAe,CAAK,CAAC,EAC9C,EAAM,cAAA,CAAe,CACvB,CAAC,EAED,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,EAAD,cAAC,CAAA,CACC,QAAO,GACP,CAFF,4BAE6B,kBAC3B,uBACA,EAGA,eAAgB,AAAC,GAAU,EAAM,cAAA,CAAe,EAChD,UAAW,IAAM,EAAQ,YAAA,EAAa,GAEtC,EAF2C,OAE3C,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACE,KAAK,UACL,GAAI,EAAQ,QAFd,CAEc,CACZ,aAAY,EAAQ,IAAA,CAAO,OAAS,SACpC,IAAK,EAAQ,GAAA,CACb,cAAe,AAAC,GAAU,EAAM,cAAA,CAAe,EAC9C,GAAG,CAAA,CACH,GAAG,EAAA,CACJ,SAAU,IAAM,GAAgB,GAChC,CADoC,GAC/B,EACL,MAAO,CAEL,QAAS,OACT,cAAe,SAEf,QAAS,OACT,GAAG,EAAa,KAAA,AAClB,EACA,UAAA,CAAA,EAAA,EAAW,oBAAA,EAAqB,EAAa,SAAA,CAAW,AAAC,IACvD,IAAM,EAD2D,AAC3C,EAAM,OAAA,EAAW,EAAM,MAAA,EAAU,EAAM,OAAA,CAO7D,GAJI,AAAc,MAAO,IAAf,GAAA,EAAe,EAAM,cAAA,CAAe,EAE1C,AAAC,GAAsC,EAAG,EAAxB,EAAM,GAAA,CAAI,MAAA,EAAc,EAAsB,EAAM,GAAG,EAEzE,CAAC,UAAW,YAAa,OAAQ,KAAK,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,EAAG,CAE/D,IAAI,EAAiB,AADP,IAAW,KAAF,CAAE,CAAO,AAAC,GAAS,CAAC,EAAK,QAAQ,EAC7B,GAAA,CAAI,AAAC,GAAS,EAAK,GAAA,CAAI,OAAQ,EAK1D,GAHI,CAAC,UAAW,KAAK,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,GAAG,CAC1C,EAAiB,EAAe,KAAA,CAAM,EAAE,OAAA,EAAQ,EAE9C,CAAC,UAAW,WAAW,CAAA,CAAE,QAAA,CAAS,EAAM,GAAG,EAAG,CAChD,IAAM,EAAiB,EAAM,MAAA,CACvB,EAAe,EAAe,OAAA,CAAQ,GAC5C,EAAiB,EAAe,KAAA,CAAM,CADoB,CACL,CAAC,CACxD,CAMA,WAAW,IAAM,EAAW,IAE5B,EAAM,QAFoC,CAAC,KAErC,CAAe,CACvB,CACF,CAAC,CAAA,EACH,EACF,EACF,CACF,CAAA,EAGN,GAGF,EAAkB,WAAA,CAvTQ,EAuTM,kBAWhC,IAAM,EAAA,CAAA,EAAA,EAAkC,UAAA,EAGtC,CAAC,EAAoD,KACrD,GAAM,SADgE,MAC9D,CAAA,UAAe,CAAA,CAAU,GAAG,EAAY,CAAI,EAC9C,EAAU,EAAiB,EAAc,CADC,EAE1C,EAAiB,EAAwB,EAAc,GACvD,CAFsD,AAErD,EAAgB,EAAiB,CAAU,CAAA,EAAA,CADwB,CACxB,QAAA,CAAV,CAA0C,IAAI,EAChF,CAAC,EAAS,EAAU,CAAA,CAAA,EAAA,EAAU,EAAV,MAAU,EAAkD,IAAI,EACpF,EAAA,AAAe,GAAA,EAAA,eAAA,EAAgB,EAAc,AAAC,GAAS,EAAW,IAClE,AADsE,CAAC,CAC5D,EAAc,GACzB,EAAA,CAAA,EAAA,EAAgC,GADM,GACN,EAAO,IACvC,CAD4C,CAC5C,CAAA,EAAA,EAA4B,MAAA,GAAO,GAEnC,CAFuC,KADP,IAG9B,CAAA,cAAU,CAAA,kBAAc,CAAA,mBAAkB,CAAA,CAAkB,CAAI,EAClE,EAAA,CAAA,EAAA,EAAiB,WAAA,EAAY,KACjC,CADuC,EAErC,EAAQ,OAAA,EACR,EAAQ,SAAA,EACR,GACA,GACA,GACA,GACA,EACA,CACA,IAAM,EAAc,EAAQ,OAAA,CAAQ,qBAAA,CAAsB,EAKpD,EAAc,EAAQ,qBAAA,CAAsB,EAC5C,EAAgB,EAAQ,SAAA,CAAU,qBAAA,CAAsB,EACxD,EAAe,EAAiB,qBAAA,CAAsB,EAE5D,GAAoB,AAAhB,UAAQ,GAAA,CAAe,CACzB,IAAM,EAAiB,EAAa,IAAA,CAAO,EAAY,IAAA,CACjD,EAAO,EAAc,IAAA,CAAO,EAC5B,EAAY,EAAY,IAAA,CAAO,EAC/B,EAAkB,EAAY,KAAA,CAAQ,EACtC,EAAe,KAAK,GAAA,CAAI,EAAiB,EAAY,KAAK,EAC1D,EAAY,OAAO,UAAA,GAAa,CAChC,EAAc,CAAA,EAAA,EAAA,KAAA,EAAM,EAAM,IAO9B,KAAK,GAAA,CAAI,GAAgB,EAAY,GACtC,CAED,GAAe,KAHoC,AAGpC,CAAM,QAAA,CAAW,EAAkB,KAClD,EAAe,KAAA,CAAM,IAAA,CAAO,EAAc,IAC5C,KAAO,CACL,IAAM,EAAiB,EAAY,KAAA,CAAQ,EAAa,KAAA,CAClD,EAAQ,OAAO,UAAA,CAAa,EAAc,KAAA,CAAQ,EAClD,EAAa,OAAO,UAAA,CAAa,EAAY,KAAA,CAAQ,EACrD,EAAkB,EAAY,KAAA,CAAQ,EACtC,EAAe,KAAK,GAAA,CAAI,EAAiB,EAAY,KAAK,EAC1D,EAAW,OAAO,UAAA,GAAa,CAC/B,EAAe,CAAA,EAAA,EAAA,KAAA,EAAM,EAAO,IAEhC,KAAK,GAAA,CAAI,GAAgB,EAAW,GACrC,EAED,EAAe,KAHmC,AAGnC,CAAM,QAAA,CAAW,EAAkB,KAClD,EAAe,KAAA,CAAM,KAAA,CAAQ,EAAe,IAC9C,CAKA,IAAM,EAAQ,IACR,EAAkB,GADD,IACQ,WAAA,CAAc,GACvC,EAAc,EAAS,UADiC,EACjC,CAEvB,EAAgB,OAAO,gBAAA,CAAiB,GACxC,EAAwB,EADuB,OACd,EAAc,cAAA,CAAgB,EAAE,EACjE,EAAoB,SAAS,EAAc,UAAA,CAAY,EAAE,EACzD,EAA2B,SAAS,EAAc,iBAAA,CAAmB,EAAE,EAEvE,EAAoB,EAAwB,EAAoB,EADzC,SAAS,EAAc,CACgC,YADhC,CAAe,EAAE,EACsC,EACrG,EAAmB,KAAK,GAAA,CAAgC,EAA5B,EAAa,YAAA,CAAkB,GAE3D,EAAiB,OAAO,KAFoD,WAEpD,CAAiB,GACzC,EAAqB,GAD4B,MACnB,EAAe,UAAA,CAAY,EAAE,EAC3D,EAAwB,SAAS,EAAe,aAAA,CAAe,EAAE,EAEjE,EAAyB,EAAY,GAAA,CAAM,EAAY,MAAA,CAAS,IAAI,CAGpE,EAAyB,EAAa,YAAA,CAAe,EAErD,EAAyB,EAAwB,GAD9B,EAAa,SAAA,CAAY,CAAA,EAMlD,EAL2E,CAGvC,CAEhC,EAF0D,EAE7B,CAC/B,IAAM,EACJ,EAAM,MAAA,CAAS,GAAK,IAAiB,CAAA,CAAM,EAAM,MAAA,CAAS,CAAC,CAAA,CAAG,GAAA,CAAI,OAAA,CACpE,EAAe,KAAA,CAAM,MAAA,CAAS,MAG9B,IAAM,EAAmC,KAAK,GAAA,CAfd,AAgB9B,EAhBgD,EAiBhD,GAEG,EAAa,EAAwB,CAAA,GALxC,CAME,CANM,YAGR,AAHQ,CAAe,EAAS,SAAA,CAAY,EAAS,YAAA,EAOnD,GAGJ,EAAe,KAAA,CAAM,MAAA,CADN,AACe,EADU,EACD,IACzC,KAAO,CACL,IAAM,EAAc,EAAM,MAAA,CAAS,GAAK,CATtC,GASuD,CAAA,CAAM,CAAC,CAAA,CAAG,GAAA,CAAI,OAAA,CACvE,EAAe,KAAA,CAAM,GAAA,CAAM,MAC3B,IAAM,EAAgC,KAAK,GAAA,CACzC,EACA,EACE,EAAS,SAAA,EAER,CAFQ,CAEM,GAAqB,CAAA,CACpC,GAGJ,EAAe,KAAA,CAAM,MAAA,CADN,AACe,GAhCE,EAAoB,CAAA,EAgCb,KACvC,EAAS,SAAA,CAAY,EAAyB,EAAyB,EAAS,CAFjC,QAEiC,AAClF,CAEA,EAAe,KAAA,CAAM,IAVN,EAUM,CAAS,GAAG,MACjC,EAAe,KAAA,CADgC,AAC1B,CAD0B,IAAA,CAAA,GAC1B,CAAY,EAAmB,KACpD,EAAe,KAAA,CAAM,SAAA,CAAY,EAAkB,KAGnD,MAIA,KAJW,iBAIW,IAAO,EAAwB,OAAA,EAAU,EACjE,CACF,CAFwE,CAErE,CACD,EACA,EAAQ,OAAA,CACR,EAAQ,SAAA,CACR,EACA,EACA,EACA,EACA,EACA,EAAQ,GAAA,CACR,EACD,EAED,CAAA,EAAA,EAAA,eAAA,EAAgB,IAAM,IAAY,CAAC,EAAS,EAAb,AAG/B,GAAM,CAHqC,AAGpC,EAAe,CAHtB,CAGsC,CAAA,CAAA,EAAA,EAAU,QAAV,AAAU,CAAiB,GACjE,CAAA,EAAA,EAAA,eAAA,EAAgB,KACV,CADgB,EACP,EAAiB,GAAjB,IAAwB,GADvC,aACuC,CAAiB,GAAS,IAAF,EAAQ,CACvE,EAAG,CAAC,EAAQ,EAMZ,GANW,CAML,EAAA,CAAA,EAAA,EAAiC,WAAA,EACrC,AAAC,IACK,IAAwC,CADE,GAClC,EAAoB,AAAkB,OAAlB,GAC9B,IACA,KADS,CAET,EAAoB,OAAA,EAAU,EAElC,CAHwB,CAIxB,CAAC,EAAU,EAAiB,EAG9B,MACE,CAAA,EAAA,EAAA,EAJ4B,CAI5B,EAAC,GAAA,CAAD,AACE,MAAO,iBACP,KAFF,qBAGE,EACA,qBAAsB,EAEtB,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,IAAD,EAAC,CACC,IAAK,EACL,MAAO,CACL,QAAS,IAHb,GAII,cAAe,SACf,SAAU,QACV,OAAQ,CACV,EAEA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CACE,GAAG,CAAA,CACJ,IAAK,EACL,IAHF,EAGS,CAGL,UAAW,aAEX,UAAW,OACX,GAAG,EAAY,KAAA,AACjB,CAAA,EACF,EACF,EAGN,CAAC,EAED,EAA0B,WAAA,CAvNS,EAuNK,0BAYxC,IAAM,GAAA,CAAA,EAAA,EAA6B,UAAA,EAGjC,CAAC,EAA+C,KAChD,GAAM,SAD2D,MAE/D,CAAA,OACA,EAAQ,OAAA,kBACR,EA/jBmB,EA+jBA,CACnB,GAAG,EACL,CAAI,EACE,EAAc,EAAe,EAHd,CAKrB,MACE,CAAA,EAAA,CAH8C,CAG9C,GAAA,EAAiB,EAAA,EAAjB,KAAiB,CAAhB,CACE,GAAG,CAAA,CACH,GAAG,CAAA,CACJ,IAAK,OAHP,CAIE,EACA,mBACA,MAAO,CAEL,UAAW,aACX,GAAG,EAAY,KAAA,CAGb,0CAA2C,uCAC3C,yCAA0C,sCAC1C,0CAA2C,uCAC3C,+BAAgC,mCAChC,gCAAiC,mCAErC,CAAA,EAGN,CAAC,CAED,IAAqB,WAAA,CA1CQ,EA0CM,qBAYnC,GAAM,CAAC,GAAwB,GAAwB,CACrD,EAAgD,EAAc,CAAC,CAAC,EAE5D,GAAgB,SAHiC,QAWjD,GAAA,CAAA,EAAA,EAAuB,UAAA,EAC3B,CAAC,EAAyC,KACxC,GAAM,CAAE,QADiD,OACjD,CAAe,OAAA,CAAO,GAAG,EAAc,CAAI,EAC7C,EAAiB,EAAwB,GAAe,EADf,CAEzC,EAAkB,GAAyB,GAAe,EADW,CAErE,EAAA,CAAA,EAAA,EAAe,GADwD,YACxD,EAAgB,EAAc,EAAe,gBAAgB,EAC5E,EAAA,CAAA,EAAA,EAAyB,MAAA,EAAO,CAAC,EACvC,MACE,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,CAAA,CAEE,SAAA,CAAA,GAAA,EAAA,GAAA,CAFF,CAEG,OAFH,CAEG,CACC,uBADF,CAC2B,CACvB,OAAQ,CAAA,yKAAA,CAAA,AACV,QACA,CAAA,GAEF,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,IAAA,CAAX,CAAgB,MAAO,EACtB,SAAA,CAAA,EAAA,EAAA,EADF,CACE,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CACC,eADF,cAC6B,GAC3B,KAAK,eACJ,GAAG,CAAA,CACJ,IAAK,EACL,MAAO,CAIL,SAAU,WACV,KAAM,EAKN,SAAU,cACV,GAAG,EAAc,KAAA,AACnB,EACA,SAAA,CAAA,EAAA,EAAU,oBAAA,EAAqB,EAAc,QAAA,CAAU,AAAC,IACtD,IAAM,EAD0D,AAC/C,EAAM,aAAA,CACjB,gBAAE,CAAA,yBAAgB,CAAA,CAAwB,CAAI,EACpD,GAAI,GAAyB,SAAW,EAAgB,CACtD,IAAM,EAAa,KAAK,GAAA,CAAI,EAAiB,OAAA,CAAU,EAAS,SAAS,EACzE,GAAI,EAAa,EAAG,CAClB,IAAM,EAAkB,OAAO,WAAA,CAAc,GAGvC,EAAa,KAAK,GAAA,CAFH,AAEO,GAHkC,QAC9B,EAAe,CAEL,IAFK,CAAM,IAEF,KAFW,EAC5C,WAAW,EAAe,KAAA,CAAM,MAAM,GAGxD,GAAI,EAAa,EAAiB,CAChC,IAAM,EAAa,EAAa,EAC1B,EAAoB,KAAK,GAAA,CAAI,EAAiB,GAC9C,EAAa,EAAa,EAEhC,CAH8D,CAG/C,KAAA,CAAM,MAAA,CAAS,EAAoB,KACd,OAAO,CAAvC,EAAe,KAAA,CAAM,MAAA,GACvB,EAAS,SAAA,CAAY,EAAa,EAAI,EAAa,EAEnD,EAAe,KAAA,CAAM,cAAA,CAAiB,WAE1C,CACF,CACF,CACA,EAAiB,OAAA,CAAU,EAAS,SAAA,AACtC,CAAC,CAAA,EACH,CACF,EAAA,CACF,CAEJ,GAGF,GAAe,WAAA,CAAc,GAM7B,IAAM,GAAa,cAIb,CAAC,GAA4B,GAAqB,CACtD,EAA6C,IAKzC,GAAA,CAAA,EAAA,AALmD,EAK/B,GAN8B,OAM9B,EACxB,CAAC,EAAsC,KACrC,GAAM,SADgD,MAC9C,CAAA,CAAe,GAAG,EAAW,CAAI,EACnC,EAAA,CAAA,EAAA,CAD+B,CACrB,KAAA,CAAM,GACtB,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AAA4B,MAAO,EAAe,GAAI,EACpD,SAAA,CAAA,EAAA,EAAA,CADF,EACE,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CAAc,KAAK,QAAQ,EAA5B,gBAA6C,EAAU,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,CAAA,CAC3F,CAEJ,GAGF,GAAY,WAAA,CAAc,GAM1B,IAAM,GAAa,cAKb,GAAoB,CAAA,EAAA,EAAA,UAAA,EACxB,CAAC,EAAsC,KACrC,GAAM,CAAE,QAD8C,OAC9C,CAAe,GAAG,EAAW,CAAI,EACnC,EAAe,GAAsB,CADN,EACkB,GACvD,MAAO,CAAA,EAAA,CAD6D,CAC7D,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CAAc,GAAI,EAAa,EAAA,CAAK,GAAG,CAAA,CAAY,EAApD,EAAyD,CAAA,CAAc,CAChF,GAGF,GAAY,WAAA,CAAc,GAM1B,IAAM,GAAY,aAUZ,CAAC,GAA2B,GAAoB,CACpD,EAA4C,IASxC,GAAA,CAAA,CATiD,CASjD,EAAmB,EAV6B,QAU7B,EACvB,CAAC,EAAqC,KACpC,GAAM,SAD+C,MAEnD,CAAA,OACA,CAAA,CACA,YAAW,CAAA,CACX,UAAW,CAAA,CACX,GAAG,EACL,CAAI,EACE,EAAU,EAAiB,GAAW,GACtC,EAAiB,EAAwB,GAAW,GADD,AAEnD,EAAa,EAAQ,KAAA,CAD4C,EAClC,EAC/B,CAAC,EAAW,EAAY,CAAA,CAAA,EAAA,EAAU,IAAV,IAAU,EAAS,GAAiB,EAAE,EAC9D,CAAC,EAAW,EAAY,CAAA,CAAA,EAAA,EAAU,IAAV,IAAU,CADA,EACS,GAC3C,EADgD,AAChD,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAe,AAAD,GACjD,EAAe,eAAA,GAAkB,EAAM,EAAO,IAE1C,EAAA,CAAA,CAFkD,CAElD,EAAS,KAAA,CAAM,GACf,EAAuB,CAAA,EAAA,EAAA,MAAA,EAA0C,OAAO,EAExE,EAAe,KACd,CADoB,GAEvB,EAAQ,IADK,SACL,CAAc,GACtB,EAD2B,AACnB,YAAA,EAAa,GAEzB,EAF8B,AAI9B,GAAI,AAAU,IAAI,GAChB,MAAM,AAAI,MACR,yLAIJ,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACE,MAAO,QACP,WACA,GAHF,MAIE,aACA,EACA,iBAAA,CAAA,EAAA,EAAwB,WAAA,EAAY,AAAC,IACnC,EAAa,AAAC,GAD8B,AACZ,GAAA,CAAkB,GAAM,aAAe,EAAA,CAAA,CAAI,IAAA,CAAK,CAAC,CACnF,EAAG,CAAC,CAAC,EAEL,SAAA,CAAA,EAAA,EAAA,GAAA,EAAC,EAAW,EAAZ,MAAY,CAAX,CACC,MAAO,EACP,YAFF,KAGE,YACA,EAEA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAC,EAAD,OAAC,CAAU,GAAA,CAAV,CACC,KAAK,SACL,CAFF,iBAEmB,EACjB,mBAAkB,EAAY,GAAK,KAAA,EAEnC,gBAAe,GAAc,EAC7B,aAAY,EAAa,UAAY,YACrC,gBAAe,GAAY,KAAA,EAC3B,gBAAe,EAAW,GAAK,KAAA,EAC/B,SAAU,EAAW,KAAA,EAAY,CAAA,EAChC,GAAG,CAAA,CACJ,IAAK,EACL,QAAA,CAAA,EAAA,EAAS,oBAAA,EAAqB,EAAU,OAAA,CAAS,IAAM,GAAa,IAAI,AACxE,CADyE,MACzE,CAAA,EAAA,EAAQ,oBAAA,EAAqB,EAAU,MAAA,CAAQ,IAAM,GAAa,IAClE,CADuE,CAAC,MACxE,CAAA,EAAA,EAAS,oBAAA,EAAqB,EAAU,OAAA,CAAS,KAEhB,CAFsB,OAEb,EAApC,EAAe,OAAA,EAAqB,GAC1C,CAAC,EACD,OAFuD,KAEvD,CAAA,EAAA,EAAa,oBAAA,EAAqB,EAAU,WAAA,CAAa,KAGxB,CAH8B,OAGrB,EAApC,EAAe,OAAA,EAAqB,GAC1C,CAAC,EACD,OAFuD,OAEvD,CAAA,EAAA,EAAe,oBAAA,EAAqB,EAAU,aAAA,CAAe,AAAC,IAC5D,EAAe,IADuD,GACvD,CAAU,EAAM,WAAA,AACjC,CAAC,EACD,cAAA,CAAA,EAAA,EAAe,oBAAA,EAAqB,EAAU,aAAA,CAAgB,AAAD,IAE3D,EAAe,IAFuD,GAEvD,CAAU,EAAM,WAAA,CAC3B,EACF,EAAe,MADH,KACG,GAAc,EACO,SAAS,CAApC,EAAe,OAAA,EAGxB,EAAM,aAAA,CAAc,KAAA,CAAM,CAAE,eAAe,CAAK,CAAC,CAErD,CAAC,EACD,eAAA,CAAA,EAAA,EAAgB,oBAAA,EAAqB,EAAU,cAAA,CAAgB,AAAC,IAC1D,EAAM,IAD8D,SAC9D,GAAkB,SAAS,aAAA,EAAe,AAClD,EAAe,WAAA,GAAc,CAEjC,CAAC,EACD,UAAA,CAAA,EAAA,EAAW,oBAAA,EAAqB,EAAU,SAAA,CAAW,AAAC,KAC9B,AAClB,EADiC,GADyB,MACzB,EAAW,UAAY,IACzB,MAAd,EAAM,GAAA,AAAQ,EAAK,CAAA,CACpC,EAAe,QAAA,CAAS,EAAM,GAAG,EAAG,CAAA,IAEtB,IAAK,EAAnB,EAAM,CAF2C,EAE3C,EAAa,EAAM,cAAA,CAAe,EAC9C,CAAC,CAAA,EACH,EACF,EAGN,GAGF,GAAW,WAAA,CAAc,GAMzB,IAAM,GAAiB,iBAKjB,GAAA,CAAA,EAAA,EAAuB,UAAA,EAC3B,CAAC,EAAyC,KAExC,GAAM,SAFmD,MAEjD,CAAA,WAAe,CAAA,OAAW,CAAA,CAAO,GAAG,EAAc,CAAI,EACxD,EAAU,EAAiB,GAAgB,EADS,CAEpD,EAAiB,EAAwB,GAAgB,GACzD,AAFwD,EAE1C,GAAqB,GAAgB,EADmB,CAEtE,EAAuB,EAA8B,GAAgB,GADL,AAEhE,CAAC,EAAc,EAAe,CAAA,CAAA,EAAA,CADoD,CAC1C,OAAV,CAAU,EAAuC,IAAI,EACnF,EAAe,CAAA,EAAA,EAAA,eAAA,EACnB,EACA,AAAC,GAAS,EAAgB,GAC1B,CAD8B,CAClB,gBAAA,CACZ,AAAC,GAAS,EAAe,mBAAA,GAAsB,EAAM,EAAY,KAAA,CAAO,EAAY,QAAQ,GAGxF,EAAc,GAAc,YAC5B,EAAA,CAAA,EAAqB,EAAA,OAAA,EACzB,IACE,CAAA,EAAA,EAAA,GAAA,EAAC,GAAD,MAAC,CAA+B,MAAO,EAAY,KAAA,CAAO,QAA1D,CAAoE,EAAY,QAAA,CAC7E,SAAA,CAAA,EADU,EAAY,KAEzB,EAEF,CAAC,EAAY,QAAA,CAAU,EAAY,KAAA,CAAO,EAAW,EAGjD,OAHiD,YAG/C,CAAA,sBAAmB,CAAA,CAAqB,CAAI,EAMpD,MALA,CAAA,AAME,EANF,EAAA,SAME,MANF,EAAgB,KACd,CADoB,CACF,GACX,IAAM,EAAqB,GADJ,CAE7B,AAHH,CAGI,EAAmB,EAAsB,EAAa,CADV,CAI9C,CAAA,EAAA,EAAA,GAHuD,CAGvD,EAAA,EAAA,QAAA,CAAA,CACE,SAAA,CAAA,GAAA,EAAA,GAAA,CADF,CACE,EAAC,KADH,IACG,CAAU,IAAA,CAAV,CAAe,GAAI,EAAY,MAAA,CAAS,EAAzC,CAA4C,CAAA,CAAe,IAAK,CAAA,CAAc,EAG7E,EAAY,UAAA,EAAc,EAAQ,SAAA,EAAa,CAAC,EAAQ,oBAAA,CAAA,CAAA,EAAA,EAC5C,YAAA,EAAa,EAAc,QAAA,CAAU,EAAQ,SAAS,EAC/D,KAAA,CACN,CAEJ,GAGF,GAAe,WAAA,CAAc,GAM7B,IAAM,GAAsB,sBAKtB,GAA4B,CAAA,EAAA,EAAA,UAAA,EAChC,CAAC,EAA8C,KAC7C,GAAM,CAAE,QADsD,OACtD,CAAe,GAAG,EAAmB,CAAI,EAEjD,OADoB,AACb,GADkC,GAAqB,CADjB,EAE1B,UADwD,AACxD,CACjB,EAAA,CAAA,EAAA,GAAA,EAAA,EAAC,GAAD,MAAC,CAAU,IAAA,CAAV,CAAe,cAAhB,CAA2B,EAAE,GAAG,CAAA,CAAoB,IAAK,CAAA,CAAc,EACrE,IACN,EAGF,IAAoB,WAAA,CAAc,GAMlC,IAAM,GAAwB,uBAKxB,GAAA,CAA6B,EAAA,EAAA,UAAA,EAGjC,CAAC,EAA+C,KAChD,IAAM,EAAiB,EAAwB,GAAuB,CADL,CACW,aAAa,EACnF,EAAkB,GAAyB,GAAuB,EAAM,aAAa,EACrF,CAAC,EAAa,EAAc,CAAU,CAAA,EAAA,EAAA,MAAV,EAAU,GAAS,GAC/C,EAAA,AADoD,CACpD,EAAA,EAAe,eAAA,EAAgB,EAAc,EAAgB,oBAAoB,EAevF,MAbA,GAAA,EAAA,eAAA,EAAgB,KACd,CADoB,EAChB,EAAe,QAAA,EADrB,AACiC,EAAe,YAAA,CAAc,CAE1D,IAASA,EAAT,WAEE,AAFsB,EACF,EAAS,SAAA,CAAY,CAC1BC,CACjB,EAJM,EAAW,EAAe,KAGJ,GAHI,CAOhC,OAFAD,IACA,EAAS,QADI,QACJ,CAAiB,SAAUA,GAC7B,IAAM,EAAS,IAD0B,eAC1B,CAAoB,SAAUA,EACtD,CACF,EAAG,CAAC,EAAe,KAFiD,GAEjD,CAAU,EAAe,YAAY,CAAC,EAElD,EACL,CAAA,EAAA,EAAA,GAAA,EAAC,EAAD,CAAC,CACE,GAAG,CAAA,CACJ,IAAK,EACL,AAHF,aAGgB,IAHhB,CAII,CADkB,EACZ,UAAE,CAAA,cAAU,CAAA,CAAa,CAAI,EAC/B,GAAY,IACd,EAAS,QADmB,CACnB,CAAY,EAAS,SAAA,CAAY,EAAa,YAAA,CAE3D,CAAA,GAEA,IACN,CAAC,EAED,GAAqB,WAAA,CAAc,GAMnC,IAAM,GAA0B,yBAK1B,GAAA,CAAA,EAAA,EAA+B,UAAA,EAGnC,CAAC,EAAiD,KAClD,IAAM,EAAiB,EAAwB,GAAyB,CADL,CACW,aAAa,EACrF,EAAkB,GAAyB,GAAyB,EAAM,aAAa,EACvF,CAAC,EAAe,EAAgB,CAAA,CAAA,EAAA,EAAU,QAAV,AAAU,GAAS,GACnD,EADwD,AACxD,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,EAAgB,oBAAoB,EAkBvF,MAhBA,CAAA,EAAA,EAAA,eAAA,EAAgB,KACd,CADoB,EAChB,EAAe,QAAA,EADrB,AACiC,EAAe,YAAA,CAAc,CAE1D,IAASA,EAAT,WACE,AADsB,IAChB,EAAY,EAAS,YAAA,CAAe,EAAS,YAAA,CAInD,EADsB,KAAK,IAAA,CAAK,EAAS,GACxBE,MADiC,EAAI,EAExD,EAPM,EAAW,AAMe,EANA,QAAA,CAUhC,OAFAF,IACA,EAAS,QADI,QACJ,CAAiB,SAAUA,GAC7B,IAAM,EAAS,IAD0B,eAC1B,CAAoB,SAAUA,EACtD,CACF,EAAG,CAAC,EAAe,KAFiD,GAEjD,CAAU,EAAe,YAAY,CAAC,EAElD,EACL,CAAA,EAAA,EAAA,GAAA,EAAC,GAAA,CAAD,AACG,GAAG,CAAA,CACJ,IAAK,EACL,EAHF,WAGgB,IAHhB,CAII,CADkB,EACZ,UAAE,CAAA,CAAU,cAAA,CAAa,CAAI,EAC/B,GAAY,IACd,EAAS,QADmB,CACnB,CAAY,EAAS,SAAA,CAAY,EAAa,YAAA,CAE3D,CAAA,GAEA,IACN,CAAC,CAED,IAAuB,WAAA,CAAc,GAOrC,IAAM,GAAA,CAAA,EAAA,EAA+B,UAAA,EAGnC,CAAC,EAAiD,KAClD,GAAM,CAAE,QAD2D,OAC3D,cAAe,CAAA,CAAc,GAAG,EAAqB,CAAI,EAC3D,EAAiB,EAAwB,YADc,SACQ,GAC/D,EAAA,CAAA,EAAA,EAA2B,GADiD,GACjD,EAAsB,IAAI,EACrD,EAAW,EAAc,GAEzB,EAAA,CAAA,EAAA,EAA6B,GAFS,QAET,EAAY,KACV,CADgB,KACV,CAArC,EAAmB,OAAA,GACrB,OAAO,aAAA,CAAc,EAAmB,OAAO,EAC/C,EAAmB,OAAA,CAAU,KAEjC,EAAG,CAAC,CAAC,EAeL,OACE,IAdI,SAAA,AAcJ,AAdI,EAAU,IACP,EADa,EACP,IACZ,CAAC,EAAqB,EAMzB,CAAA,EAAA,EAAA,OAPoC,IACZ,IAMxB,EAAgB,KACd,CADoB,GACd,EAAa,IAAW,IAAA,CAAF,AAAO,AAAC,AADtC,GAC+C,EAAK,GAAA,CAAI,OAAA,GAAY,SAAS,aAAa,EACxF,GAAY,IAAI,SAAS,eAAe,CAAE,MAAO,SAAU,CAAC,CAC9D,EAAG,CAAC,EAAS,EAGX,CAAA,EAAA,CAHU,CAGV,GAAA,EAAA,EAAC,SAAA,CAAU,GAAA,CAAV,CACC,eAAW,AADb,EAEG,GAAG,CAAA,CACJ,IAAK,EACL,MAAO,CAAE,WAAY,EAAG,GAAG,EAAqB,KAAA,AAAM,EACtD,cAAA,CAAA,EAAA,EAAe,oBAAA,EAAqB,EAAqB,aAAA,CAAe,KAClE,AAA+B,CADyC,KACnC,GAAlB,OAAA,GACrB,EAAmB,OAAA,CAAU,OAAO,WAAA,CAAY,EAAc,GAAE,CAEpE,CAAC,EACD,cAAA,CAAA,EAAA,EAAe,oBAAA,EAAqB,EAAqB,aAA1C,AAA0C,CAAe,KACtE,CAD4E,CAC7D,WAAA,GAAc,EACM,MAAM,CAArC,EAAmB,OAAA,GACrB,EAAmB,OAAA,CAAU,OAAO,WAAA,CAAY,EAAc,GAAE,CAEpE,CAAC,EACD,eAAA,CAAA,EAAA,EAAgB,oBAAA,EAAqB,EAAqB,cAAA,CAAgB,KACxE,CAD8E,EAEhF,CAAC,CAAA,EAGP,CAAC,EAWK,GAAA,CAAA,EAAA,EAAwB,GAfD,OAeC,EAC5B,CAAC,EAA0C,KACzC,GAAM,SADoD,MAClD,CAAA,CAAe,GAAG,EAAe,CAAI,EAC7C,MAAO,CAAA,EAAA,CADkC,CAClC,GAAA,EAAC,EAAA,EAAD,OAAC,CAAU,GAAA,CAAV,CAAc,cAAW,CAA1B,EAA4B,GAAG,CAAA,CAAgB,IAAK,CAAA,CAAc,CAC3E,GAGF,GAAgB,WAAA,CAZO,EAYO,gBAM9B,IAAM,GAAa,cAMb,GAAA,CAAA,EAAA,EAAoB,UAAA,EACxB,CAAC,EAAsC,KACrC,GAAM,SADgD,MAC9C,CAAA,CAAe,GAAG,EAAW,CAAI,EACnC,EAAc,EAAe,EADE,CAE/B,EAAU,EAAiB,GAAY,GADG,AAE1C,EAAiB,EAAwB,GAAY,GAC3D,AAF0D,OAEnD,EAAQ,CADyD,GACzD,EAAoC,WAA5B,AACrB,EADoC,QAAA,CACpC,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAiB,KAAA,CAAhB,CAAuB,GAAG,CAAA,CAAc,GAAG,CAAA,CAAY,IAAK,CAAA,CAAc,EACzE,IACN,CAFI,CAKN,IAAY,WAAA,CAAc,GAW1B,IAAM,GAAA,CAAA,EAAA,EAA0B,UAAA,EAC9B,CAAC,eAAE,CAAA,OAAe,CAAA,CAAO,GAAG,EAAM,CAAwC,GAAxC,EAChC,IAAM,EAAY,CAAA,EAAA,EAAA,CADuE,KACvE,EAA0B,IAAI,EAC1C,EAAA,CAAA,EAAA,EAAe,eAAA,EAAgB,EAAc,GAAG,AAChD,EAAA,CAAA,EAAA,EAAY,WAAA,EAAY,GAgC9B,EAhCmC,KAiCjC,IA9BI,SAAA,AA8BJ,AA9BI,EAAU,KACd,CADoB,GACd,EAAS,EAAI,OAAA,CACnB,GAAI,CAAC,EAAQ,KAAA,EAOb,IAAM,EAAW,AAJE,OAAO,wBAAA,CADN,AAElB,OAFyB,iBAAA,CAAkB,SAAA,CAG3C,SAE0B,GAAA,CAC5B,GAAI,IAAc,GAAS,EAAU,CACnC,IAAM,EAAQ,IAAI,MAAM,SAAU,CAAE,SAAS,CAAK,CAAC,EACnD,EAAS,IAAA,CAAK,EAAQ,GACtB,EAD2B,AACpB,aAAA,CAAc,EACvB,CACF,EAAG,AAF2B,CAE1B,EAAW,EAAM,EAenB,CAfkB,AAelB,EAAA,EAAA,GAAA,EAAC,EAAA,SAAA,CAAU,MAAA,CAAV,CACE,GAAG,CAAA,CACJ,MAAO,CAAE,AAFX,GAEW,EAAG,sBAAA,CAAwB,GAAG,EAAM,KAAA,AAAM,EACnD,IAAK,EACL,aAAc,CAAA,EAGpB,GAOF,SAAS,GAAsB,CAAA,EAAgB,AAC7C,MAAiB,KAAV,GAA0B,KAAA,IAAV,CACzB,CAEA,SAAS,GAAmB,CAAA,EAC1B,AADoE,IAC9D,EAAA,CAAA,EAAA,EAAqB,cAAA,EAAe,GACpC,EAAkB,CAAA,EAAA,EAAA,IADgC,EAChC,EAAO,EAAE,EAC3B,EAAA,CAAA,EAAA,EAAiB,MAAA,EAAO,CAAC,EAEzB,EAAA,CAAA,EAAA,EAA8B,WAAA,EAClC,AAAC,IACC,IADe,AACT,EAAS,EAAU,OAAA,CAAU,EACnC,EAAmB,GAElB,AAAD,GAFyB,MAEf,EAAa,CAAA,EAAe,AACpC,EAAU,OAAA,CAAU,EACpB,OAAO,YAAA,CAAa,EAAS,OAAO,EAEtB,GAAI,EAAd,IAAc,EAAS,OAAA,CAAU,OAAO,UAAA,CAAW,IAAM,EAAa,EAAE,EAAG,IAAI,CACrF,CAAA,CAAG,EACL,EACA,CAAC,CAFU,CAEQ,EAGf,EAAA,CAAA,EAAA,EAAuB,OAHR,IAGQ,EAAY,KACvC,CAD6C,CACnC,OAAA,CAAU,GACpB,OAAO,YAAA,CAAa,EAAS,OAAO,CACtC,EAAG,CAAC,CAAC,EAML,WAJM,SAAA,EAAU,IACP,EADa,EACP,OAAO,YAAA,CAAa,EAAS,OAAO,EAChD,CAAC,CAAC,EAEE,CAAC,EAAW,EAAuB,EAAc,AAC1D,CAmBA,SAAS,EApBiD,CAqBxD,CAAA,CACA,CAAA,CACA,CAAA,EACA,IAiBoB,IAfpB,CAeoB,GAfd,EADa,AACM,EADC,MAAA,CAAS,GAAK,MAAM,IAAA,CAAK,GAAQ,GAAF,EAAE,CAAM,AAAC,GAAS,IAAS,CAAA,CAAO,CAAC,CAAC,EACvD,CAAA,CAAO,CAAC,CAAA,CAAK,EAC7C,EAAmB,EAAc,EAAM,OAAA,CAAQ,GAAe,CAAA,EAChE,KAD4D,AACnC,EAaG,EAbI,KAAK,CAAtB,EAAsB,AAaT,CAba,CAaO,CAbW,CAAC,CAAC,CAc1D,EAAM,GAAA,CAAO,CAAC,EAAG,IAAU,CAAA,CAAA,CAAO,EAAa,CAAA,CAAA,CAAS,EAAM,MAAM,CAAE,EAZzE,CADmD,IAA5B,EAAiB,MAAA,GACpB,EAAe,CAAf,CAA4B,MAAA,CAAO,AAAC,GAAM,IAAM,EAAW,EACnF,IAAM,EAAW,EAAa,IAAA,CAAK,AAAC,GAClC,EAAK,SAAA,CAAU,WAAA,CAAY,EAAE,UAAA,CAAW,EAAiB,WAAA,CAAY,CAAC,GAExE,OAAO,IAAa,EAAc,EAAW,KAAA,CAC/C,CAxEA,GAAkB,WAAA,CApDQ,EAoDM,kBAkFhC,IAAMG,GAAO,EACP,GAAU,EACV,GAAQ,EACR,GAAO,EACP,GAAS,EACTC,GAAU,EACV,GAAW,GACX,GAAQ,GACR,GAAQ,GACR,GAAO,GACP,GAAW,GACX,GAAgB,GAChB,GAAiB,GACjB,GAAmB,GACnB,GAAY,GACZC,GAAQ,iGChvDd,SAAS,AAAU,CAAC,OAAO,cAAc,AAa1B,CAb4B,eAAa,OAAE,EAAQ,UAAU,CAAE,GAAG,EAAiB,EAGjG,OAFA,EAAgB,GAAiB,EAGhC,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CAAI,OAAO,KAAK,MAAM,KAAM,GAAG,CAAK,CAAE,QAAQ,YAAY,MAAM,uCAClE,CAAA,EAAA,EAAA,GAAA,EAAC,QAAA,UAAO,IACR,CAAA,EAAA,EAAA,GAAA,EAAC,IAAA,CAAE,KAAM,WACR,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,EAAE,6MAA6M,KAAM,QAI7N,uRCjBA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAEA,EAAA,EAAA,CAAA,CAAA,QAEA,IAAM,EAAS,EAAA,IAAoB,CAE7B,EAAc,EAAA,KAAqB,CAEnC,EAAc,EAAA,KAAqB,CAEnC,EAAgB,CAAA,EAAA,EAAA,KANP,KAMO,AAAe,EAGnC,CAAC,CAPiB,UAEA,AAKf,CAAS,UAAE,CAAQ,CAAE,AAHJ,GAGO,EAAO,CAAE,IACpC,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,OAAuB,CAAA,CACtB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,GAHH,8BAEY,4RAET,GAED,GAAG,CAAK,WAER,EACD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,IAAoB,CAAA,CAAC,OAAO,CAAA,CAAA,WAC3B,CAAA,EAAA,EAAA,GAAA,EAAC,CADF,CACE,OAAW,CAAA,CAAC,UAAU,aAAa,KAAnC,CAAyC,KAAK,OAAO,aAI5D,EAAc,WAAW,CAAG,EAAA,OAAuB,CAAC,WAAW,CAE/D,IAAM,EAAuB,CAAA,EAAA,EAAA,MAFD,IAEC,AAAe,EAG1C,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAAA,AAJ2B,EAI3B,EAAA,GAAA,EAAC,EAAA,cAA8B,CAAA,CAC7B,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,AAFZ,EAEY,AAAC,EACV,iCADS,sBAET,GAED,GAAG,CAAK,UAET,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAS,CAAA,CAAC,MAAM,KAAK,OAAO,UAA5B,AAGL,EAAqB,WAAW,CAAG,EAAA,cAA8B,CAAC,WAAW,CAE7E,IAAM,EAAyB,GAAA,CAFI,CAEJ,UAAA,AAAe,EAG5C,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAAA,AAJ6B,EAI7B,EAAA,GAAA,EAAC,EAAA,gBAAgC,CAAA,CAC/B,IAAK,EACL,UAAW,CAAA,EAFZ,AAEY,EAAA,EAAA,AAAC,EACV,iCADS,sBAET,GAED,GAAG,CAAK,UAET,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAW,CAAA,CAAC,MAAM,KAAK,OAAO,UAA9B,AAGL,EAAuB,WAAW,CAChC,EAAA,gBAAgC,CAAC,WAAW,CAE9C,IAAM,EAAgB,EAFpB,CAEoB,EAAA,UAAA,AAAe,EAGnC,CAAC,WAAE,CAAS,UAAE,CAAQ,CAHF,SAGI,EAAW,QAAQ,CAAE,GAAG,EAAO,CAAE,IACzD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,MAAsB,CAAA,UACrB,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,OADF,AACyB,CAAA,CACtB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,GAHH,8BAEY,uhBAEI,WAAb,GACE,kIACF,GAEF,SAAU,EACT,GAAG,CAAK,WAET,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAA,GACD,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,QAAwB,CAAA,CACvB,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,MACa,EAHhB,SAGG,GACE,aAHO,uFAMV,IAEH,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAAA,SAIP,EAAc,WAAW,CAAG,EAAA,OAAuB,CAAC,WAAW,CAE/D,IAAM,EAAc,CAAA,EAAA,EAAA,MAFQ,IAER,AAAe,EAGjC,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAAA,AAJkB,EAIlB,EAAA,GAAA,EAAC,EAAA,KAAqB,CAAA,CACpB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EAAE,KAFf,4BAEY,mBAAwD,GAClE,GAAG,CAAK,IAGb,EAAY,WAAW,CAAG,EAAA,KAAqB,CAAC,WAAW,CAE3D,IAAM,EAAa,CAAA,EAAA,EAAA,QAFO,EAEP,AAAe,EAGhC,CAAC,WAAE,CAAS,UAAE,CAAQ,CAHL,AAGO,GAAG,EAAO,CAAE,IACpC,CAAA,EAAA,EAAA,IAAA,EAAC,EAAA,IAAoB,CAAA,CACnB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EACV,MAHH,2BAEY,8NAET,GAED,GAAG,CAAK,WAET,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,UAAU,yEACd,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,aAA6B,CAAA,UAC5B,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CADF,MACQ,CAAA,CAAC,MAAM,KAAK,OAAO,UAAzB,CAGL,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,QAAwB,CAAA,UAAE,QAG/B,EAAW,QAHN,GAGiB,CAAG,EAAA,IAAoB,CAAC,WAAW,CAEzD,IAAM,EAAkB,CAAA,EAAA,EAAA,SAFC,CAEc,AAAf,EAGtB,CAAC,WAAE,CAAS,CAAE,GAAG,EAAO,CAAE,IAC1B,CAJsB,AAItB,EAAA,EAAA,GAAA,EAAC,EAAA,SAAyB,CAAA,CACxB,IAAK,EACL,UAAW,CAAA,EAAA,EAAA,EAAA,AAAC,EAAE,CAFf,2BAE4C,GAC1C,EADU,CACP,CAAK,IAGb,EAAgB,WAAW,CAAG,EAAA,SAAyB,CAAC,WAAW,gBAArC","ignoreList":[0,1]}