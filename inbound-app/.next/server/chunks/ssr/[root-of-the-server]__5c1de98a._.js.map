{"version":3,"sources":["turbopack:///[project]/node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/checkUrl.js","turbopack:///[project]/node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/requestHelpers.js","turbopack:///[project]/node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/retry-wrapper.js","turbopack:///[project]/node_modules/@aws-sdk/credential-provider-http/dist-es/fromHttp/fromHttp.js","turbopack:///[project]/node_modules/@aws-sdk/credential-provider-http/dist-es/index.js"],"sourcesContent":["import { CredentialsProviderError } from \"@smithy/property-provider\";\nconst LOOPBACK_CIDR_IPv4 = \"127.0.0.0/8\";\nconst LOOPBACK_CIDR_IPv6 = \"::1/128\";\nconst ECS_CONTAINER_HOST = \"169.254.170.2\";\nconst EKS_CONTAINER_HOST_IPv4 = \"169.254.170.23\";\nconst EKS_CONTAINER_HOST_IPv6 = \"[fd00:ec2::23]\";\nexport const checkUrl = (url, logger) => {\n    if (url.protocol === \"https:\") {\n        return;\n    }\n    if (url.hostname === ECS_CONTAINER_HOST ||\n        url.hostname === EKS_CONTAINER_HOST_IPv4 ||\n        url.hostname === EKS_CONTAINER_HOST_IPv6) {\n        return;\n    }\n    if (url.hostname.includes(\"[\")) {\n        if (url.hostname === \"[::1]\" || url.hostname === \"[0000:0000:0000:0000:0000:0000:0000:0001]\") {\n            return;\n        }\n    }\n    else {\n        if (url.hostname === \"localhost\") {\n            return;\n        }\n        const ipComponents = url.hostname.split(\".\");\n        const inRange = (component) => {\n            const num = parseInt(component, 10);\n            return 0 <= num && num <= 255;\n        };\n        if (ipComponents[0] === \"127\" &&\n            inRange(ipComponents[1]) &&\n            inRange(ipComponents[2]) &&\n            inRange(ipComponents[3]) &&\n            ipComponents.length === 4) {\n            return;\n        }\n    }\n    throw new CredentialsProviderError(`URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]`, { logger });\n};\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { parseRfc3339DateTime } from \"@smithy/smithy-client\";\nimport { sdkStreamMixin } from \"@smithy/util-stream\";\nexport function createGetRequest(url) {\n    return new HttpRequest({\n        protocol: url.protocol,\n        hostname: url.hostname,\n        port: Number(url.port),\n        path: url.pathname,\n        query: Array.from(url.searchParams.entries()).reduce((acc, [k, v]) => {\n            acc[k] = v;\n            return acc;\n        }, {}),\n        fragment: url.hash,\n    });\n}\nexport async function getCredentials(response, logger) {\n    const stream = sdkStreamMixin(response.body);\n    const str = await stream.transformToString();\n    if (response.statusCode === 200) {\n        const parsed = JSON.parse(str);\n        if (typeof parsed.AccessKeyId !== \"string\" ||\n            typeof parsed.SecretAccessKey !== \"string\" ||\n            typeof parsed.Token !== \"string\" ||\n            typeof parsed.Expiration !== \"string\") {\n            throw new CredentialsProviderError(\"HTTP credential provider response not of the required format, an object matching: \" +\n                \"{ AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }\", { logger });\n        }\n        return {\n            accessKeyId: parsed.AccessKeyId,\n            secretAccessKey: parsed.SecretAccessKey,\n            sessionToken: parsed.Token,\n            expiration: parseRfc3339DateTime(parsed.Expiration),\n        };\n    }\n    if (response.statusCode >= 400 && response.statusCode < 500) {\n        let parsedBody = {};\n        try {\n            parsedBody = JSON.parse(str);\n        }\n        catch (e) { }\n        throw Object.assign(new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger }), {\n            Code: parsedBody.Code,\n            Message: parsedBody.Message,\n        });\n    }\n    throw new CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger });\n}\n","export const retryWrapper = (toRetry, maxRetries, delayMs) => {\n    return async () => {\n        for (let i = 0; i < maxRetries; ++i) {\n            try {\n                return await toRetry();\n            }\n            catch (e) {\n                await new Promise((resolve) => setTimeout(resolve, delayMs));\n            }\n        }\n        return await toRetry();\n    };\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { NodeHttpHandler } from \"@smithy/node-http-handler\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport fs from \"fs/promises\";\nimport { checkUrl } from \"./checkUrl\";\nimport { createGetRequest, getCredentials } from \"./requestHelpers\";\nimport { retryWrapper } from \"./retry-wrapper\";\nconst AWS_CONTAINER_CREDENTIALS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nconst DEFAULT_LINK_LOCAL_HOST = \"http://169.254.170.2\";\nconst AWS_CONTAINER_CREDENTIALS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE = \"AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nexport const fromHttp = (options = {}) => {\n    options.logger?.debug(\"@aws-sdk/credential-provider-http - fromHttp\");\n    let host;\n    const relative = options.awsContainerCredentialsRelativeUri ?? process.env[AWS_CONTAINER_CREDENTIALS_RELATIVE_URI];\n    const full = options.awsContainerCredentialsFullUri ?? process.env[AWS_CONTAINER_CREDENTIALS_FULL_URI];\n    const token = options.awsContainerAuthorizationToken ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN];\n    const tokenFile = options.awsContainerAuthorizationTokenFile ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE];\n    const warn = options.logger?.constructor?.name === \"NoOpLogger\" || !options.logger ? console.warn : options.logger.warn;\n    if (relative && full) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerCredentialsRelativeUri and awsContainerCredentialsFullUri.\");\n        warn(\"awsContainerCredentialsFullUri will take precedence.\");\n    }\n    if (token && tokenFile) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerAuthorizationToken and awsContainerAuthorizationTokenFile.\");\n        warn(\"awsContainerAuthorizationToken will take precedence.\");\n    }\n    if (full) {\n        host = full;\n    }\n    else if (relative) {\n        host = `${DEFAULT_LINK_LOCAL_HOST}${relative}`;\n    }\n    else {\n        throw new CredentialsProviderError(`No HTTP credential provider host provided.\nSet AWS_CONTAINER_CREDENTIALS_FULL_URI or AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.`, { logger: options.logger });\n    }\n    const url = new URL(host);\n    checkUrl(url, options.logger);\n    const requestHandler = new NodeHttpHandler({\n        requestTimeout: options.timeout ?? 1000,\n        connectionTimeout: options.timeout ?? 1000,\n    });\n    return retryWrapper(async () => {\n        const request = createGetRequest(url);\n        if (token) {\n            request.headers.Authorization = token;\n        }\n        else if (tokenFile) {\n            request.headers.Authorization = (await fs.readFile(tokenFile)).toString();\n        }\n        try {\n            const result = await requestHandler.handle(request);\n            return getCredentials(result.response).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_HTTP\", \"z\"));\n        }\n        catch (e) {\n            throw new CredentialsProviderError(String(e), { logger: options.logger });\n        }\n    }, options.maxRetries ?? 3, options.timeout ?? 1000);\n};\n","export { fromHttp } from \"./fromHttp/fromHttp\";\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4]}