{"version":3,"sources":["turbopack:///[project]/app/(main)/emails/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { CopyButton } from '@/components/copy-button'\nimport CircleCheck from '@/components/icons/circle-check'\nimport ChevronDown from '@/components/icons/chevron-down'\nimport Clipboard2 from '@/components/icons/clipboard-2'\nimport Gear2 from '@/components/icons/gear-2'\nimport Globe2 from '@/components/icons/globe-2'\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport CirclePlus from '@/components/icons/circle-plus'\nimport Refresh2 from '@/components/icons/refresh-2'\nimport ObjRemove from '@/components/icons/obj-remove'\nimport { CustomInboundIcon } from '@/components/icons/customInbound'\nimport { formatDistanceToNow } from 'date-fns'\nimport { DOMAIN_STATUS } from '@/lib/db/schema'\nimport Link from 'next/link'\nimport { useDomainsListV2Query, useDomainDetailsV2Query } from '@/features/domains/hooks/useDomainV2Hooks'\nimport type { DomainWithStats } from '@/app/api/v2/domains/route'\n\nexport default function EmailsPage() {\n  const [expandedDomains, setExpandedDomains] = useState<Record<string, boolean>>({})\n  const [copiedEmail, setCopiedEmail] = useState<string | null>(null)\n\n  // Fetch domain stats using v2 API\n  const {\n    data: domainsResponse,\n    isLoading: isDomainStatsLoading,\n    error: domainStatsError,\n    refetch: refetchDomainStats\n  } = useDomainsListV2Query()\n\n  // Simple helper functions\n  const toggleDomain = (domainId: string) => {\n    setExpandedDomains(prev => ({\n      ...prev,\n      [domainId]: !prev[domainId]\n    }))\n  }\n\n  const copyEmail = async (email: string) => {\n    try {\n      await navigator.clipboard.writeText(email)\n      setCopiedEmail(email)\n      setTimeout(() => setCopiedEmail(null), 2000)\n    } catch (err) {\n      console.error(\"Failed to copy email:\", err)\n    }\n  }\n\n  const getDomainIconColor = (domain: DomainWithStats) => {\n    if (domain.status === 'verified' && domain.canReceiveEmails) return '#059669' // green-600 - verified\n\n    switch (domain.status) {\n      case 'pending': return '#eab308' // yellow-500 - pending DNS check\n      case 'verified': return '#2563eb' // blue-600 - SES setup\n      case 'failed': return '#dc2626' // red-600 - failed\n      default: return '#64748b' // slate-500 - unknown\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"active\":\n      case \"verified\":\n      case \"ready\":\n        return \"bg-emerald-500\"\n      case \"pending\":\n      case \"processing\":\n        return \"bg-amber-500\"\n      case \"inactive\":\n      case \"error\":\n        return \"bg-red-500\"\n      default:\n        return \"bg-gray-400\"\n    }\n  }\n\n  const getBorderColor = (isActive: boolean, isConfigured: boolean) => {\n    if (isActive && isConfigured) return \"border-l-emerald-500\"\n    if (isActive) return \"border-l-amber-500\"\n    return \"border-l-red-500\"\n  }\n\n  const getEmailStatus = (email: any) => {\n    if (email.isActive && email.isReceiptRuleConfigured) return \"active\"\n    if (email.isActive) return \"pending\"\n    return \"inactive\"\n  }\n\n  const getReadyStatus = (email: any) => {\n    if (email.isReceiptRuleConfigured) return \"ready\"\n    if (email.isActive) return \"processing\"\n    return \"error\"\n  }\n\n  const getConnectionStatus = (email: any) => {\n    // If email has an endpoint or webhook, show connection status\n    if (email.endpointId || email.webhookId) {\n      if (email.endpointName && email.endpointType) {\n        return `Connected to ${email.endpointName} (${email.endpointType})`\n      } else if (email.webhookName) {\n        return `Connected to ${email.webhookName}`\n      } else {\n        return \"Connected to endpoint\"\n      }\n    }\n    // If email is configured but no endpoint/webhook, it's just storing\n    if (email.isReceiptRuleConfigured) {\n      return \"Ready to receive\"\n    }\n    // Otherwise it's not configured yet\n    return \"Not configured\"\n  }\n\n  const getConnectionStatusColor = (email: any) => {\n    // If email has an endpoint or webhook, show as connected (green)\n    if (email.endpointId || email.webhookId) {\n      return \"bg-emerald-500\"\n    }\n    // If email is configured but no endpoint/webhook, show as ready (blue)\n    if (email.isReceiptRuleConfigured) {\n      return \"bg-blue-500\"\n    }\n    // Otherwise it's not configured yet (red)\n    return \"bg-red-500\"\n  }\n\n  // Loading state\n  if (isDomainStatsLoading) {\n    return (\n      <div className=\"flex flex-1 flex-col gap-4 p-4\">\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"text-muted-foreground\">Loading domains...</div>\n        </div>\n      </div>\n    )\n  }\n\n  // Error state\n  if (domainStatsError) {\n    return (\n      <div className=\"flex flex-1 flex-col gap-4 p-4\">\n        <Card className=\"border-destructive/50 bg-destructive/10\">\n          <CardContent className=\"p-6\">\n                          <div className=\"flex items-center gap-2 text-destructive\">\n                <ObjRemove width=\"16\" height=\"16\" />\n                <span>{domainStatsError?.message || 'Failed to load domain data'}</span>\n              <Button variant=\"ghost\" size=\"sm\" onClick={() => refetchDomainStats()} className=\"ml-auto text-destructive hover:text-destructive\">\n                Try Again\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (!domainsResponse) return null\n\n  const domains = domainsResponse.data || []\n  const totalDomains = domainsResponse.meta?.totalCount || 0\n\n  return (\n    <div className=\"min-h-screen p-4 font-outfit\">\n      <div className=\"max-w-5xl mx-auto\">\n\n        {/* Domain and Email Management */}\n        <div className=\"mb-6 flex items-center justify-between mt-8\">\n          <div className=\"\">\n            <h2 className=\"text-2xl font-semibold text-foreground mb-1 tracking-tight\">\n              Domains & Email Addresses ({totalDomains})\n            </h2>\n            <p className=\"text-muted-foreground text-sm font-medium\">Manage your email domains and addresses</p></div>\n\n          <div className=\"flex items-center gap-2\">\n            <Button size=\"sm\" asChild>\n              <Link href=\"/add\">\n                <CirclePlus width=\"12\" height=\"12\" className=\"mr-1\" />\n                Add Domain\n              </Link>\n            </Button>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              onClick={() => refetchDomainStats()}\n              disabled={isDomainStatsLoading}\n            >\n              <Refresh2 width=\"12\" height=\"12\" className=\"mr-1\" />\n              Refresh\n            </Button>\n\n          </div>\n\n        </div>\n\n\n        <div className=\"space-y-2 mb-6\">\n          {domains.length === 0 ? (\n            <Card className=\"bg-card border-border rounded-xl\">\n              <CardContent className=\"p-8\">\n                <div className=\"text-center\">\n                  <CustomInboundIcon\n                    Icon={Globe2}\n                    size={48}\n                    backgroundColor=\"#8b5cf6\"\n                    className=\"mx-auto mb-4\"\n                  />\n                  <p className=\"text-sm text-muted-foreground mb-4\">No domains configured</p>\n                  <Button variant=\"secondary\" asChild>\n                    <Link href=\"/add\">\n                      <CirclePlus width=\"16\" height=\"16\" className=\"mr-2\" />\n                      Add Your First Domain\n                    </Link>\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            domains.map((domain) => (\n              <DomainCard\n                key={domain.id}\n                domain={domain}\n                isExpanded={expandedDomains[domain.id]}\n                onToggle={() => toggleDomain(domain.id)}\n                onCopyEmail={copyEmail}\n                copiedEmail={copiedEmail}\n                getDomainIconColor={getDomainIconColor}\n                getStatusColor={getStatusColor}\n                getBorderColor={getBorderColor}\n                getEmailStatus={getEmailStatus}\n                getReadyStatus={getReadyStatus}\n                getConnectionStatus={getConnectionStatus}\n                getConnectionStatusColor={getConnectionStatusColor}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Separate component for domain cards\nfunction DomainCard({\n  domain,\n  isExpanded,\n  onToggle,\n  onCopyEmail,\n  copiedEmail,\n  getDomainIconColor,\n  getStatusColor,\n  getBorderColor,\n  getEmailStatus,\n  getReadyStatus,\n  getConnectionStatus,\n  getConnectionStatusColor,\n}: {\n  domain: DomainWithStats\n  isExpanded: boolean\n  onToggle: () => void\n  onCopyEmail: (email: string) => void\n  copiedEmail: string | null\n  getDomainIconColor: (domain: DomainWithStats) => string\n  getStatusColor: (status: string) => string\n  getBorderColor: (isActive: boolean, isConfigured: boolean) => string\n  getEmailStatus: (email: any) => string\n  getReadyStatus: (email: any) => string\n  getConnectionStatus: (email: any) => string\n  getConnectionStatusColor: (email: any) => string\n}) {\n  // Only fetch details if domain has email addresses and we need to show them\n  // Don't fetch details for catch-all domains as they don't show individual addresses\n  const shouldFetchDetails = domain.status === 'verified' && domain.stats.totalEmailAddresses > 0 && !domain.isCatchAllEnabled\n  const { data: domainDetails } = useDomainDetailsV2Query(shouldFetchDetails ? domain.id : '')\n\n  // For now, we'll handle email addresses display differently with v2 API\n  const emailAddresses: any[] = []\n\n  return (\n    <Card className=\"bg-card border-border hover:bg-accent/5 transition-all duration-300 rounded-xl overflow-hidden group\">\n      <CardContent className=\"p-0\">\n        {/* Domain Header */}\n        <div\n          className=\"p-4 cursor-pointer hover:bg-accent/10 transition-colors duration-200 border-b border-border\"\n          onClick={onToggle}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <CustomInboundIcon\n                Icon={Globe2}\n                size={36}\n                backgroundColor={getDomainIconColor(domain)}\n              />\n              <div>\n                <h3 className=\"text-base font-semibold text-foreground tracking-tight\">{domain.domain}</h3>\n                <div className=\"flex items-center space-x-2 mt-0.5\">\n                  <div className=\"flex items-center space-x-1\">\n                    <div className={`w-2 h-2 rounded-full ${domain.status === 'verified' ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                    <span className=\"text-xs text-muted-foreground font-medium\">\n                      {domain.status === 'verified' ? \"Verified\" : \"Pending DNS\"}\n                    </span>\n                  </div>\n                  {domain.isCatchAllEnabled && (\n                    <>\n                      <span className=\"text-xs text-muted-foreground font-medium\">•</span>\n                      <div className=\"flex items-center space-x-1\">\n                        <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\n                        <span className=\"text-xs text-muted-foreground font-medium\">Catch-all</span>\n                      </div>\n                    </>\n                  )}\n                  {!domain.isCatchAllEnabled && (\n                    <>\n                      <span className=\"text-xs text-muted-foreground font-medium\">•</span>\n                      <span className=\"text-xs text-muted-foreground font-medium\">\n                        {domain.stats.totalEmailAddresses} address{domain.stats.totalEmailAddresses !== 1 ? \"es\" : \"\"}\n                      </span>\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n                        <div className=\"flex items-center space-x-2\">\n\n              {/* {!domain.isCatchAllEnabled && \n                // <Button \n                //   size=\"sm\" \n                //   onClick={(e) => {\n                //     e.stopPropagation()\n                //     // TODO: Navigate to add email address page/dialog\n                //   }}\n                // >\n                //   <HiPlus className=\"w-3 h-3 mr-1\" />\n                //   Add Address\n                // </Button>\n              } */}\n              <Button \n                variant=\"secondary\" \n                size=\"sm\"\n                onClick={(e) => e.stopPropagation()}\n                asChild\n              >\n                <Link href={`/emails/${domain.id}`}>\n                  <Gear2 width=\"12\" height=\"12\" className=\"mr-1\" />\n                  Config\n                </Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Email Addresses - Smooth expansion */}\n        {emailAddresses.length > 0 && !domain.isCatchAllEnabled && (\n          <div\n            className=\"bg-muted/50 overflow-hidden transition-all duration-300 ease-in-out\"\n            style={{\n              maxHeight: isExpanded ? `${emailAddresses.length * 80 + 16}px` : '0px',\n              opacity: isExpanded ? 1 : 0\n            }}\n          >\n            {emailAddresses.map((email: any, index: number) => (\n              <div\n                key={email.id}\n                className={`group/email relative px-4 py-2 hover:bg-muted/80 transition-colors duration-200 border-l-3 ${getBorderColor(email.isActive, email.isReceiptRuleConfigured)} ${index !== emailAddresses.length - 1 ? \"border-b border-border\" : \"\"\n                  }`}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3 flex-1\">\n                    <CustomInboundIcon\n                      Icon={Envelope2}\n                      size={28}\n                      backgroundColor=\"#10b981\"\n                    />\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        <span className=\"text-sm font-medium text-foreground truncate\">{email.address}</span>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"opacity-0 group-hover/email:opacity-100 transition-all duration-200 p-1 h-auto hover:bg-accent rounded hover:scale-105 active:scale-95\"\n                          onClick={() => onCopyEmail(email.address)}\n                        >\n                          {copiedEmail === email.address ? (\n                            <CircleCheck width=\"14\" height=\"14\" className=\"text-emerald-500\" />\n                          ) : (\n                            <Clipboard2 width=\"14\" height=\"14\" className=\"text-muted-foreground transition-all duration-150 hover:text-foreground\" />\n                          )}\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2 text-right text-sm \">\n                    <span className=\"text-muted-foreground\">{email.emailsLast24h || 0} emails today</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n} "],"names":[],"mappings":"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"}