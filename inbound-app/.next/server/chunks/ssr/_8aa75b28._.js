module.exports={210873:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({checkWebhookMigrationNeeded:()=>j,migrateUserWebhooksToEndpoints:()=>k,resetMigrationFlag:()=>l});var d=a.i(930768);a.i(996945);var e=a.i(900707);a.i(508384);var f=a.i(954523),g=a.i(287211),h=a.i(988777),i=a.i(14394);async function j(a){try{let b=await e.db.select({webhooksToEndpointsMigrated:g.user.webhooksToEndpointsMigrated}).from(g.user).where((0,h.eq)(g.user.id,a)).limit(1);if(b[0]?.webhooksToEndpointsMigrated)return console.log(`‚ÑπÔ∏è Migration already completed for user: ${a}`),!1;let c=await e.db.select({id:f.webhooks.id}).from(f.webhooks).where((0,h.eq)(f.webhooks.userId,a)).limit(1);if(0===c.length)return console.log(`‚ÑπÔ∏è No webhooks found for user: ${a}`),!1;return console.log(`üîç Migration needed for user: ${a} - has webhooks but migration flag not set`),!0}catch(a){return console.error("Error checking webhook migration status:",a),!1}}async function k(a){let b={success:!1,migratedCount:0,skippedCount:0,errors:[]};try{console.log(`üîÑ Starting webhook migration for user: ${a}`);let c=await e.db.select().from(f.webhooks).where((0,h.eq)(f.webhooks.userId,a));if(0===c.length)return console.log(`‚ÑπÔ∏è No webhooks found for user: ${a}`),b.success=!0,b;console.log(`üìã Found ${c.length} webhooks to migrate for user: ${a}`);let d=await e.db.select().from(f.endpoints).where((0,h.eq)(f.endpoints.userId,a)),j=new Set(d.map(a=>a.name));for(let d of c)try{if(j.has(d.name)){console.log(`‚è≠Ô∏è Skipping webhook "${d.name}" - endpoint already exists`),b.skippedCount++;continue}let c={url:d.url,timeout:d.timeout||30,retryAttempts:d.retryAttempts||3,headers:d.headers?JSON.parse(d.headers):{}};d.secret&&(c.secret=d.secret);let g={id:(0,i.nanoid)(),name:d.name,type:"webhook",config:JSON.stringify(c),isActive:d.isActive??!0,description:d.description||`Migrated from webhook: ${d.name}`,userId:a,createdAt:new Date,updatedAt:new Date},[h]=await e.db.insert(f.endpoints).values(g).returning();console.log(`‚úÖ Migrated webhook "${d.name}" to endpoint "${h.name}"`),b.migratedCount++}catch(c){let a=`Failed to migrate webhook "${d.name}": ${c instanceof Error?c.message:"Unknown error"}`;console.error(`‚ùå ${a}`),b.errors.push(a)}if(b.success=0===b.errors.length||b.migratedCount>0,b.success)try{await e.db.update(g.user).set({webhooksToEndpointsMigrated:!0,updatedAt:new Date}).where((0,h.eq)(g.user.id,a)),console.log(`‚úÖ Marked user ${a} as migrated`)}catch(b){console.error(`‚ö†Ô∏è Failed to set migration flag for user ${a}:`,b)}return console.log(`üèÅ Migration completed for user ${a}:`),console.log(`   - Migrated: ${b.migratedCount}`),console.log(`   - Skipped: ${b.skippedCount}`),console.log(`   - Errors: ${b.errors.length}`),b}catch(d){let c=`Migration failed for user ${a}: ${d instanceof Error?d.message:"Unknown error"}`;return console.error(`‚ùå ${c}`),b.errors.push(c),b}}async function l(a){try{return await e.db.update(g.user).set({webhooksToEndpointsMigrated:!1,updatedAt:new Date}).where((0,h.eq)(g.user.id,a)),console.log(`‚úÖ Reset migration flag for user: ${a}`),{success:!0}}catch(b){return console.error(`‚ùå Failed to reset migration flag for user ${a}:`,b),{success:!1,error:b instanceof Error?b.message:"Unknown error"}}}(0,a.i(377991).ensureServerEntryExports)([j,k,l]),(0,d.registerServerReference)(j,"40d4bbd5119b08c054eb2a9e9379d681cd57083da6",null),(0,d.registerServerReference)(k,"404724818b552f6a997709ad5d21a7e4c8d030476c",null),(0,d.registerServerReference)(l,"40566c4c64b519d0496a2933dfb4bd66f4aa7d5029",null)},485242:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({checkMigrationNeeded:()=>r,createEndpoint:()=>l,deleteEndpoint:()=>n,deleteMultipleEndpoints:()=>o,getEndpoints:()=>p,migrateWebhooksToEndpoints:()=>s,resetWebhookMigrationFlag:()=>t,testEndpoint:()=>q,updateEndpoint:()=>m});var d=a.i(930768);a.i(996945);var e=a.i(107729),f=a.i(409950),g=a.i(900707);a.i(508384);var h=a.i(954523),i=a.i(988777),j=a.i(14394),k=a.i(210873);async function l(a){let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{success:!1,error:"Unauthorized"};try{console.log(`üìù createEndpoint - Creating ${a.type} endpoint: ${a.name}`);let c={id:(0,j.nanoid)(),name:a.name,type:a.type,config:JSON.stringify(a.config),description:a.description||null,userId:b.user.id,isActive:!0,createdAt:new Date,updatedAt:new Date},[d]=await g.db.insert(h.endpoints).values(c).returning();if("email_group"===a.type&&"emails"in a.config){let b=a.config.emails.map(a=>({id:(0,j.nanoid)(),endpointId:d.id,emailAddress:a,createdAt:new Date}));b.length>0&&(await g.db.insert(h.emailGroups).values(b),console.log(`üìÆ createEndpoint - Created ${b.length} email group entries`))}return console.log(`‚úÖ createEndpoint - Successfully created endpoint ${d.id}`),{success:!0,endpoint:d}}catch(a){return console.error("‚ùå createEndpoint - Error creating endpoint:",a),{success:!1,error:a instanceof Error?a.message:"Failed to create endpoint"}}}async function m(a,b){let c=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!c?.user?.id)return{success:!1,error:"Unauthorized"};try{console.log(`üìù updateEndpoint - Updating endpoint ${a}`);let d=await g.db.select().from(h.endpoints).where((0,i.and)((0,i.eq)(h.endpoints.id,a),(0,i.eq)(h.endpoints.userId,c.user.id))).limit(1);if(!d[0])return{success:!1,error:"Endpoint not found or access denied"};let e={updatedAt:new Date};void 0!==b.name&&(e.name=b.name),void 0!==b.description&&(e.description=b.description),void 0!==b.isActive&&(e.isActive=b.isActive),void 0!==b.config&&(e.config=JSON.stringify(b.config));let[f]=await g.db.update(h.endpoints).set(e).where((0,i.eq)(h.endpoints.id,a)).returning();if(b.config&&"email_group"===d[0].type&&"emails"in b.config){await g.db.delete(h.emailGroups).where((0,i.eq)(h.emailGroups.endpointId,a));let c=b.config.emails.map(b=>({id:(0,j.nanoid)(),endpointId:a,emailAddress:b,createdAt:new Date}));c.length>0&&(await g.db.insert(h.emailGroups).values(c),console.log(`üìÆ updateEndpoint - Updated ${c.length} email group entries`))}return console.log(`‚úÖ updateEndpoint - Successfully updated endpoint ${a}`),{success:!0,endpoint:f}}catch(a){return console.error("‚ùå updateEndpoint - Error updating endpoint:",a),{success:!1,error:a instanceof Error?a.message:"Failed to update endpoint"}}}async function n(a){let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{success:!1,error:"Unauthorized"};try{console.log(`üóëÔ∏è deleteEndpoint - Deleting endpoint ${a}`);let c=await g.db.select().from(h.endpoints).where((0,i.and)((0,i.eq)(h.endpoints.id,a),(0,i.eq)(h.endpoints.userId,b.user.id))).limit(1);if(!c[0])return{success:!1,error:"Endpoint not found or access denied"};let d=await g.db.update(h.emailAddresses).set({endpointId:null,updatedAt:new Date}).where((0,i.eq)(h.emailAddresses.endpointId,a)).returning({address:h.emailAddresses.address});return d.length>0&&console.log(`üìß deleteEndpoint - Updated ${d.length} email addresses to store-only mode:`,d.map(a=>a.address).join(", ")),await g.db.update(h.emailDomains).set({catchAllEndpointId:null,updatedAt:new Date}).where((0,i.eq)(h.emailDomains.catchAllEndpointId,a)),"email_group"===c[0].type&&(await g.db.delete(h.emailGroups).where((0,i.eq)(h.emailGroups.endpointId,a)),console.log(`üìÆ deleteEndpoint - Deleted email group entries for endpoint ${a}`)),await g.db.delete(h.endpointDeliveries).where((0,i.eq)(h.endpointDeliveries.endpointId,a)),console.log(`üìä deleteEndpoint - Deleted delivery history for endpoint ${a}`),await g.db.delete(h.endpoints).where((0,i.eq)(h.endpoints.id,a)),console.log(`‚úÖ deleteEndpoint - Successfully deleted endpoint ${a}`),{success:!0,emailAddressesUpdated:d.length,message:d.length>0?`Endpoint deleted. ${d.length} email address(es) switched to store-only mode.`:"Endpoint deleted successfully."}}catch(a){return console.error("‚ùå deleteEndpoint - Error deleting endpoint:",a),{success:!1,error:a instanceof Error?a.message:"Failed to delete endpoint"}}}async function o(a){let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{success:!1,error:"Unauthorized"};if(!a.length)return{success:!1,error:"No endpoints selected for deletion"};try{console.log(`üóëÔ∏è deleteMultipleEndpoints - Deleting ${a.length} endpoints`);let c=await g.db.select().from(h.endpoints).where((0,i.and)((0,i.eq)(h.endpoints.userId,b.user.id))),d=c.filter(b=>a.includes(b.id)).map(a=>a.id);if(d.length!==a.length)return{success:!1,error:"Some endpoints not found or access denied"};let e=0,f=[],j=0;for(let a of d)try{let b=c.find(b=>b.id===a),d=await g.db.update(h.emailAddresses).set({endpointId:null,updatedAt:new Date}).where((0,i.eq)(h.emailAddresses.endpointId,a)).returning({address:h.emailAddresses.address});j+=d.length,d.length>0&&console.log(`üìß deleteMultipleEndpoints - Updated ${d.length} email addresses to store-only mode for endpoint ${a}`),await g.db.update(h.emailDomains).set({catchAllEndpointId:null,updatedAt:new Date}).where((0,i.eq)(h.emailDomains.catchAllEndpointId,a)),b?.type==="email_group"&&await g.db.delete(h.emailGroups).where((0,i.eq)(h.emailGroups.endpointId,a)),await g.db.delete(h.endpointDeliveries).where((0,i.eq)(h.endpointDeliveries.endpointId,a)),await g.db.delete(h.endpoints).where((0,i.eq)(h.endpoints.id,a)),e++}catch(b){console.error(`‚ùå Error deleting endpoint ${a}:`,b),f.push(`Failed to delete endpoint ${a}`)}if(console.log(`‚úÖ deleteMultipleEndpoints - Successfully deleted ${e}/${a.length} endpoints`),f.length>0)return{success:!1,error:`Partially completed: ${e} deleted, ${f.length} failed. ${f.join(", ")}`,deletedCount:e,emailAddressesUpdated:j};return{success:!0,deletedCount:e,emailAddressesUpdated:j,message:j>0?`${e} endpoint(s) deleted. ${j} email address(es) switched to store-only mode.`:`${e} endpoint(s) deleted successfully.`}}catch(a){return console.error("‚ùå deleteMultipleEndpoints - Error deleting endpoints:",a),{success:!1,error:a instanceof Error?a.message:"Failed to delete endpoints"}}}async function p(){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{success:!1,error:"Unauthorized"};try{let b=await g.db.select().from(h.endpoints).where((0,i.eq)(h.endpoints.userId,a.user.id)).orderBy(h.endpoints.createdAt);return console.log(`üìã getEndpoints - Retrieved ${b.length} endpoints for user ${a.user.id}`),{success:!0,endpoints:b}}catch(a){return console.error("‚ùå getEndpoints - Error fetching endpoints:",a),{success:!1,error:a instanceof Error?a.message:"Failed to fetch endpoints"}}}async function q(a){let b=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!b?.user?.id)return{success:!1,error:"Unauthorized"};try{console.log(`üß™ testEndpoint - Testing endpoint ${a}`);let c=await g.db.select().from(h.endpoints).where((0,i.and)((0,i.eq)(h.endpoints.id,a),(0,i.eq)(h.endpoints.userId,b.user.id))).limit(1);if(!c[0])return{success:!1,error:"Endpoint not found or access denied"};let d=JSON.parse(c[0].config),e=Date.now(),f={success:!1,message:"Test not implemented for this endpoint type",responseTime:0};switch(c[0].type){case"webhook":try{let a=await fetch(d.url,{method:"POST",headers:{"Content-Type":"application/json","User-Agent":"InboundEmail-Test/1.0","X-Test-Request":"true",...d.headers?JSON.parse(d.headers):{}},body:JSON.stringify({event:"test",timestamp:new Date().toISOString(),message:"This is a test request from the Inbound Email service"}),signal:AbortSignal.timeout(1e3*(d.timeout||30))}),b=Date.now()-e;f={success:a.ok,message:a.ok?"Webhook responded successfully":`Webhook returned ${a.status}`,responseTime:b,statusCode:a.status}}catch(a){f={success:!1,message:a instanceof Error?a.message:"Webhook test failed",responseTime:Date.now()-e}}break;case"email":case"email_group":let j="email_group"===c[0].type?d.emails:[d.forwardTo],k=j.every(a=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(a));f={success:k,message:k?`Email configuration is valid (${j.length} recipient${j.length>1?"s":""})`:"Invalid email address(es) in configuration",responseTime:Date.now()-e}}return console.log(`${f.success?"‚úÖ":"‚ùå"} testEndpoint - Test ${f.success?"passed":"failed"} for endpoint ${a}`),f}catch(a){return console.error("‚ùå testEndpoint - Error testing endpoint:",a),{success:!1,error:a instanceof Error?a.message:"Failed to test endpoint"}}}async function r(){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{success:!1,error:"Unauthorized"};try{let b=await (0,k.checkWebhookMigrationNeeded)(a.user.id);return{success:!0,migrationNeeded:b}}catch(a){return console.error("Error checking migration status:",a),{success:!1,error:"Failed to check migration status"}}}async function s(){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{success:!1,error:"Unauthorized"};try{let b=await (0,k.migrateUserWebhooksToEndpoints)(a.user.id);if(b.success)return{success:!0,migratedCount:b.migratedCount,skippedCount:b.skippedCount,message:`Successfully migrated ${b.migratedCount} webhooks to endpoints`};return{success:!1,error:`Migration failed: ${b.errors.join(", ")}`}}catch(a){return console.error("Error in migrateWebhooksToEndpoints:",a),{success:!1,error:a instanceof Error?a.message:"Failed to migrate webhooks"}}}async function t(){let a=await e.auth.api.getSession({headers:await (0,f.headers)()});if(!a?.user?.id)return{success:!1,error:"Unauthorized"};try{let b=await (0,k.resetMigrationFlag)(a.user.id);if(b.success)return{success:!0,message:"Migration flag reset successfully - migration can now run again"};return{success:!1,error:b.error||"Failed to reset migration flag"}}catch(a){return console.error("Error in resetWebhookMigrationFlag:",a),{success:!1,error:a instanceof Error?a.message:"Failed to reset migration flag"}}}(0,a.i(377991).ensureServerEntryExports)([l,m,n,o,p,q,r,s,t]),(0,d.registerServerReference)(l,"404171fbad501253a1bca12c66c9bc62ca52a2ab1e",null),(0,d.registerServerReference)(m,"60394e66e87f2a798cbd64134c102274642c0414e1",null),(0,d.registerServerReference)(n,"4039648ca20cee0913d6f2f786ba2f35d6348c48a3",null),(0,d.registerServerReference)(o,"40515f2a1a45eae61cc5c66b637f7b7f5d38b98ad9",null),(0,d.registerServerReference)(p,"0062dc2d968bf7f81667dc11ab34235aff52cfcef6",null),(0,d.registerServerReference)(q,"4090a373eb7fae0e13f34e5282e425178425275da2",null),(0,d.registerServerReference)(r,"009bc667e4551b976ae0c15e50cbf919762c4f6f91",null),(0,d.registerServerReference)(s,"00a849d61ace5e9280f8827e33dcb81c884d88af53",null),(0,d.registerServerReference)(t,"00f86357c063af8eda8604728561ac063910831733",null)}};

//# sourceMappingURL=_8aa75b28._.js.map