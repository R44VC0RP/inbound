{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/dist/client/app-dir/link.js/proxy.cjs","turbopack:///[project]/app/changelog/page.tsx","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js <module evaluation>\"));\n","import { promises as fs } from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport { format } from 'date-fns'\nimport Link from 'next/link'\nimport type { Metadata } from 'next'\n\ninterface ChangelogEntry {\n  slug: string\n  title: string\n  date: Date\n  version: string\n  content: string\n  summary?: string\n}\n\nexport const metadata: Metadata = {\n  title: 'Changelog - Inbound',\n  description: 'All the latest updates, improvements, and fixes to Inbound',\n  openGraph: {\n    title: 'Changelog - Inbound',\n    description: 'All the latest updates, improvements, and fixes to Inbound',\n    images: [\n      {\n        url: '/changelog/opengraph-image',\n        width: 1200,\n        height: 630,\n        alt: 'Inbound Changelog - All the latest updates, improvements, and fixes',\n      },\n    ],\n  },\n  twitter: {\n    card: 'summary_large_image',\n    title: 'Changelog - Inbound',\n    description: 'All the latest updates, improvements, and fixes to Inbound',\n    images: ['/changelog/opengraph-image'],\n  },\n}\n\nasync function getChangelogEntries(): Promise<ChangelogEntry[]> {\n  const entriesDirectory = path.join(process.cwd(), 'app/changelog/entries')\n  \n  try {\n    const fileNames = await fs.readdir(entriesDirectory)\n    const mdxFiles = fileNames.filter(fileName => fileName.endsWith('.mdx'))\n    \n    const entries = await Promise.all(\n      mdxFiles.map(async (fileName) => {\n        const fullPath = path.join(entriesDirectory, fileName)\n        const fileContents = await fs.readFile(fullPath, 'utf8')\n        const { data, content } = matter(fileContents)\n        \n        return {\n          slug: fileName.replace(/\\.mdx$/, ''),\n          title: data.title || 'Untitled',\n          date: new Date(data.date || Date.now()),\n          version: data.version || '1.0',\n          content: content,\n          summary: data.summary\n        }\n      })\n    )\n    \n    // Sort by date, newest first\n    return entries.sort((a, b) => b.date.getTime() - a.date.getTime())\n  } catch (error) {\n    console.error('Error reading changelog entries:', error)\n    return []\n  }\n}\n\nexport default async function ChangelogPage() {\n  const entries = await getChangelogEntries()\n  \n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <div className=\"max-w-4xl mx-auto px-6 py-16\">\n        {/* Header */}\n        <div className=\"mb-16 border-b border-border pb-8\">\n          <h1 className=\"text-5xl sm:text-6xl font-light tracking-tight mb-4\">Changelog</h1>\n          <p className=\"text-muted-foreground text-lg\">\n            All the latest updates, improvements, and fixes to Inbound\n          </p>\n        </div>\n        \n        {/* Entries */}\n        <div className=\"relative\">\n          {/* Timeline line */}\n          <div className=\"absolute left-8 top-0 bottom-0 w-px bg-border\" />\n          \n          <div className=\"space-y-16\">\n            {entries.length === 0 ? (\n              <p className=\"text-muted-foreground ml-20\">No changelog entries yet.</p>\n            ) : (\n              entries.map((entry, index) => (\n                <article key={entry.slug} className=\"relative\">\n                  {/* Timeline dot */}\n                  <div className=\"absolute left-8 top-0 -translate-x-1/2\">\n                    <div className=\"w-4 h-4 bg-background border-2 border-primary rounded-full\" />\n                  </div>\n                  \n                  <div className=\"ml-20\">\n                    {/* Date and version */}\n                    <div className=\"flex items-baseline gap-4 mb-4\">\n                      <time className=\"text-muted-foreground text-sm font-medium\">\n                        {format(entry.date, 'MMMM d, yyyy')}\n                      </time>\n                      <span className=\"text-xs px-2.5 py-1 bg-primary/10 text-primary rounded-md font-medium\">\n                        v{entry.version}\n                      </span>\n                    </div>\n                    \n                    {/* Title */}\n                    <h2 className=\"text-2xl sm:text-3xl font-semibold mb-4 text-foreground\">\n                      {entry.title}\n                    </h2>\n                    \n                    {/* Summary */}\n                    {entry.summary && (\n                      <p className=\"text-muted-foreground mb-6 text-base sm:text-lg leading-relaxed\">\n                        {entry.summary}\n                      </p>\n                    )}\n                    \n                    {/* Read more link */}\n                    <Link \n                      href={`/changelog/${entry.slug}`}\n                      className=\"inline-flex items-center text-primary hover:text-primary/80 transition-colors font-medium\"\n                    >\n                      Read full update\n                      <svg \n                        className=\"ml-2 w-4 h-4\" \n                        fill=\"none\" \n                        stroke=\"currentColor\" \n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path \n                          strokeLinecap=\"round\" \n                          strokeLinejoin=\"round\" \n                          strokeWidth={2} \n                          d=\"M13 7l5 5m0 0l-5 5m5-5H6\" \n                        />\n                      </svg>\n                    </Link>\n                  </div>\n                </article>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n} ","import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["process","env","NEXT_RUNTIME","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","module","exports","require","AppPageRouteModule","RouteKind","tree","pages","__next_app__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":"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","ignoreList":[0,1,3]}