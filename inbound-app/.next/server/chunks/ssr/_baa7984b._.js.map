{"version":3,"sources":["turbopack:///[project]/features/domains/api/domainsApi.ts","turbopack:///[project]/features/domains/hooks/useDomainsQuery.ts","turbopack:///[project]/lib/webhooks/webhook-formats.ts","turbopack:///[project]/components/endpoints/EndpointTypeSelector.tsx","turbopack:///[project]/components/endpoints/CreateEndpointDialog.tsx","turbopack:///[project]/components/endpoints/EditEndpointDialog.tsx","turbopack:///[project]/components/endpoints/DeleteEndpointDialog.tsx","turbopack:///[project]/components/endpoints/DeleteMultipleEndpointsDialog.tsx","turbopack:///[project]/components/endpoints/TestEndpointDialog.tsx","turbopack:///[project]/components/endpoints/index.ts","turbopack:///[project]/app/(main)/endpoints/page.tsx"],"sourcesContent":["// Domains API service layer\nimport { getDomainStats } from '@/app/actions/primary'\n\nexport interface DomainStats {\n  id: string\n  domain: string\n  status: string\n  isVerified: boolean\n  isCatchAllEnabled: boolean\n  catchAllWebhookId: string | null\n  catchAllEndpointId: string | null\n  emailAddressCount: number\n  emailsLast24h: number\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface DomainStatsResponse {\n  domains: DomainStats[]\n  totalDomains: number\n  verifiedDomains: number\n  totalEmailAddresses: number\n  totalEmailsLast24h: number\n  limits?: {\n    allowed: boolean\n    unlimited: boolean\n    balance: number | null\n    current: number\n    remaining: number | null\n  } | null\n}\n\nexport interface DomainDetails {\n  domain: {\n    id: string\n    domain: string\n    status: string\n    isVerified: boolean\n    createdAt: string\n    updatedAt: string\n  }\n  dnsRecords: Array<{\n    type: string\n    name: string\n    value: string\n    status: 'verified' | 'pending' | 'failed'\n    lastChecked: string\n  }>\n  emailAddresses: Array<{\n    id: string\n    address: string\n    isActive: boolean\n    createdAt: string\n  }>\n  recentEmails: Array<{\n    id: string\n    from: string\n    subject: string\n    receivedAt: string\n    status: string\n  }>\n}\n\nexport const domainsApi = {\n  // Fetch domain statistics using server action\n  getDomainStats: async (): Promise<DomainStatsResponse> => {\n    const result = await getDomainStats()\n    \n    if ('error' in result) {\n      throw new Error(result.error || 'Failed to fetch domain statistics')\n    }\n    \n    return result\n  },\n\n  // Fetch domain details by ID\n  getDomainDetails: async (domainId: string): Promise<DomainDetails> => {\n    const response = await fetch(`/api/domain/${domainId}`)\n    \n    if (!response.ok) {\n      if (response.status === 404) {\n        throw new Error('Domain not found')\n      }\n      throw new Error('Failed to fetch domain details')\n    }\n    \n    return response.json()\n  },\n\n  // Verify domain DNS records\n  verifyDomain: async (domainId: string): Promise<{ success: boolean; message: string }> => {\n    const response = await fetch(`/api/domain/${domainId}/verify`, {\n      method: 'POST',\n    })\n    \n    if (!response.ok) {\n      throw new Error('Failed to verify domain')\n    }\n    \n    return response.json()\n  },\n} ","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query'\nimport { domainsApi, type DomainStatsResponse, type DomainDetails } from '../api/domainsApi'\n\n// Query keys for domains\nexport const domainKeys = {\n  all: ['domains'] as const,\n  stats: () => [...domainKeys.all, 'stats'] as const,\n  details: () => [...domainKeys.all, 'details'] as const,\n  detail: (id: string) => [...domainKeys.details(), id] as const,\n}\n\n// Hook for domain statistics\nexport const useDomainsStatsQuery = () => {\n  return useQuery({\n    queryKey: domainKeys.stats(),\n    queryFn: domainsApi.getDomainStats,\n  })\n}\n\n// Hook for domain details\nexport const useDomainDetailsQuery = (domainId: string) => {\n  return useQuery({\n    queryKey: domainKeys.detail(domainId),\n    queryFn: () => domainsApi.getDomainDetails(domainId),\n    // Only fetch if domainId is provided\n    enabled: !!domainId,\n  })\n}\n\n// Hook for domain verification mutation\nexport const useDomainVerifyMutation = () => {\n  const queryClient = useQueryClient()\n  \n  return useMutation({\n    mutationFn: domainsApi.verifyDomain,\n    // Optimistic updates and cache invalidation\n    onSuccess: (data, domainId) => {\n      // Invalidate and refetch domain stats\n      queryClient.invalidateQueries({ queryKey: domainKeys.stats() })\n      // Invalidate and refetch specific domain details\n      queryClient.invalidateQueries({ queryKey: domainKeys.detail(domainId) })\n    },\n  })\n} ","import type { WebhookFormat } from '@/lib/db/schema'\n\n// Base email data structure that all formats will use\nexport interface BaseEmailData {\n  messageId: string\n  from: string\n  to: string[]\n  subject: string\n  textBody?: string\n  htmlBody?: string\n  attachments?: Array<{\n    filename?: string\n    contentType?: string\n    size?: number\n  }>\n  headers?: Record<string, any>\n  timestamp: string\n  recipient: string\n}\n\n// Inbound webhook format (current format)\nexport interface InboundWebhookPayload {\n  event: string\n  timestamp: string\n  messageId: string\n  source: string\n  destination: string[]\n  subject: string\n  body: {\n    text?: string\n    html?: string\n  }\n  attachments: Array<{\n    filename?: string\n    contentType?: string\n    size?: number\n    contentId?: string\n    contentDisposition?: string\n  }>\n  headers: Record<string, any>\n  endpoint?: {\n    id: string\n    name: string\n  }\n  test?: boolean\n}\n\n// Discord webhook format\n// Based on Discord webhook documentation: https://discord.com/developers/docs/resources/webhook\nexport interface DiscordWebhookPayload {\n  content?: string\n  username?: string\n  avatar_url?: string\n  tts?: boolean\n  embeds?: Array<{\n    title?: string\n    description?: string\n    url?: string\n    timestamp?: string\n    color?: number\n    footer?: {\n      text: string\n      icon_url?: string\n    }\n    image?: {\n      url: string\n    }\n    thumbnail?: {\n      url: string\n    }\n    author?: {\n      name: string\n      url?: string\n      icon_url?: string\n    }\n    fields?: Array<{\n      name: string\n      value: string\n      inline?: boolean\n    }>\n  }>\n  allowed_mentions?: {\n    parse?: string[]\n    roles?: string[]\n    users?: string[]\n    replied_user?: boolean\n  }\n}\n\n// Slack webhook format (for future implementation)\nexport interface SlackWebhookPayload {\n  text?: string\n  username?: string\n  icon_url?: string\n  icon_emoji?: string\n  channel?: string\n  attachments?: Array<{\n    fallback?: string\n    color?: string\n    pretext?: string\n    author_name?: string\n    author_link?: string\n    author_icon?: string\n    title?: string\n    title_link?: string\n    text?: string\n    fields?: Array<{\n      title: string\n      value: string\n      short?: boolean\n    }>\n    image_url?: string\n    thumb_url?: string\n    footer?: string\n    footer_icon?: string\n    ts?: number\n  }>\n}\n\n// Webhook format configuration\nexport interface WebhookFormatConfig {\n  name: string\n  description: string\n  testPayload: (data: BaseEmailData) => any\n  realPayload: (data: BaseEmailData) => any\n}\n\n// Format implementations\nexport const WEBHOOK_FORMAT_CONFIGS: Record<WebhookFormat, WebhookFormatConfig> = {\n  inbound: {\n    name: 'Inbound Webhook',\n    description: 'Standard Inbound email webhook format with full email data',\n    testPayload: (data: BaseEmailData): InboundWebhookPayload => ({\n      event: 'webhook_test',\n      timestamp: data.timestamp,\n      messageId: data.messageId,\n      source: data.from,\n      destination: data.to,\n      subject: data.subject,\n      body: {\n        text: data.textBody || 'This is a test email from the Inbound Email service to verify webhook functionality.',\n        html: data.htmlBody || '<p>This is a test email from the <strong>Inbound Email service</strong> to verify webhook functionality.</p>'\n      },\n      attachments: data.attachments || [],\n      headers: data.headers || {},\n      test: true\n    }),\n    realPayload: (data: BaseEmailData): InboundWebhookPayload => ({\n      event: 'email_received',\n      timestamp: data.timestamp,\n      messageId: data.messageId,\n      source: data.from,\n      destination: data.to,\n      subject: data.subject,\n      body: {\n        text: data.textBody,\n        html: data.htmlBody\n      },\n      attachments: data.attachments || [],\n      headers: data.headers || {}\n    })\n  },\n  \n  discord: {\n    name: 'Discord Webhook',\n    description: 'Discord-compatible webhook format with rich embeds',\n    testPayload: (data: BaseEmailData): DiscordWebhookPayload => ({\n      content: `ðŸ“§ **Test Email Received**`,\n      embeds: [{\n        title: data.subject || 'Test Email - Inbound Email Service',\n        description: data.textBody || 'This is a test email from the Inbound Email service to verify webhook functionality.',\n        color: 0x00ff00, // Green color for test\n        timestamp: data.timestamp,\n        footer: {\n          text: 'Inbound Email Service - Test',\n          icon_url: 'https://inbound.new/favicon.ico'\n        },\n        fields: [\n          {\n            name: 'From',\n            value: data.from || 'test@example.com',\n            inline: true\n          },\n          {\n            name: 'To',\n            value: data.to.join(', ') || data.recipient,\n            inline: true\n          },\n          {\n            name: 'Message ID',\n            value: `\\`${data.messageId}\\``,\n            inline: false\n          }\n        ]\n      }]\n    }),\n    realPayload: (data: BaseEmailData): DiscordWebhookPayload => ({\n      content: `ðŸ“§ **New Email Received**`,\n      embeds: [{\n        title: data.subject || 'No Subject',\n        description: data.textBody ? (data.textBody.length > 2000 ? data.textBody.substring(0, 2000) + '...' : data.textBody) : 'No content',\n        color: 0x0099ff, // Blue color for real emails\n        timestamp: data.timestamp,\n        footer: {\n          text: 'Inbound Email Service',\n          icon_url: 'https://inbound.new/favicon.ico'\n        },\n        fields: [\n          {\n            name: 'From',\n            value: data.from,\n            inline: true\n          },\n          {\n            name: 'To',\n            value: data.to.join(', '),\n            inline: true\n          },\n          ...(data.attachments && data.attachments.length > 0 ? [{\n            name: 'Attachments',\n            value: data.attachments.map(att => att.filename || 'Unknown').join(', '),\n            inline: false\n          }] : []),\n          {\n            name: 'Message ID',\n            value: `\\`${data.messageId}\\``,\n            inline: false\n          }\n        ]\n      }]\n    })\n  },\n  \n  slack: {\n    name: 'Slack Webhook',\n    description: 'Slack-compatible webhook format with attachments',\n    testPayload: (data: BaseEmailData): SlackWebhookPayload => ({\n      text: `ðŸ“§ *Test Email Received*`,\n      username: 'Inbound Email',\n      icon_url: 'https://inbound.new/favicon.ico',\n      attachments: [{\n        fallback: `Test email: ${data.subject}`,\n        color: 'good',\n        title: data.subject || 'Test Email - Inbound Email Service',\n        text: data.textBody || 'This is a test email from the Inbound Email service to verify webhook functionality.',\n        fields: [\n          {\n            title: 'From',\n            value: data.from || 'test@example.com',\n            short: true\n          },\n          {\n            title: 'To',\n            value: data.to.join(', ') || data.recipient,\n            short: true\n          },\n          {\n            title: 'Message ID',\n            value: data.messageId,\n            short: false\n          }\n        ],\n        footer: 'Inbound Email Service - Test',\n        ts: Math.floor(new Date(data.timestamp).getTime() / 1000)\n      }]\n    }),\n    realPayload: (data: BaseEmailData): SlackWebhookPayload => ({\n      text: `ðŸ“§ *New Email Received*`,\n      username: 'Inbound Email',\n      icon_url: 'https://inbound.new/favicon.ico',\n      attachments: [{\n        fallback: `New email: ${data.subject}`,\n        color: '#0099ff',\n        title: data.subject || 'No Subject',\n        text: data.textBody ? (data.textBody.length > 1000 ? data.textBody.substring(0, 1000) + '...' : data.textBody) : 'No content',\n        fields: [\n          {\n            title: 'From',\n            value: data.from,\n            short: true\n          },\n          {\n            title: 'To',\n            value: data.to.join(', '),\n            short: true\n          },\n          ...(data.attachments && data.attachments.length > 0 ? [{\n            title: 'Attachments',\n            value: data.attachments.map(att => att.filename || 'Unknown').join(', '),\n            short: false\n          }] : []),\n          {\n            title: 'Message ID',\n            value: data.messageId,\n            short: false\n          }\n        ],\n        footer: 'Inbound Email Service',\n        ts: Math.floor(new Date(data.timestamp).getTime() / 1000)\n      }]\n    })\n  }\n}\n\n// Helper function to get webhook format config\nexport function getWebhookFormatConfig(format: WebhookFormat): WebhookFormatConfig {\n  return WEBHOOK_FORMAT_CONFIGS[format]\n}\n\n// Helper function to generate test payload for any format\nexport function generateTestPayload(format: WebhookFormat, baseData?: Partial<BaseEmailData>): any {\n  const config = getWebhookFormatConfig(format)\n  const defaultData: BaseEmailData = {\n    messageId: `test-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    from: 'test@example.com',\n    to: ['test@yourdomain.com'],\n    subject: 'Test Email - Inbound Email Service',\n    textBody: 'This is a test email from the Inbound Email service to verify webhook functionality.',\n    htmlBody: '<p>This is a test email from the <strong>Inbound Email service</strong> to verify webhook functionality.</p>',\n    attachments: [],\n    headers: {\n      'From': 'test@example.com',\n      'To': 'test@yourdomain.com',\n      'Subject': 'Test Email - Inbound Email Service',\n      'Date': new Date().toISOString()\n    },\n    timestamp: new Date().toISOString(),\n    recipient: 'test@yourdomain.com'\n  }\n  \n  const mergedData = { ...defaultData, ...baseData }\n  return config.testPayload(mergedData)\n}\n\n// Helper function to generate real payload for any format\nexport function generateRealPayload(format: WebhookFormat, emailData: BaseEmailData): any {\n  const config = getWebhookFormatConfig(format)\n  return config.realPayload(emailData)\n} ","\"use client\"\n\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport UserGroup from '@/components/icons/user-group'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent } from '@/components/ui/card'\n\ninterface EndpointTypeSelectorProps {\n  selectedType: 'webhook' | 'email' | 'email_group' | null\n  onTypeSelect: (type: 'webhook' | 'email' | 'email_group') => void\n  disabled?: boolean\n}\n\nexport function EndpointTypeSelector({ selectedType, onTypeSelect, disabled = false }: EndpointTypeSelectorProps) {\n  const types = [\n    {\n      type: 'webhook' as const,\n      icon: BoltLightning,\n      title: 'Webhook',\n      description: 'Send HTTP requests to your application',\n      color: 'purple'\n    },\n    {\n      type: 'email' as const,\n      icon: Envelope2,\n      title: 'Email Forward',\n      description: 'Forward emails to a single recipient',\n      color: 'blue'\n    },\n    {\n      type: 'email_group' as const,\n      icon: UserGroup,\n      title: 'Email Group',\n      description: 'Forward emails to multiple recipients',\n      color: 'green'\n    }\n  ]\n\n  const getColorClasses = (color: string, isSelected: boolean) => {\n    const colors = {\n      purple: {\n        border: isSelected ? 'border-purple-500' : 'border-border',\n        bg: isSelected ? 'bg-purple-50 dark:bg-purple-900/20' : 'bg-card',\n        icon: isSelected ? 'text-purple-600 dark:text-purple-400' : 'text-muted-foreground',\n        title: isSelected ? 'text-purple-900 dark:text-purple-100' : 'text-foreground',\n        desc: isSelected ? 'text-purple-700 dark:text-purple-300' : 'text-muted-foreground'\n      },\n      blue: {\n        border: isSelected ? 'border-blue-500' : 'border-border',\n        bg: isSelected ? 'bg-blue-50 dark:bg-blue-900/20' : 'bg-card',\n        icon: isSelected ? 'text-blue-600 dark:text-blue-400' : 'text-muted-foreground',\n        title: isSelected ? 'text-blue-900 dark:text-blue-100' : 'text-foreground',\n        desc: isSelected ? 'text-blue-700 dark:text-blue-300' : 'text-muted-foreground'\n      },\n      green: {\n        border: isSelected ? 'border-green-500' : 'border-border',\n        bg: isSelected ? 'bg-green-50 dark:bg-green-900/20' : 'bg-card',\n        icon: isSelected ? 'text-green-600 dark:text-green-400' : 'text-muted-foreground',\n        title: isSelected ? 'text-green-900 dark:text-green-100' : 'text-foreground',\n        desc: isSelected ? 'text-green-700 dark:text-green-300' : 'text-muted-foreground'\n      }\n    }\n    return colors[color as keyof typeof colors]\n  }\n\n  return (\n    <div className=\"space-y-3\">\n      <div className=\"space-y-2\">\n        <h4 className=\"text-sm font-medium text-foreground\">Endpoint Type</h4>\n        <p className=\"text-xs text-muted-foreground\">Choose how you want to receive emails</p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 gap-3\">\n        {types.map((typeOption) => {\n          const isSelected = selectedType === typeOption.type\n          const colors = getColorClasses(typeOption.color, isSelected)\n          const Icon = typeOption.icon\n          \n          return (\n            <Card\n              key={typeOption.type}\n              className={`cursor-pointer transition-all duration-200 hover:shadow-md ${colors.border} ${colors.bg} ${\n                disabled ? 'opacity-50 cursor-not-allowed' : ''\n              }`}\n              onClick={() => !disabled && onTypeSelect(typeOption.type)}\n            >\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-start gap-3\">\n                  <div className={`flex items-center justify-center w-10 h-10 rounded-lg ${\n                    isSelected \n                      ? `bg-${typeOption.color}-100 dark:bg-${typeOption.color}-900/30` \n                      : 'bg-muted'\n                  }`}>\n                    <Icon width=\"20\" height=\"20\" className={colors.icon} />\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <h5 className={`text-sm font-semibold ${colors.title}`}>\n                      {typeOption.title}\n                    </h5>\n                    <p className={`text-xs mt-1 ${colors.desc}`}>\n                      {typeOption.description}\n                    </p>\n                  </div>\n                  {isSelected && (\n                    <div className={`w-4 h-4 rounded-full bg-${typeOption.color}-500 flex items-center justify-center`}>\n                      <div className=\"w-2 h-2 rounded-full bg-white dark:bg-gray-900\"></div>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )\n        })}\n      </div>\n    </div>\n  )\n} ","\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { useCreateEndpointMutation } from '@/features/endpoints/hooks'\nimport { useDomainsStatsQuery } from '@/features/domains/hooks/useDomainsQuery'\nimport { CreateEndpointData, WebhookConfig, EmailForwardConfig, EmailGroupConfig } from '@/features/endpoints/types'\nimport { WEBHOOK_FORMAT_CONFIGS, getWebhookFormatConfig } from '@/lib/webhooks/webhook-formats'\nimport type { WebhookFormat } from '@/lib/db/schema'\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Switch } from '@/components/ui/switch'\nimport CirclePlus from '@/components/icons/circle-plus'\nimport TabClose from '@/components/icons/tab-close'\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport UserGroup from '@/components/icons/user-group'\nimport ArrowBoldLeft from '@/components/icons/arrow-bold-left'\nimport ArrowBoldRight from '@/components/icons/arrow-bold-right'\nimport { toast } from 'sonner'\nimport { EndpointTypeSelector } from './EndpointTypeSelector'\n\ninterface CreateEndpointDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n}\n\ntype Step = 'type' | 'basic' | 'config'\n\nexport function CreateEndpointDialog({ open, onOpenChange }: CreateEndpointDialogProps) {\n  const [currentStep, setCurrentStep] = useState<Step>('type')\n  const [selectedType, setSelectedType] = useState<'webhook' | 'email' | 'email_group' | null>(null)\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n  })\n  \n  // Webhook-specific state\n  const [webhookFormat, setWebhookFormat] = useState<WebhookFormat>('inbound')\n  const [webhookConfig, setWebhookConfig] = useState<WebhookConfig>({\n    url: '',\n    timeout: 30,\n    retryAttempts: 3,\n    headers: {}\n  })\n  const [headerKey, setHeaderKey] = useState('')\n  const [headerValue, setHeaderValue] = useState('')\n  \n  // Email-specific state\n  const [emailConfig, setEmailConfig] = useState<EmailForwardConfig>({\n    forwardTo: '',\n    includeAttachments: true,\n    subjectPrefix: ''\n  })\n  \n  // Email group-specific state\n  const [emailGroupConfig, setEmailGroupConfig] = useState<EmailGroupConfig>({\n    emails: [],\n    includeAttachments: true,\n    subjectPrefix: ''\n  })\n  const [newEmail, setNewEmail] = useState('')\n  \n  const [errors, setErrors] = useState<Record<string, string>>({})\n\n  const createEndpointMutation = useCreateEndpointMutation()\n  const { data: domainsData } = useDomainsStatsQuery()\n\n  // Get verified domains for email endpoints\n  const verifiedDomains = domainsData?.domains?.filter(domain => domain.isVerified) || []\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === 'Enter') {\n        event.preventDefault()\n        if (currentStep === 'config' && !createEndpointMutation.isPending && selectedType && validateCurrentStep()) {\n          handleSubmit(event as any)\n        } else if (canProceedToNextStep()) {\n          handleNext()\n        }\n      }\n    }\n\n    if (open) {\n      document.addEventListener('keydown', handleKeyDown)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [open, currentStep, createEndpointMutation.isPending, selectedType, formData, webhookConfig, emailConfig, emailGroupConfig])\n\n  const validateCurrentStep = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (currentStep === 'type') {\n      if (!selectedType) {\n        newErrors.type = 'Please select an endpoint type'\n      }\n    }\n\n    if (currentStep === 'basic') {\n      if (!formData.name.trim()) {\n        newErrors.name = 'Name is required'\n      }\n      \n      // For email forwards, validate email in basic step\n      if (selectedType === 'email') {\n        if (!emailConfig.forwardTo.trim()) {\n          newErrors.forwardTo = 'Forward to email is required'\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailConfig.forwardTo)) {\n          newErrors.forwardTo = 'Please enter a valid email address'\n        }\n      }\n    }\n\n    if (currentStep === 'config' && selectedType) {\n      if (selectedType === 'webhook') {\n        if (!webhookConfig.url.trim()) {\n          newErrors.url = 'URL is required'\n        } else {\n          try {\n            new URL(webhookConfig.url)\n          } catch {\n            newErrors.url = 'Please enter a valid URL'\n          }\n        }\n\n        if (webhookConfig.timeout && (webhookConfig.timeout < 1 || webhookConfig.timeout > 300)) {\n          newErrors.timeout = 'Timeout must be between 1 and 300 seconds'\n        }\n\n        if (webhookConfig.retryAttempts && (webhookConfig.retryAttempts < 0 || webhookConfig.retryAttempts > 10)) {\n          newErrors.retryAttempts = 'Retry attempts must be between 0 and 10'\n        }\n      }\n\n      if (selectedType === 'email') {\n        if (!emailConfig.forwardTo.trim()) {\n          newErrors.forwardTo = 'Forward to email is required'\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailConfig.forwardTo)) {\n          newErrors.forwardTo = 'Please enter a valid email address'\n        }\n      }\n\n      if (selectedType === 'email_group') {\n        if (emailGroupConfig.emails.length === 0) {\n          newErrors.emails = 'At least one email address is required'\n        }\n      }\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const canProceedToNextStep = (): boolean => {\n    if (currentStep === 'type') return selectedType !== null\n    if (currentStep === 'basic') {\n      const hasName = formData.name.trim() !== ''\n      if (selectedType === 'email') {\n        const hasValidEmail = emailConfig.forwardTo.trim() !== '' && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailConfig.forwardTo)\n        return hasName && hasValidEmail\n      }\n      return hasName\n    }\n    return false\n  }\n\n  const handleNext = () => {\n    if (!validateCurrentStep()) return\n\n    if (currentStep === 'type') {\n      setCurrentStep('basic')\n    } else if (currentStep === 'basic') {\n      setCurrentStep('config')\n    }\n  }\n\n  const handlePrevious = () => {\n    if (currentStep === 'config') {\n      setCurrentStep('basic')\n    } else if (currentStep === 'basic') {\n      setCurrentStep('type')\n    }\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!selectedType || !validateCurrentStep()) {\n      return\n    }\n\n    let config: WebhookConfig | EmailForwardConfig | EmailGroupConfig\n\n    switch (selectedType) {\n      case 'webhook':\n        config = webhookConfig\n        break\n      case 'email':\n        config = emailConfig\n        break\n      case 'email_group':\n        config = emailGroupConfig\n        break\n      default:\n        return\n    }\n\n    const createData: CreateEndpointData = {\n      name: formData.name,\n      type: selectedType,\n      webhookFormat: selectedType === 'webhook' ? webhookFormat : undefined,\n      description: formData.description || undefined,\n      config\n    }\n\n    try {\n      await createEndpointMutation.mutateAsync(createData)\n      toast.success('Endpoint created successfully!')\n      handleClose()\n    } catch (error) {\n      toast.error(error instanceof Error ? error.message : 'Failed to create endpoint')\n    }\n  }\n\n  const handleClose = () => {\n    setCurrentStep('type')\n    setSelectedType(null)\n    setFormData({ name: '', description: '' })\n    setWebhookFormat('inbound')\n    setWebhookConfig({\n      url: '',\n      timeout: 30,\n      retryAttempts: 3,\n      headers: {}\n    })\n    setEmailConfig({\n      forwardTo: '',\n      includeAttachments: true,\n      subjectPrefix: ''\n    })\n    setEmailGroupConfig({\n      emails: [],\n      includeAttachments: true,\n      subjectPrefix: ''\n    })\n    setHeaderKey('')\n    setHeaderValue('')\n    setNewEmail('')\n    setErrors({})\n    onOpenChange(false)\n  }\n\n  const addHeader = () => {\n    if (headerKey.trim() && headerValue.trim()) {\n      setWebhookConfig(prev => ({\n        ...prev,\n        headers: {\n          ...prev.headers,\n          [headerKey.trim()]: headerValue.trim()\n        }\n      }))\n      setHeaderKey('')\n      setHeaderValue('')\n    }\n  }\n\n  const removeHeader = (key: string) => {\n    setWebhookConfig(prev => {\n      const newHeaders = { ...prev.headers }\n      delete newHeaders[key]\n      return {\n        ...prev,\n        headers: newHeaders\n      }\n    })\n  }\n\n  const addEmail = () => {\n    if (newEmail.trim() && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(newEmail.trim())) {\n      if (!emailGroupConfig.emails.includes(newEmail.trim())) {\n        setEmailGroupConfig(prev => ({\n          ...prev,\n          emails: [...prev.emails, newEmail.trim()]\n        }))\n        setNewEmail('')\n      }\n    }\n  }\n\n  const removeEmail = (email: string) => {\n    setEmailGroupConfig(prev => ({\n      ...prev,\n      emails: prev.emails.filter(e => e !== email)\n    }))\n  }\n\n  const getDialogIcon = () => {\n    switch (selectedType) {\n      case 'webhook':\n        return { icon: BoltLightning, variant: 'webhook' }\n      case 'email':\n        return { icon: Envelope2, variant: 'email' }\n      case 'email_group':\n        return { icon: UserGroup, variant: 'email_group' }\n      default:\n        return { icon: CirclePlus, variant: 'default' }\n    }\n  }\n\n  const { icon: DialogIcon, variant } = getDialogIcon()\n\n  const getStepTitle = () => {\n    switch (currentStep) {\n      case 'type':\n        return 'Choose Endpoint Type'\n      case 'basic':\n        return selectedType === 'email' ? 'Email Forward Setup' : 'Basic Information'\n      case 'config':\n        return selectedType === 'email' ? 'Review & Create' : `Configure ${selectedType === 'webhook' ? 'Webhook' : 'Email Group'}`\n      default:\n        return 'Create New Endpoint'\n    }\n  }\n\n  const renderStepIndicator = () => (\n    <div className=\"flex items-center justify-center space-x-2 mb-6\">\n      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-medium ${\n        currentStep === 'type' ? 'bg-primary text-primary-foreground' : 'bg-muted text-muted-foreground'\n      }`}>\n        1\n      </div>\n      <div className={`w-8 h-1 ${currentStep !== 'type' ? 'bg-primary' : 'bg-muted'}`} />\n      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-medium ${\n        currentStep === 'basic' ? 'bg-primary text-primary-foreground' : \n        currentStep === 'config' ? 'bg-primary/10 text-primary' : 'bg-muted text-muted-foreground'\n      }`}>\n        2\n      </div>\n      <div className={`w-8 h-1 ${currentStep === 'config' ? 'bg-primary' : 'bg-muted'}`} />\n      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-medium ${\n        currentStep === 'config' ? 'bg-primary text-primary-foreground' : 'bg-muted text-muted-foreground'\n      }`}>\n        3\n      </div>\n    </div>\n  )\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-lg\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <div className={`flex items-center justify-center w-8 h-8 rounded-full ${\n              variant === 'webhook' ? 'bg-purple-100 dark:bg-purple-900/20' :\n              variant === 'email' ? 'bg-blue-100 dark:bg-blue-900/20' :\n              variant === 'email_group' ? 'bg-green-100 dark:bg-green-900/20' :\n              'bg-muted'\n            }`}>\n              <DialogIcon className={`h-4 w-4 ${\n                variant === 'webhook' ? 'text-purple-600 dark:text-purple-400' :\n                variant === 'email' ? 'text-blue-600 dark:text-blue-400' :\n                variant === 'email_group' ? 'text-green-600 dark:text-green-400' :\n                'text-muted-foreground'\n              }`} />\n            </div>\n            {getStepTitle()}\n          </DialogTitle>\n        </DialogHeader>\n\n        {renderStepIndicator()}\n\n        <form id=\"endpoint-form\" onSubmit={handleSubmit} className=\"min-h-[300px]\">\n          {/* Step 1: Type Selection */}\n          {currentStep === 'type' && (\n            <div className=\"space-y-4\">\n              <EndpointTypeSelector\n                selectedType={selectedType}\n                onTypeSelect={setSelectedType}\n              />\n              {errors.type && <p className=\"text-sm text-red-500\">{errors.type}</p>}\n            </div>\n          )}\n\n          {/* Step 2: Basic Information */}\n          {currentStep === 'basic' && (\n            <div className=\"space-y-4\">\n              {/* For email forwards, show email field first */}\n              {selectedType === 'email' && (\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"forwardToBasic\">Forward To Email *</Label>\n                  <Input\n                    id=\"forwardToBasic\"\n                    type=\"email\"\n                    value={emailConfig.forwardTo}\n                    onChange={(e) => {\n                      const email = e.target.value\n                      setEmailConfig(prev => ({ ...prev, forwardTo: email }))\n                      // Auto-populate name field if it's empty or matches the previous email\n                      if (!formData.name.trim() || formData.name === emailConfig.forwardTo) {\n                        setFormData(prev => ({ ...prev, name: email }))\n                      }\n                    }}\n                    placeholder=\"support@yourcompany.com\"\n                    className={errors.forwardTo ? 'border-red-500' : ''}\n                    autoFocus\n                  />\n                  {errors.forwardTo && <p className=\"text-sm text-red-500\">{errors.forwardTo}</p>}\n                </div>\n              )}\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Name *</Label>\n                <Input\n                  id=\"name\"\n                  value={formData.name}\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                  placeholder={`${selectedType === 'webhook' ? 'Production Webhook' : selectedType === 'email' ? 'Auto-filled from email above' : 'Team Email Group'}`}\n                  className={errors.name ? 'border-red-500' : ''}\n                  autoFocus={selectedType !== 'email'}\n                />\n                {errors.name && <p className=\"text-sm text-red-500\">{errors.name}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea\n                  id=\"description\"\n                  value={formData.description}\n                  onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                  placeholder=\"Optional description of this endpoint's purpose\"\n                  rows={3}\n                />\n              </div>\n\n              {/* For email forwards, show additional config options */}\n              {selectedType === 'email' && (\n                <>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"subjectPrefixBasic\">Subject Prefix</Label>\n                    <Input\n                      id=\"subjectPrefixBasic\"\n                      value={emailConfig.subjectPrefix}\n                      onChange={(e) => setEmailConfig(prev => ({ ...prev, subjectPrefix: e.target.value }))}\n                      placeholder=\"[Forwarded] \"\n                    />\n                    <p className=\"text-xs text-muted-foreground\">\n                      Optional prefix to add to forwarded email subjects\n                    </p>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 bg-muted rounded-lg\">\n                    <div>\n                      <Label className=\"text-sm font-medium\">Include Attachments</Label>\n                      <p className=\"text-xs text-muted-foreground\">Forward email attachments</p>\n                    </div>\n                    <Switch\n                      checked={emailConfig.includeAttachments}\n                      onCheckedChange={(checked) => setEmailConfig(prev => ({ ...prev, includeAttachments: checked }))}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n\n          {/* Step 3: Configuration */}\n          {currentStep === 'config' && selectedType && (\n            <div className=\"space-y-4\">\n              {selectedType === 'webhook' && (\n                <>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"url\">URL *</Label>\n                    <Input\n                      id=\"url\"\n                      type=\"url\"\n                      value={webhookConfig.url}\n                      onChange={(e) => setWebhookConfig(prev => ({ ...prev, url: e.target.value }))}\n                      placeholder=\"https://your-app.com/webhooks/inbound\"\n                      className={errors.url ? 'border-red-500' : ''}\n                      autoFocus\n                    />\n                    {errors.url && <p className=\"text-sm text-red-500\">{errors.url}</p>}\n                  </div>\n\n                  <div className=\"space-y-3\">\n                    <Label>Webhook Format</Label>\n                    <div className=\"grid gap-3\">\n                      {Object.entries(WEBHOOK_FORMAT_CONFIGS).map(([format, config]) => {\n                        const isDisabled = format === 'slack'\n                        return (\n                        <div\n                          key={format}\n                          className={`relative rounded-lg border p-4 transition-all ${\n                            isDisabled \n                              ? 'border-border bg-muted cursor-not-allowed opacity-60'\n                              : webhookFormat === format\n                                ? 'border-primary bg-primary/5 ring-1 ring-primary cursor-pointer'\n                                : 'border-border hover:border-border/80 cursor-pointer'\n                          }`}\n                          onClick={() => !isDisabled && setWebhookFormat(format as WebhookFormat)}\n                        >\n                          <div className=\"flex items-start gap-3\">\n                            <div className={`mt-0.5 h-4 w-4 rounded-full border-2 transition-colors ${\n                               isDisabled\n                                 ? 'border-muted-foreground bg-muted'\n                                 : webhookFormat === format\n                                   ? 'border-primary bg-primary'\n                                   : 'border-muted-foreground'\n                             }`}>\n                              {webhookFormat === format && !isDisabled && (\n                                 <div className=\"h-full w-full rounded-full bg-background scale-50\" />\n                               )}\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <h4 className=\"font-medium text-foreground\">{config.name}</h4>\n                              <p className=\"text-sm text-muted-foreground mt-1\">{config.description}</p>\n                              {format === 'discord' && (\n                                <div className=\"mt-2 text-xs text-muted-foreground\">\n                                  Perfect for Discord channels with rich embeds\n                                </div>\n                              )}\n                              {format === 'slack' && (\n                                <div className=\"mt-2 text-xs text-muted-foreground\">\n                                  Coming soon - Slack-compatible format\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                       )\n                       })}\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"timeout\">Timeout (seconds)</Label>\n                      <Input\n                        id=\"timeout\"\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"300\"\n                        value={webhookConfig.timeout || ''}\n                        onChange={(e) => setWebhookConfig(prev => ({ ...prev, timeout: parseInt(e.target.value) || 30 }))}\n                        className={errors.timeout ? 'border-red-500' : ''}\n                      />\n                      {errors.timeout && <p className=\"text-sm text-red-500\">{errors.timeout}</p>}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"retryAttempts\">Retry Attempts</Label>\n                      <Input\n                        id=\"retryAttempts\"\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={webhookConfig.retryAttempts || ''}\n                        onChange={(e) => setWebhookConfig(prev => ({ ...prev, retryAttempts: parseInt(e.target.value) || 3 }))}\n                        className={errors.retryAttempts ? 'border-red-500' : ''}\n                      />\n                      {errors.retryAttempts && <p className=\"text-sm text-red-500\">{errors.retryAttempts}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label>Custom Headers (Optional)</Label>\n                    <div className=\"flex gap-2\">\n                      <Input\n                        placeholder=\"Header name\"\n                        value={headerKey}\n                        onChange={(e) => setHeaderKey(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), addHeader())}\n                      />\n                      <Input\n                        placeholder=\"Header value\"\n                        value={headerValue}\n                        onChange={(e) => setHeaderValue(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), addHeader())}\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        onClick={addHeader}\n                        disabled={!headerKey.trim() || !headerValue.trim()}\n                      >\n                        <CirclePlus className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                    \n                    {Object.entries(webhookConfig.headers || {}).length > 0 && (\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {Object.entries(webhookConfig.headers || {}).map(([key, value]) => (\n                          <Badge key={key} variant=\"secondary\" className=\"text-xs\">\n                            {key}: {value}\n                            <button\n                              type=\"button\"\n                              onClick={() => removeHeader(key)}\n                              className=\"ml-1 hover:text-red-500\"\n                            >\n                              <TabClose className=\"h-3 w-3\" />\n                            </button>\n                          </Badge>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </>\n              )}\n\n              {selectedType === 'email' && (\n                <div className=\"text-center py-8\">\n                  <div className=\"flex items-center justify-center w-16 h-16 rounded-full bg-blue-100 dark:bg-blue-900/20 mx-auto mb-4\">\n                    <Envelope2 className=\"h-8 w-8 text-blue-600 dark:text-blue-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-foreground mb-2\">Email Forward Ready</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">\n                    Your email forward is configured and ready to create.\n                  </p>\n                  <div className=\"bg-muted rounded-lg p-4 text-left\">\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm font-medium\">Forward to:</span>\n                        <span className=\"text-sm font-mono\">{emailConfig.forwardTo}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm font-medium\">Name:</span>\n                        <span className=\"text-sm\">{formData.name}</span>\n                      </div>\n                      {formData.description && (\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm font-medium\">Description:</span>\n                          <span className=\"text-sm\">{formData.description}</span>\n                        </div>\n                      )}\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm font-medium\">Include attachments:</span>\n                        <span className=\"text-sm\">{emailConfig.includeAttachments ? 'Yes' : 'No'}</span>\n                      </div>\n                      {emailConfig.subjectPrefix && (\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm font-medium\">Subject prefix:</span>\n                          <span className=\"text-sm font-mono\">{emailConfig.subjectPrefix}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {selectedType === 'email_group' && (\n                <>\n                  <div className=\"space-y-2\">\n                    <Label>Email Recipients *</Label>\n                    <div className=\"flex gap-2\">\n                      <Input\n                        placeholder=\"recipient@example.com\"\n                        value={newEmail}\n                        onChange={(e) => setNewEmail(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), addEmail())}\n                        autoFocus\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        onClick={addEmail}\n                        disabled={!newEmail.trim() || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(newEmail.trim())}\n                      >\n                        <CirclePlus className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                    \n                                      {emailGroupConfig.emails.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 mt-2\">\n                      {emailGroupConfig.emails.map((email) => (\n                        <Badge key={email} variant=\"secondary\" className=\"text-xs\">\n                          {email}\n                          <button\n                            type=\"button\"\n                            onClick={() => removeEmail(email)}\n                            className=\"ml-1 hover:text-red-500\"\n                          >\n                            <TabClose className=\"h-3 w-3\" />\n                          </button>\n                        </Badge>\n                      ))}\n                    </div>\n                  )}\n                  {errors.emails && <p className=\"text-sm text-red-500\">{errors.emails}</p>}\n                </div>\n\n                {/* Subject Prefix */}\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"subjectPrefix\">Subject Prefix</Label>\n                  <Input\n                    id=\"subjectPrefix\"\n                    value={emailGroupConfig.subjectPrefix}\n                    onChange={(e) => setEmailGroupConfig(prev => ({ ...prev, subjectPrefix: e.target.value }))}\n                    placeholder=\"[Forwarded] \"\n                  />\n                  <p className=\"text-xs text-muted-foreground\">\n                    Optional prefix to add to forwarded email subjects\n                  </p>\n                </div>\n\n                  {/* Include Attachments */}\n                  <div className=\"flex items-center justify-between p-3 bg-muted rounded-lg\">\n                    <div>\n                      <Label className=\"text-sm font-medium\">Include Attachments</Label>\n                      <p className=\"text-xs text-muted-foreground\">Forward email attachments</p>\n                    </div>\n                    <Switch\n                      checked={emailGroupConfig.includeAttachments}\n                      onCheckedChange={(checked) => setEmailGroupConfig(prev => ({ ...prev, includeAttachments: checked }))}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n        </form>\n\n        <DialogFooter className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {currentStep !== 'type' && (\n              <Button variant=\"secondary\" onClick={handlePrevious} tabIndex={0}>\n                <ArrowBoldLeft className=\"h-4 w-4 mr-1\" />\n                Previous\n              </Button>\n            )}\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button variant=\"secondary\" onClick={handleClose} tabIndex={0}>\n              Cancel\n            </Button>\n            {currentStep === 'config' ? (\n              <Button\n                type=\"submit\"\n                form=\"endpoint-form\"\n                onClick={handleSubmit}\n                disabled={createEndpointMutation.isPending || !selectedType}\n                variant=\"primary\"\n                tabIndex={0}\n              >\n                {createEndpointMutation.isPending ? 'Creating...' : 'Create Endpoint'}\n              </Button>\n            ) : (\n              <Button\n                onClick={handleNext}\n                disabled={!canProceedToNextStep()}\n                tabIndex={0}\n              >\n                Next\n                <ArrowBoldRight className=\"h-4 w-4 ml-1\" />\n              </Button>\n            )}\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n} ","\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { useUpdateEndpointMutation } from '@/features/endpoints/hooks'\nimport { useDomainsStatsQuery } from '@/features/domains/hooks/useDomainsQuery'\nimport { Endpoint, UpdateEndpointData, WebhookConfig, EmailForwardConfig, EmailGroupConfig } from '@/features/endpoints/types'\nimport { WEBHOOK_FORMAT_CONFIGS, getWebhookFormatConfig } from '@/lib/webhooks/webhook-formats'\nimport type { WebhookFormat } from '@/lib/db/schema'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Switch } from '@/components/ui/switch'\nimport Gear2 from '@/components/icons/gear-2'\nimport TabClose from '@/components/icons/tab-close'\nimport CirclePlus from '@/components/icons/circle-plus'\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport UserGroup from '@/components/icons/user-group'\nimport { toast } from 'sonner'\n\ninterface EditEndpointDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  endpoint: Endpoint | null\n}\n\nexport function EditEndpointDialog({ open, onOpenChange, endpoint }: EditEndpointDialogProps) {\n  const [formData, setFormData] = useState<UpdateEndpointData>({\n    name: '',\n    description: '',\n    isActive: true\n  })\n  \n  const [webhookFormat, setWebhookFormat] = useState<WebhookFormat>('inbound')\n  \n  const [webhookConfig, setWebhookConfig] = useState<WebhookConfig>({\n    url: '',\n    timeout: 30,\n    retryAttempts: 3,\n    headers: {}\n  })\n  const [headerKey, setHeaderKey] = useState('')\n  const [headerValue, setHeaderValue] = useState('')\n  \n  const [emailConfig, setEmailConfig] = useState<EmailForwardConfig>({\n    forwardTo: '',\n    includeAttachments: true,\n    subjectPrefix: '',\n    fromAddress: ''\n  })\n  \n  const [emailGroupConfig, setEmailGroupConfig] = useState<EmailGroupConfig>({\n    emails: [],\n    includeAttachments: true,\n    subjectPrefix: '',\n    fromAddress: ''\n  })\n  const [newEmail, setNewEmail] = useState('')\n  \n  const [errors, setErrors] = useState<Record<string, string>>({})\n\n  const updateEndpointMutation = useUpdateEndpointMutation()\n  const { data: domainsData } = useDomainsStatsQuery()\n\n  const verifiedDomains = domainsData?.domains?.filter(domain => domain.isVerified) || []\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === 'Enter') {\n        event.preventDefault()\n        if (!updateEndpointMutation.isPending && endpoint && validateForm()) {\n          handleSubmit(event as any)\n        }\n      }\n    }\n\n    if (open) {\n      document.addEventListener('keydown', handleKeyDown)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [open, updateEndpointMutation.isPending, endpoint, formData, webhookConfig, emailConfig, emailGroupConfig])\n\n  useEffect(() => {\n    if (endpoint && open) {\n      // Reset form data when endpoint changes and dialog is open\n      setFormData({\n        name: endpoint.name,\n        description: endpoint.description || '',\n        isActive: endpoint.isActive ?? true\n      })\n\n      // Set webhook format from endpoint\n      if (endpoint.type === 'webhook') {\n        setWebhookFormat((endpoint.webhookFormat as WebhookFormat) || 'inbound')\n      }\n\n      let parsedConfig = {}\n      if (endpoint.config) {\n        try {\n          parsedConfig = JSON.parse(endpoint.config)\n        } catch (e) {\n          console.error('Failed to parse endpoint config:', e)\n          parsedConfig = {}\n        }\n      }\n\n      if (endpoint.type === 'webhook') {\n        setWebhookConfig({\n          url: (parsedConfig as WebhookConfig).url || '',\n          timeout: (parsedConfig as WebhookConfig).timeout || 30,\n          retryAttempts: (parsedConfig as WebhookConfig).retryAttempts || 3,\n          headers: (parsedConfig as WebhookConfig).headers || {}\n        })\n      } else if (endpoint.type === 'email') {\n        setEmailConfig({\n          forwardTo: (parsedConfig as EmailForwardConfig).forwardTo || '',\n          includeAttachments: (parsedConfig as EmailForwardConfig).includeAttachments ?? true,\n          subjectPrefix: (parsedConfig as EmailForwardConfig).subjectPrefix || '',\n          fromAddress: (parsedConfig as EmailForwardConfig).fromAddress || ''\n        })\n      } else if (endpoint.type === 'email_group') {\n        setEmailGroupConfig({\n          emails: (parsedConfig as EmailGroupConfig).emails || [],\n          includeAttachments: (parsedConfig as EmailGroupConfig).includeAttachments ?? true,\n          subjectPrefix: (parsedConfig as EmailGroupConfig).subjectPrefix || '',\n          fromAddress: (parsedConfig as EmailGroupConfig).fromAddress || ''\n        })\n      }\n      \n      // Clear any previous errors\n      setErrors({})\n    }\n  }, [endpoint, open])\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.name?.trim()) {\n      newErrors.name = 'Name is required'\n    }\n\n    if (!endpoint) {\n      setErrors(newErrors)\n      return false\n    }\n\n    if (endpoint.type === 'webhook') {\n      if (!webhookConfig.url.trim()) {\n        newErrors.url = 'URL is required'\n      } else {\n        try {\n          new URL(webhookConfig.url)\n        } catch {\n          newErrors.url = 'Please enter a valid URL'\n        }\n      }\n\n      if (webhookConfig.timeout && (webhookConfig.timeout < 1 || webhookConfig.timeout > 300)) {\n        newErrors.timeout = 'Timeout must be between 1 and 300 seconds'\n      }\n\n      if (webhookConfig.retryAttempts && (webhookConfig.retryAttempts < 0 || webhookConfig.retryAttempts > 10)) {\n        newErrors.retryAttempts = 'Retry attempts must be between 0 and 10'\n      }\n    }\n\n    if (endpoint.type === 'email') {\n      if (!emailConfig.forwardTo.trim()) {\n        newErrors.forwardTo = 'Forward to email is required'\n      } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailConfig.forwardTo)) {\n        newErrors.forwardTo = 'Please enter a valid email address'\n      }\n    }\n\n    if (endpoint.type === 'email_group') {\n      if (emailGroupConfig.emails.length === 0) {\n        newErrors.emails = 'At least one email address is required'\n      }\n    }\n\n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!endpoint || !validateForm()) {\n      return\n    }\n\n    let config: WebhookConfig | EmailForwardConfig | EmailGroupConfig\n\n    switch (endpoint.type) {\n      case 'webhook':\n        config = webhookConfig\n        break\n      case 'email':\n        config = emailConfig\n        break\n      case 'email_group':\n        config = emailGroupConfig\n        break\n      default:\n        return\n    }\n\n    const updateData: UpdateEndpointData = {\n      ...formData,\n      webhookFormat: endpoint.type === 'webhook' ? webhookFormat : undefined,\n      config\n    }\n\n    try {\n      await updateEndpointMutation.mutateAsync({\n        id: endpoint.id,\n        data: updateData\n      })\n      toast.success('Endpoint updated successfully!')\n      handleClose()\n    } catch (error) {\n      toast.error(error instanceof Error ? error.message : 'Failed to update endpoint')\n    }\n  }\n\n  const handleClose = () => {\n    // Only clear temporary input fields, not the main form data\n    setHeaderKey('')\n    setHeaderValue('')\n    setNewEmail('')\n    setErrors({})\n    onOpenChange(false)\n  }\n\n  const addHeader = () => {\n    if (headerKey.trim() && headerValue.trim()) {\n      setWebhookConfig(prev => ({\n        ...prev,\n        headers: {\n          ...prev.headers,\n          [headerKey.trim()]: headerValue.trim()\n        }\n      }))\n      setHeaderKey('')\n      setHeaderValue('')\n    }\n  }\n\n  const removeHeader = (key: string) => {\n    setWebhookConfig(prev => {\n      const newHeaders = { ...prev.headers }\n      delete newHeaders[key]\n      return {\n        ...prev,\n        headers: newHeaders\n      }\n    })\n  }\n\n  const addEmail = () => {\n    if (newEmail.trim() && /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(newEmail.trim())) {\n      if (!emailGroupConfig.emails.includes(newEmail.trim())) {\n        setEmailGroupConfig(prev => ({\n          ...prev,\n          emails: [...prev.emails, newEmail.trim()]\n        }))\n        setNewEmail('')\n      }\n    }\n  }\n\n  const removeEmail = (email: string) => {\n    setEmailGroupConfig(prev => ({\n      ...prev,\n      emails: prev.emails.filter(e => e !== email)\n    }))\n  }\n\n  const getDialogIcon = () => {\n    switch (endpoint?.type) {\n      case 'webhook':\n        return { icon: BoltLightning, color: 'purple' }\n      case 'email':\n        return { icon: Envelope2, color: 'blue' }\n      case 'email_group':\n        return { icon: UserGroup, color: 'green' }\n      default:\n        return { icon: Gear2, color: 'gray' }\n    }\n  }\n\n  if (!endpoint) return null\n\n  const { icon: DialogIcon, color } = getDialogIcon()\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-muted\">\n              <DialogIcon className=\"h-4 w-4 text-muted-foreground\" />\n            </div>\n            Edit Endpoint\n          </DialogTitle>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"flex items-center justify-between p-3 bg-muted rounded-lg\">\n            <div>\n              <Label className=\"text-sm font-medium\">Status</Label>\n              <p className=\"text-xs text-muted-foreground\">Enable or disable this endpoint</p>\n            </div>\n            <Switch\n              checked={formData.isActive}\n              onCheckedChange={(checked) => setFormData(prev => ({ ...prev, isActive: checked }))}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Left Column - Basic Info */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-sm font-medium text-foreground border-b border-border pb-2\">Basic Information</h3>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Name *</Label>\n                <Input\n                  id=\"name\"\n                  value={formData.name || ''}\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                  placeholder={`${endpoint.type === 'webhook' ? 'Production Webhook' : endpoint.type === 'email' ? 'Support Email Forward' : 'Team Email Group'}`}\n                  className={errors.name ? 'border-red-500' : ''}\n                />\n                {errors.name && <p className=\"text-sm text-red-500\">{errors.name}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea\n                  id=\"description\"\n                  value={formData.description || ''}\n                  onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                  placeholder=\"Optional description of this endpoint's purpose\"\n                  rows={3}\n                />\n              </div>\n\n              {endpoint.type === 'webhook' && (\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"url\">URL *</Label>\n                  <Input\n                    id=\"url\"\n                    type=\"url\"\n                    value={webhookConfig.url || ''}\n                    onChange={(e) => setWebhookConfig(prev => ({ ...prev, url: e.target.value }))}\n                    placeholder=\"https://your-app.com/webhooks/inbound\"\n                    className={errors.url ? 'border-red-500' : ''}\n                  />\n                  {errors.url && <p className=\"text-sm text-red-500\">{errors.url}</p>}\n                </div>\n              )}\n            </div>\n\n            {/* Right Column - Configuration */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-sm font-medium text-foreground border-b border-border pb-2\">Configuration</h3>\n\n              {endpoint.type === 'webhook' && (\n                <>\n                  <div className=\"space-y-3\">\n                    <Label>Webhook Format</Label>\n                    <div className=\"grid gap-3\">\n                      {Object.entries(WEBHOOK_FORMAT_CONFIGS).map(([format, config]) => {\n                        const isDisabled = format === 'slack'\n                        return (\n                        <div\n                          key={format}\n                          className={`relative rounded-lg border p-4 transition-all ${\n                            isDisabled \n                              ? 'border-border bg-muted cursor-not-allowed opacity-60'\n                              : webhookFormat === format\n                                ? 'border-primary bg-accent ring-1 ring-primary cursor-pointer'\n                                : 'border-border hover:border-muted-foreground cursor-pointer'\n                          }`}\n                          onClick={() => !isDisabled && setWebhookFormat(format as WebhookFormat)}\n                        >\n                          <div className=\"flex items-start gap-3\">\n                            <div className={`mt-0.5 h-4 w-4 rounded-full border-2 transition-colors ${\n                              isDisabled\n                                ? 'border-muted-foreground bg-muted'\n                                : webhookFormat === format\n                                  ? 'border-primary bg-primary'\n                                  : 'border-muted-foreground'\n                            }`}>\n                              {webhookFormat === format && !isDisabled && (\n                                <div className=\"h-full w-full rounded-full bg-white scale-50\" />\n                              )}\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <h4 className=\"font-medium text-foreground\">{config.name}</h4>\n                            </div>\n                          </div>\n                        </div>\n                       )\n                       })}\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"timeout\">Timeout (seconds)</Label>\n                      <Input\n                        id=\"timeout\"\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"300\"\n                        value={webhookConfig.timeout || ''}\n                        onChange={(e) => setWebhookConfig(prev => ({ ...prev, timeout: parseInt(e.target.value) || 30 }))}\n                        className={errors.timeout ? 'border-red-500' : ''}\n                      />\n                      {errors.timeout && <p className=\"text-sm text-red-500\">{errors.timeout}</p>}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"retryAttempts\">Retry Attempts</Label>\n                      <Input\n                        id=\"retryAttempts\"\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"10\"\n                        value={webhookConfig.retryAttempts || ''}\n                        onChange={(e) => setWebhookConfig(prev => ({ ...prev, retryAttempts: parseInt(e.target.value) || 3 }))}\n                        className={errors.retryAttempts ? 'border-red-500' : ''}\n                      />\n                      {errors.retryAttempts && <p className=\"text-sm text-red-500\">{errors.retryAttempts}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label>Custom Headers</Label>\n                    <div className=\"flex gap-2\">\n                      <Input\n                        placeholder=\"Header name\"\n                        value={headerKey}\n                        onChange={(e) => setHeaderKey(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), addHeader())}\n                      />\n                      <Input\n                        placeholder=\"Header value\"\n                        value={headerValue}\n                        onChange={(e) => setHeaderValue(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), addHeader())}\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        onClick={addHeader}\n                        disabled={!headerKey.trim() || !headerValue.trim()}\n                      >\n                        <CirclePlus className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                    \n                    {Object.entries(webhookConfig.headers || {}).length > 0 && (\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {Object.entries(webhookConfig.headers || {}).map(([key, value]) => (\n                          <Badge key={key} variant=\"secondary\" className=\"text-xs\">\n                            {key}: {value}\n                            <button\n                              type=\"button\"\n                              onClick={() => removeHeader(key)}\n                              className=\"ml-1 hover:text-red-500\"\n                            >\n                              <TabClose className=\"h-3 w-3\" />\n                            </button>\n                          </Badge>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </>\n              )}\n\n              {endpoint.type === 'email' && (\n                <>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"forwardTo\">Forward To Email *</Label>\n                    <Input\n                      id=\"forwardTo\"\n                      type=\"email\"\n                      value={emailConfig.forwardTo || ''}\n                      onChange={(e) => setEmailConfig(prev => ({ ...prev, forwardTo: e.target.value }))}\n                      placeholder=\"support@yourcompany.com\"\n                      className={errors.forwardTo ? 'border-red-500' : ''}\n                    />\n                    {errors.forwardTo && <p className=\"text-sm text-red-500\">{errors.forwardTo}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fromAddress\">From Address</Label>\n                    <Select\n                      value={emailConfig.fromAddress || 'auto-detect'}\n                      onValueChange={(value) => setEmailConfig(prev => ({ \n                        ...prev, \n                        fromAddress: value === 'auto-detect' ? '' : value \n                      }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Auto-detect from domain\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"auto-detect\">Auto-detect from domain</SelectItem>\n                        {verifiedDomains.map((domain) => (\n                          <SelectItem key={domain.id} value={`noreply@${domain.domain}`}>\n                            noreply@{domain.domain}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"subjectPrefix\">Subject Prefix</Label>\n                    <Input\n                      id=\"subjectPrefix\"\n                      value={emailConfig.subjectPrefix || ''}\n                      onChange={(e) => setEmailConfig(prev => ({ ...prev, subjectPrefix: e.target.value }))}\n                      placeholder=\"[Support]\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"includeAttachments\"\n                      checked={emailConfig.includeAttachments}\n                      onCheckedChange={(checked) => setEmailConfig(prev => ({ ...prev, includeAttachments: checked }))}\n                    />\n                    <Label htmlFor=\"includeAttachments\">Include attachments</Label>\n                  </div>\n                </>\n              )}\n\n              {endpoint.type === 'email_group' && (\n                <>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"emails\">Email Addresses *</Label>\n                    <div className=\"flex gap-2\">\n                      <Input\n                        id=\"emails\"\n                        type=\"email\"\n                        placeholder=\"team@yourcompany.com\"\n                        value={newEmail}\n                        onChange={(e) => setNewEmail(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && (e.preventDefault(), addEmail())}\n                      />\n                      <Button\n                        type=\"button\"\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        onClick={addEmail}\n                        disabled={!newEmail.trim() || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(newEmail.trim())}\n                      >\n                        <CirclePlus className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                    \n                    {emailGroupConfig.emails.length > 0 && (\n                      <div className=\"flex flex-wrap gap-2 mt-2\">\n                        {emailGroupConfig.emails.map((email) => (\n                          <Badge key={email} variant=\"secondary\" className=\"text-xs\">\n                            {email}\n                            <button\n                              type=\"button\"\n                              onClick={() => removeEmail(email)}\n                              className=\"ml-1 hover:text-red-500\"\n                            >\n                              <TabClose className=\"h-3 w-3\" />\n                            </button>\n                          </Badge>\n                        ))}\n                      </div>\n                    )}\n                    {errors.emails && <p className=\"text-sm text-red-500\">{errors.emails}</p>}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"fromAddressGroup\">From Address</Label>\n                    <Select\n                      value={emailGroupConfig.fromAddress || 'auto-detect'}\n                      onValueChange={(value) => setEmailGroupConfig(prev => ({ \n                        ...prev, \n                        fromAddress: value === 'auto-detect' ? '' : value \n                      }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Auto-detect from domain\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"auto-detect\">Auto-detect from domain</SelectItem>\n                        {verifiedDomains.map((domain) => (\n                          <SelectItem key={domain.id} value={`noreply@${domain.domain}`}>\n                            noreply@{domain.domain}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"subjectPrefixGroup\">Subject Prefix</Label>\n                    <Input\n                      id=\"subjectPrefixGroup\"\n                      value={emailGroupConfig.subjectPrefix || ''}\n                      onChange={(e) => setEmailGroupConfig(prev => ({ ...prev, subjectPrefix: e.target.value }))}\n                      placeholder=\"[Team]\"\n                    />\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"includeAttachmentsGroup\"\n                      checked={emailGroupConfig.includeAttachments}\n                      onCheckedChange={(checked) => setEmailGroupConfig(prev => ({ ...prev, includeAttachments: checked }))}\n                    />\n                    <Label htmlFor=\"includeAttachmentsGroup\">Include attachments</Label>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </form>\n\n        <DialogFooter className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-muted-foreground\">\n            Press Cmd+Enter to submit\n          </span>\n          <div className=\"flex gap-2\">\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={updateEndpointMutation.isPending}\n            >\n              {updateEndpointMutation.isPending ? 'Updating...' : 'Update Endpoint'}\n            </Button>\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n} ","\"use client\"\n\nimport { useEffect } from 'react'\nimport { useDeleteEndpointMutation } from '@/features/endpoints/hooks'\nimport { Endpoint } from '@/features/endpoints/types'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport CircleWarning2 from '@/components/icons/circle-warning-2'\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport UserGroup from '@/components/icons/user-group'\nimport { toast } from 'sonner'\n\ninterface DeleteEndpointDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  endpoint: Endpoint | null\n}\n\nexport function DeleteEndpointDialog({ open, onOpenChange, endpoint }: DeleteEndpointDialogProps) {\n  const deleteEndpointMutation = useDeleteEndpointMutation()\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === 'Enter') {\n        event.preventDefault()\n        if (!deleteEndpointMutation.isPending && endpoint) {\n          handleDelete()\n        }\n      }\n    }\n\n    if (open) {\n      document.addEventListener('keydown', handleKeyDown)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [open, deleteEndpointMutation.isPending, endpoint])\n\n  const handleDelete = async () => {\n    if (!endpoint) return\n\n    try {\n      const result = await deleteEndpointMutation.mutateAsync(endpoint.id)\n      \n      // Show success message with cleanup info if available\n      if (result?.message) {\n        toast.success(result.message)\n      } else {\n        toast.success('Endpoint deleted successfully!')\n      }\n      \n      onOpenChange(false)\n    } catch (error) {\n      toast.error(error instanceof Error ? error.message : 'Failed to delete endpoint')\n    }\n  }\n\n  const getEndpointIcon = () => {\n    switch (endpoint?.type) {\n      case 'webhook':\n        return BoltLightning\n      case 'email':\n        return Envelope2\n      case 'email_group':\n        return UserGroup\n      default:\n        return CircleWarning2\n    }\n  }\n\n  const getEndpointTypeLabel = () => {\n    switch (endpoint?.type) {\n      case 'webhook':\n        return 'Webhook'\n      case 'email':\n        return 'Email Forward'\n      case 'email_group':\n        return 'Email Group'\n      default:\n        return 'Endpoint'\n    }\n  }\n\n  const getConfigSummary = () => {\n    if (!endpoint?.config) return null\n\n    try {\n      const config = JSON.parse(endpoint.config)\n      \n      switch (endpoint.type) {\n        case 'webhook':\n          return config.url\n        case 'email':\n          return `â†’ ${config.forwardTo}`\n        case 'email_group':\n          return `â†’ ${config.emails?.length || 0} recipients`\n        default:\n          return null\n      }\n    } catch {\n      return null\n    }\n  }\n\n  if (!endpoint) return null\n\n  const EndpointIcon = getEndpointIcon()\n  const configSummary = getConfigSummary()\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-destructive/20\">\n              <CircleWarning2 className=\"h-4 w-4 text-destructive\" />\n            </div>\n            Delete {getEndpointTypeLabel()}\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          <div className=\"bg-destructive/10 border border-destructive/20 rounded-lg p-4\">\n            <div className=\"flex items-start gap-3\">\n              <CircleWarning2 className=\"h-5 w-5 text-destructive mt-0.5 flex-shrink-0\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-destructive mb-1\">\n                  This action cannot be undone\n                </h4>\n                <p className=\"text-sm text-destructive/80\">\n                  Deleting this {getEndpointTypeLabel().toLowerCase()} will permanently remove it and stop all email deliveries to this endpoint.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-muted-foreground\">\n              You are about to delete the {getEndpointTypeLabel().toLowerCase()}:\n            </p>\n            <div className=\"bg-muted rounded-lg p-3 border border-border\">\n              <div className=\"flex items-center gap-2 mb-1\">\n                <EndpointIcon className=\"h-4 w-4 text-muted-foreground\" />\n                <div className=\"font-medium text-foreground\">{endpoint.name}</div>\n                <span className=\"text-xs px-2 py-1 bg-muted text-muted-foreground rounded-full\">\n                  {getEndpointTypeLabel()}\n                </span>\n              </div>\n              {configSummary && (\n                <div className=\"text-sm text-muted-foreground font-mono\">{configSummary}</div>\n              )}\n              {endpoint.description && (\n                <div className=\"text-sm text-muted-foreground mt-1\">{endpoint.description}</div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n            <p className=\"text-sm text-yellow-800\">\n              <strong>Note:</strong> Any email addresses using this endpoint will be automatically switched to \"store-only\" mode (emails will be received and stored but not forwarded).\n            </p>\n          </div>\n        </div>\n\n        <DialogFooter className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-muted-foreground\">\n            Press Cmd+Enter to delete\n          </span>\n          <div className=\"flex gap-2\">\n            <Button variant=\"secondary\" onClick={() => onOpenChange(false)}>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleDelete}\n              disabled={deleteEndpointMutation.isPending}\n              variant=\"destructive\"\n            >\n              {deleteEndpointMutation.isPending ? 'Deleting...' : `Delete ${getEndpointTypeLabel()}`}\n            </Button>\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n} ","\"use client\"\n\nimport React from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog'\nimport { useDeleteMultipleEndpointsMutation } from '@/features/endpoints/hooks'\nimport { Endpoint } from '@/features/endpoints/types'\nimport Trash2 from '@/components/icons/trash-2'\nimport CircleWarning2 from '@/components/icons/circle-warning-2'\nimport { toast } from 'sonner'\n\ninterface DeleteMultipleEndpointsDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  endpoints: Endpoint[]\n  onSuccess?: () => void\n}\n\nexport const DeleteMultipleEndpointsDialog: React.FC<DeleteMultipleEndpointsDialogProps> = ({\n  open,\n  onOpenChange,\n  endpoints,\n  onSuccess\n}) => {\n  const deleteMultipleMutation = useDeleteMultipleEndpointsMutation()\n\n  const handleDelete = async () => {\n    try {\n      const endpointIds = endpoints.map(e => e.id)\n      const result = await deleteMultipleMutation.mutateAsync(endpointIds)\n      \n      if (result.success) {\n        // Show enhanced message if available, otherwise use default\n        const message = result.message || `Successfully deleted ${result.deletedCount} endpoint${result.deletedCount !== 1 ? 's' : ''}`\n        toast.success(message)\n        onOpenChange(false)\n        onSuccess?.()\n      } else {\n        toast.error(result.error || 'Failed to delete endpoints')\n      }\n    } catch (error) {\n      console.error('Error deleting endpoints:', error)\n      toast.error('Failed to delete endpoints')\n    }\n  }\n\n  const getEndpointTypeSummary = () => {\n    const types = endpoints.reduce((acc, endpoint) => {\n      acc[endpoint.type] = (acc[endpoint.type] || 0) + 1\n      return acc\n    }, {} as Record<string, number>)\n\n    const summary = Object.entries(types).map(([type, count]) => {\n      const label = type === 'webhook' ? 'webhook' : \n                   type === 'email' ? 'email forward' : \n                   type === 'email_group' ? 'email group' : 'endpoint'\n      return `${count} ${label}${count !== 1 ? 's' : ''}`\n    })\n\n    return summary.join(', ')\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-destructive/20\">\n              <CircleWarning2 className=\"h-6 w-6 text-destructive\" />\n            </div>\n            <div>\n              <DialogTitle>Delete Multiple Endpoints</DialogTitle>\n              <DialogDescription>\n                Are you sure you want to delete {endpoints.length} endpoint{endpoints.length !== 1 ? 's' : ''}?\n              </DialogDescription>\n            </div>\n          </div>\n        </DialogHeader>\n\n        <div className=\"mt-4 p-4 bg-muted rounded-lg\">\n          <div className=\"text-sm text-foreground\">\n            <div className=\"font-medium mb-2\">You are about to delete:</div>\n            <div className=\"text-muted-foreground\">{getEndpointTypeSummary()}</div>\n            <div className=\"mt-3 space-y-1\">\n              {endpoints.slice(0, 5).map((endpoint) => (\n                <div key={endpoint.id} className=\"text-xs text-muted-foreground font-mono\">\n                  â€¢ {endpoint.name}\n                </div>\n              ))}\n              {endpoints.length > 5 && (\n                <div className=\"text-xs text-muted-foreground\">\n                  ... and {endpoints.length - 5} more\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-4 p-4 bg-destructive/10 border border-destructive/20 rounded-lg\">\n          <div className=\"flex items-start gap-3\">\n            <CircleWarning2 className=\"h-5 w-5 text-destructive mt-0.5 flex-shrink-0\" />\n            <div>\n              <h4 className=\"text-sm font-medium text-destructive mb-1\">\n                This action cannot be undone\n              </h4>\n              <p className=\"text-sm text-destructive/80\">\n                Deleting these endpoints will permanently remove them and stop all email deliveries to these endpoints.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"secondary\" onClick={() => onOpenChange(false)}>\n            Cancel\n          </Button>\n          <Button\n            onClick={handleDelete}\n            disabled={deleteMultipleMutation.isPending}\n            variant=\"destructive\"\n          >\n            {deleteMultipleMutation.isPending ? 'Deleting...' : `Delete ${endpoints.length} Endpoint${endpoints.length !== 1 ? 's' : ''}`}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n} ","\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { useTestEndpointMutation, type WebhookFormat, type TestEndpointResponse } from '@/features/endpoints/hooks'\nimport { Endpoint } from '@/features/endpoints/types'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Label } from '@/components/ui/label'\nimport CirclePlay from '@/components/icons/circle-play'\nimport CircleCheck from '@/components/icons/circle-check'\nimport TabClose from '@/components/icons/tab-close'\nimport Clock2 from '@/components/icons/clock-2'\nimport CircleWarning2 from '@/components/icons/circle-warning-2'\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport UserGroup from '@/components/icons/user-group'\nimport { toast } from 'sonner'\n\ninterface TestResult extends TestEndpointResponse {\n  timestamp: Date\n}\n\ninterface TestEndpointDialogProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  endpoint: Endpoint | null\n}\n\nexport function TestEndpointDialog({ open, onOpenChange, endpoint }: TestEndpointDialogProps) {\n  const [testResult, setTestResult] = useState<TestResult | null>(null)\n  const [selectedWebhookFormat, setSelectedWebhookFormat] = useState<WebhookFormat>('inbound')\n  const testEndpointMutation = useTestEndpointMutation()\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if ((event.metaKey || event.ctrlKey) && event.key === 'Enter') {\n        event.preventDefault()\n        if (!testEndpointMutation.isPending && endpoint?.isActive) {\n          handleTest()\n        }\n      }\n    }\n\n    if (open) {\n      document.addEventListener('keydown', handleKeyDown)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [open, testEndpointMutation.isPending, endpoint])\n\n  const handleTest = async () => {\n    if (!endpoint) return\n\n    try {\n      setTestResult(null)\n      const result = await testEndpointMutation.mutateAsync({\n        id: endpoint.id,\n        webhookFormat: endpoint.type === 'webhook' ? selectedWebhookFormat : undefined\n      })\n      \n      setTestResult({\n        ...result,\n        timestamp: new Date()\n      })\n\n      if (result.success) {\n        toast.success('Endpoint test completed successfully!')\n      } else {\n        toast.error(result.message || 'Endpoint test failed')\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Test failed'\n      setTestResult({\n        success: false,\n        message: errorMessage,\n        responseTime: 0,\n        error: errorMessage,\n        timestamp: new Date()\n      })\n      toast.error(errorMessage)\n    }\n  }\n\n  const handleClose = () => {\n    setTestResult(null)\n    onOpenChange(false)\n  }\n\n  const getEndpointIcon = () => {\n    switch (endpoint?.type) {\n      case 'webhook':\n        return BoltLightning\n      case 'email':\n        return Envelope2\n      case 'email_group':\n        return UserGroup\n      default:\n        return CirclePlay\n    }\n  }\n\n  const getEndpointTypeLabel = () => {\n    switch (endpoint?.type) {\n      case 'webhook':\n        return 'Webhook'\n      case 'email':\n        return 'Email Forward'\n      case 'email_group':\n        return 'Email Group'\n      default:\n        return 'Endpoint'\n    }\n  }\n\n  const getConfigSummary = () => {\n    if (!endpoint?.config) return null\n\n    try {\n      const config = JSON.parse(endpoint.config)\n      \n      switch (endpoint.type) {\n        case 'webhook':\n          return config.url\n        case 'email':\n          return `Forward to: ${config.forwardTo}`\n        case 'email_group':\n          return `Forward to: ${config.emails?.length || 0} recipients`\n        default:\n          return null\n      }\n    } catch {\n      return null\n    }\n  }\n\n  const getTestDescription = () => {\n    switch (endpoint?.type) {\n      case 'webhook':\n        return 'This will send a test HTTP request to your webhook endpoint with the selected format to verify it\\'s working correctly.'\n      case 'email':\n        return 'This will validate the email configuration and verify the forwarding address.'\n      case 'email_group':\n        return 'This will validate the email group configuration and verify all recipient addresses.'\n      default:\n        return 'This will test the endpoint configuration.'\n    }\n  }\n\n  if (!endpoint) return null\n\n  const EndpointIcon = getEndpointIcon()\n  const configSummary = getConfigSummary()\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-lg\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-primary/10\">\n              <CirclePlay width=\"16\" height=\"16\" className=\"text-primary\" />\n            </div>\n            Test {getEndpointTypeLabel()}\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          <div className=\"bg-muted rounded-lg p-4 border border-border\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <EndpointIcon width=\"16\" height=\"16\" className=\"text-muted-foreground\" />\n              <h4 className=\"font-medium text-foreground\">{endpoint.name}</h4>\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                {getEndpointTypeLabel()}\n              </Badge>\n              <Badge \n                className={`text-xs ${\n                  endpoint.isActive \n                    ? 'bg-green-100 text-green-700 border-green-200 dark:bg-green-900/20 dark:text-green-400 dark:border-green-800' \n                    : 'bg-muted text-muted-foreground border-border'\n                }`}\n              >\n                {endpoint.isActive ? 'Active' : 'Inactive'}\n              </Badge>\n            </div>\n            {configSummary && (\n              <p className=\"text-sm text-muted-foreground font-mono break-all\">{configSummary}</p>\n            )}\n            {endpoint.description && (\n              <p className=\"text-sm text-muted-foreground mt-2\">{endpoint.description}</p>\n            )}\n          </div>\n\n          {endpoint.type === 'webhook' && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"webhook-format\" className=\"text-sm font-medium\">\n                Webhook Format\n              </Label>\n              <Select value={selectedWebhookFormat} onValueChange={(value: WebhookFormat) => setSelectedWebhookFormat(value)}>\n                <SelectTrigger id=\"webhook-format\">\n                  <SelectValue placeholder=\"Select webhook format\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"inbound\" className=\"flex flex-col items-start py-3 gap-1\">\n                    <span className=\"font-medium\">Inbound Format</span>\n                    <span className=\"text-xs text-muted-foreground ml-2\">Standard email webhook with full data</span>\n                  </SelectItem>\n                  <SelectItem value=\"discord\" className=\"flex flex-col items-start py-3 gap-1\">\n                    <span className=\"font-medium\">Discord Format</span>\n                    <span className=\"text-xs text-muted-foreground ml-2\">Discord-compatible webhook with rich embeds</span>\n                  </SelectItem>\n                  <SelectItem value=\"slack\" className=\"flex flex-col items-start py-3 gap-1\">\n                    <span className=\"font-medium\">Slack Format</span>\n                    <span className=\"text-xs text-muted-foreground ml-2\">Slack-compatible webhook with attachments</span>\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n\n          {!endpoint.isActive && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3 dark:bg-yellow-900/20 dark:border-yellow-800\">\n              <div className=\"flex items-start gap-2\">\n                <CircleWarning2 width=\"16\" height=\"16\" className=\"text-yellow-600 dark:text-yellow-500 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-400 mb-1\">\n                    Endpoint is disabled\n                  </h4>\n                  <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n                    This endpoint is currently disabled and won't receive real emails. You can still test it, but it won't be triggered by actual email deliveries.\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {testResult && (\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Test Results</h4>\n              <div className={`p-3 rounded-lg border ${\n                testResult.success \n                  ? 'bg-green-50 border-green-200 dark:bg-green-900/20 dark:border-green-800' \n                  : 'bg-destructive/10 border-destructive/20'\n              }`}>\n                <div className=\"flex items-start gap-2\">\n                  {testResult.success ? (\n                    <CircleCheck width=\"16\" height=\"16\" className=\"text-green-600 dark:text-green-400 mt-0.5 flex-shrink-0\" />\n                  ) : (\n                    <TabClose width=\"16\" height=\"16\" className=\"text-destructive mt-0.5 flex-shrink-0\" />\n                  )}\n                  <div className=\"flex-1\">\n                    <div className={`text-sm font-medium mb-1 ${\n                      testResult.success ? 'text-green-800 dark:text-green-400' : 'text-destructive'\n                    }`}>\n                      {testResult.success ? 'Test Successful' : 'Test Failed'}\n                    </div>\n                    {testResult.message && (\n                      <p className={`text-sm ${\n                        testResult.success ? 'text-green-700 dark:text-green-300' : 'text-destructive/80'\n                      }`}>\n                        {testResult.message}\n                      </p>\n                    )}\n                    {testResult.error && (\n                      <p className=\"text-sm text-destructive/80 font-mono mt-1\">\n                        {testResult.error}\n                      </p>\n                    )}\n                    <div className=\"flex items-center gap-4 mt-2 text-xs text-muted-foreground\">\n                      {testResult.statusCode && (\n                        <span>Status: {testResult.statusCode}</span>\n                      )}\n                      {testResult.responseTime !== undefined && (\n                        <span>Response: {testResult.responseTime}ms</span>\n                      )}\n                      {testResult.webhookFormat && (\n                        <span>Format: {testResult.webhookFormat}</span>\n                      )}\n                      <span>\n                        <Clock2 width=\"12\" height=\"12\" className=\"inline mr-1\" />\n                        {testResult.timestamp.toLocaleTimeString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"bg-muted rounded-lg p-3\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <CirclePlay width=\"16\" height=\"16\" className=\"text-muted-foreground\" />\n              <h4 className=\"text-sm font-medium text-foreground\">Test Information</h4>\n            </div>\n            <div className=\"text-sm text-muted-foreground space-y-1\">\n              <p>â€¢ This will send a test email to your endpoint</p>\n              <p>â€¢ The test email contains sample data to verify your endpoint is working</p>\n              <p>â€¢ Check your endpoint logs to see the received data</p>\n              {endpoint.type === 'webhook' && (\n                <>\n                  <p>â€¢ For webhooks, we'll send a POST request with email data in the selected format</p>\n                  <p>â€¢ Inbound format: Full email data with headers and metadata</p>\n                  <p>â€¢ Discord format: Rich embeds compatible with Discord webhooks</p>\n                  <p>â€¢ Slack format: Attachments compatible with Slack webhooks</p>\n                </>\n              )}\n              {(endpoint.type === 'email' || endpoint.type === 'email_group') && (\n                <p>â€¢ For email forwards, we'll validate the configuration without sending actual emails</p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <DialogFooter className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-muted-foreground\">\n            Press Cmd+Enter to test\n          </span>\n          <div className=\"flex gap-2\">\n            <Button variant=\"secondary\" onClick={() => onOpenChange(false)}>\n              Close\n            </Button>\n            <Button\n              onClick={handleTest}\n              disabled={testEndpointMutation.isPending}\n              className=\"bg-primary hover:bg-primary/90 text-primary-foreground\"\n            >\n              {testEndpointMutation.isPending ? 'Testing...' : 'Run Test'}\n            </Button>\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  )\n} ","export { CreateEndpointDialog } from './CreateEndpointDialog'\nexport { EditEndpointDialog } from './EditEndpointDialog'\nexport { DeleteEndpointDialog } from './DeleteEndpointDialog'\nexport { DeleteMultipleEndpointsDialog } from './DeleteMultipleEndpointsDialog'\nexport { TestEndpointDialog } from './TestEndpointDialog'\nexport { EndpointTypeSelector } from './EndpointTypeSelector' ","\"use client\"\n\nimport React, { useState, useEffect, useMemo } from 'react'\nimport { useEndpointsQuery, useMigrationMutation } from '@/features/endpoints/hooks'\nimport { CreateEndpointDialog, EditEndpointDialog, DeleteEndpointDialog, DeleteMultipleEndpointsDialog, TestEndpointDialog } from '@/components/endpoints'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport CircleCheck from '@/components/icons/circle-check'\nimport ObjRemove from '@/components/icons/obj-remove'\nimport CirclePlus from '@/components/icons/circle-plus'\nimport Refresh2 from '@/components/icons/refresh-2'\nimport BoltLightning from '@/components/icons/bolt-lightning'\nimport Envelope2 from '@/components/icons/envelope-2'\nimport UserGroup from '@/components/icons/user-group'\nimport Globe2 from '@/components/icons/globe-2'\nimport CirclePlay from '@/components/icons/circle-play'\nimport Gear2 from '@/components/icons/gear-2'\nimport Trash2 from '@/components/icons/trash-2'\nimport Clipboard2 from '@/components/icons/clipboard-2'\nimport CloudDownload from '@/components/icons/cloud-download'\nimport Magnifier2 from '@/components/icons/magnifier-2'\nimport Filter2 from '@/components/icons/filter-2'\nimport { CustomInboundIcon } from '@/components/icons/customInbound'\nimport { formatDistanceToNow } from 'date-fns'\nimport { toast } from 'sonner'\nimport { Endpoint } from '@/features/endpoints/types'\n\ntype FilterType = 'all' | 'webhook' | 'email' | 'email_group'\ntype FilterStatus = 'all' | 'active' | 'disabled'\n\nexport default function EndpointsPage() {\n  const { data: endpoints = [], isLoading, error, refetch, migrationInProgress, migrationChecked } = useEndpointsQuery()\n  const migrationMutation = useMigrationMutation()\n  const [copiedUrl, setCopiedUrl] = useState<string | null>(null)\n  const [showMigrationSuccess, setShowMigrationSuccess] = useState(false)\n\n  // Search and filter state\n  const [searchQuery, setSearchQuery] = useState('')\n  const [filterType, setFilterType] = useState<FilterType>('all')\n  const [filterStatus, setFilterStatus] = useState<FilterStatus>('all')\n\n  // Selection state\n  const [selectedEndpoints, setSelectedEndpoints] = useState<Set<string>>(new Set())\n  const [selectAll, setSelectAll] = useState(false)\n\n  const [selectedEndpoint, setSelectedEndpoint] = useState<Endpoint | null>(null)\n\n  // Show migration success when automatic migration completes\n  useEffect(() => {\n    if (migrationChecked && !migrationInProgress && endpoints.length > 0) {\n      // Check if any endpoints have the migration description\n      const hasMigratedEndpoints = endpoints.some(endpoint =>\n        endpoint.description?.includes('Migrated from webhook:')\n      )\n      if (hasMigratedEndpoints) {\n        setShowMigrationSuccess(true)\n        // Auto-hide after 10 seconds\n        setTimeout(() => setShowMigrationSuccess(false), 10000)\n      }\n    }\n  }, [migrationChecked, migrationInProgress, endpoints])\n\n  const [createDialogOpen, setCreateDialogOpen] = useState(false)\n  const [editDialogOpen, setEditDialogOpen] = useState(false)\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false)\n  const [deleteMultipleDialogOpen, setDeleteMultipleDialogOpen] = useState(false)\n  const [testDialogOpen, setTestDialogOpen] = useState(false)\n\n  // Memoize getConfigSummary to prevent recreations\n  const getConfigSummary = useMemo(() => {\n    return (endpoint: Endpoint) => {\n      if (!endpoint.config) return null\n\n      try {\n        const config = JSON.parse(endpoint.config)\n\n        switch (endpoint.type) {\n          case 'webhook':\n            return new URL(config.url).hostname\n          case 'email':\n            return config.forwardTo\n          case 'email_group':\n            return `${config.emails?.length || 0} recipients`\n          default:\n            return null\n        }\n      } catch {\n        return null\n      }\n    }\n  }, [])\n\n  // Filter and search endpoints\n  const filteredEndpoints = useMemo(() => {\n    return endpoints.filter(endpoint => {\n      // Search filter\n      const configSummary = getConfigSummary(endpoint)\n      const searchMatch = searchQuery === '' ||\n        endpoint.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        endpoint.description?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        configSummary?.toLowerCase().includes(searchQuery.toLowerCase())\n\n      // Type filter\n      const typeMatch = filterType === 'all' || endpoint.type === filterType\n\n      // Status filter\n      const statusMatch = filterStatus === 'all' ||\n        (filterStatus === 'active' && endpoint.isActive) ||\n        (filterStatus === 'disabled' && !endpoint.isActive)\n\n      return searchMatch && typeMatch && statusMatch\n    })\n  }, [endpoints, searchQuery, filterType, filterStatus, getConfigSummary])\n\n  // Handle select all - simplified to prevent infinite loops\n  useEffect(() => {\n    if (filteredEndpoints.length === 0 && selectedEndpoints.size > 0) {\n      setSelectedEndpoints(new Set())\n      setSelectAll(false)\n    }\n  }, [filteredEndpoints.length, selectedEndpoints.size])\n\n  // Update select all state when selection changes\n  const allSelected = useMemo(() => {\n    if (filteredEndpoints.length === 0) return false\n    return filteredEndpoints.every(endpoint => selectedEndpoints.has(endpoint.id))\n  }, [filteredEndpoints, selectedEndpoints])\n\n  useEffect(() => {\n    setSelectAll(allSelected)\n  }, [allSelected])\n\n  const copyUrl = async (url: string) => {\n    try {\n      await navigator.clipboard.writeText(url)\n      setCopiedUrl(url)\n      setTimeout(() => setCopiedUrl(null), 2000)\n    } catch (err) {\n      console.error(\"Failed to copy URL:\", err)\n    }\n  }\n\n  const handleTestEndpoint = (endpoint: Endpoint) => {\n    setSelectedEndpoint(endpoint)\n    setTestDialogOpen(true)\n  }\n\n  const handleEditEndpoint = (endpoint: Endpoint) => {\n    setSelectedEndpoint(endpoint)\n    setEditDialogOpen(true)\n  }\n\n  const handleDeleteEndpoint = (endpoint: Endpoint) => {\n    setSelectedEndpoint(endpoint)\n    setDeleteDialogOpen(true)\n  }\n\n  const handleSelectEndpoint = (endpointId: string, checked: boolean) => {\n    const newSelected = new Set(selectedEndpoints)\n    if (checked) {\n      newSelected.add(endpointId)\n    } else {\n      newSelected.delete(endpointId)\n    }\n    setSelectedEndpoints(newSelected)\n  }\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      setSelectedEndpoints(new Set(filteredEndpoints.map(e => e.id)))\n    } else {\n      setSelectedEndpoints(new Set())\n    }\n  }\n\n  const handleDeleteMultiple = () => {\n    if (selectedEndpoints.size === 0) {\n      toast.error('No endpoints selected')\n      return\n    }\n    setDeleteMultipleDialogOpen(true)\n  }\n\n  const clearSelection = () => {\n    setSelectedEndpoints(new Set())\n    setSelectAll(false)\n  }\n\n  const getStatusBadge = (endpoint: Endpoint) => {\n    if (endpoint.isActive) {\n      return (\n        <Badge\n          className=\"bg-emerald-500 text-white rounded-full px-0.5 py-0.5 text-xs font-medium shadow-sm\"\n          title=\"Active\"\n        >\n          <CircleCheck width=\"12\" height=\"12\" />\n        </Badge>\n      )\n    } else {\n      return (\n        <Badge\n          className=\"bg-gray-400 text-white rounded-full px-2.5 py-0.5 text-xs font-medium shadow-sm\"\n          title=\"Not Active\"\n        >\n          <ObjRemove width=\"12\" height=\"12\" />\n        </Badge>\n      )\n    }\n  }\n\n  const getEndpointIcon = (endpoint: Endpoint) => {\n    switch (endpoint.type) {\n      case 'webhook':\n        return BoltLightning\n      case 'email':\n        return Envelope2\n      case 'email_group':\n        return UserGroup\n      default:\n        return Globe2\n    }\n  }\n\n  const getEndpointTypeLabel = (endpoint: Endpoint) => {\n    switch (endpoint.type) {\n      case 'webhook':\n        return 'Webhook'\n      case 'email':\n        return 'Email Forward'\n      case 'email_group':\n        return 'Email Group'\n      default:\n        return 'Endpoint'\n    }\n  }\n\n  const getEndpointTypeBadge = (endpoint: Endpoint) => {\n    switch (endpoint.type) {\n      case 'webhook':\n        return (\n          <Badge className=\"bg-purple-500 text-white rounded-full px-2.5 py-0.5 text-xs font-medium shadow-sm pointer-events-none\">\n            Webhook\n          </Badge>\n        )\n      case 'email':\n        return (\n          <Badge className=\"bg-blue-500 text-white rounded-full px-2.5 py-0.5 text-xs font-medium shadow-sm pointer-events-none\">\n            Email Forward\n          </Badge>\n        )\n      case 'email_group':\n        return (\n          <Badge className=\"bg-green-500 text-white rounded-full px-2.5 py-0.5 text-xs font-medium shadow-sm pointer-events-none\">\n            Email Group\n          </Badge>\n        )\n      default:\n        return (\n          <Badge className=\"bg-gray-500 text-white rounded-full px-2.5 py-0.5 text-xs font-medium shadow-sm pointer-events-none\">\n            Endpoint\n          </Badge>\n        )\n    }\n  }\n\n  const getEndpointIconColor = (endpoint: Endpoint) => {\n    if (!endpoint.isActive) return 'hsl(var(--muted-foreground))'\n\n    switch (endpoint.type) {\n      case 'webhook':\n        return 'hsl(262, 83%, 58%)'\n      case 'email':\n        return 'hsl(221, 83%, 53%)'\n      case 'email_group':\n        return 'hsl(142, 76%, 36%)'\n      default:\n        return 'hsl(var(--muted-foreground))'\n    }\n  }\n\n\n\n  const totalEndpoints = endpoints.length\n  const activeEndpoints = endpoints.filter(e => e.isActive).length\n  const webhookCount = endpoints.filter(e => e.type === 'webhook').length\n  const emailCount = endpoints.filter(e => e.type === 'email').length\n  const emailGroupCount = endpoints.filter(e => e.type === 'email_group').length\n\n  const selectedEndpointsArray = endpoints.filter(e => selectedEndpoints.has(e.id))\n\n  if (isLoading || migrationInProgress) {\n    return (\n      <div className=\"min-h-screen p-4 font-outfit\">\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"text-center\">\n              <div className=\"text-muted-foreground mb-2\">\n                {migrationInProgress ? 'Migrating webhooks to endpoints...' : 'Loading endpoints...'}\n              </div>\n              {migrationInProgress && (\n                <div className=\"text-sm text-blue-600\">\n                  We're automatically importing your existing webhooks into the new endpoints system\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen p-4 font-outfit\">\n        <div className=\"max-w-5xl mx-auto\">\n          <Card className=\"border-destructive/50 bg-destructive/10\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center gap-2 text-destructive\">\n                <ObjRemove width=\"16\" height=\"16\" />\n                <span>{error.message}</span>\n                <Button variant=\"ghost\" size=\"sm\" onClick={() => refetch()} className=\"ml-auto text-destructive hover:text-destructive/80\">\n                  Try Again\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"min-h-screen p-4 font-outfit\">\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"flex items-center justify-between rounded-lg mb-6 mt-4\">\n            <div>\n              <h1 className=\"text-2xl font-semibold mb-1\">Endpoint Management</h1>\n              <div className=\"flex items-center gap-4 text-sm\">\n                <span>{totalEndpoints} endpoints</span>\n                <span>{activeEndpoints} active</span>\n                {webhookCount > 0 && (\n                  <span className=\"flex items-center gap-1\">\n                    <BoltLightning width=\"12\" height=\"12\" />\n                    {webhookCount} webhooks\n                  </span>\n                )}\n                {emailCount > 0 && (\n                  <span className=\"flex items-center gap-1\">\n                    <Envelope2 width=\"12\" height=\"12\" />\n                    {emailCount} email forwards\n                  </span>\n                )}\n                {emailGroupCount > 0 && (\n                  <span className=\"flex items-center gap-1\">\n                    <UserGroup width=\"12\" height=\"12\" />\n                    {emailGroupCount} email groups\n                  </span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={() => refetch()}\n                disabled={isLoading}\n                className=\"bg-secondary text-secondary-foreground hover:bg-secondary/80\"\n              >\n                <Refresh2 width=\"12\" height=\"12\" className=\"mr-1\" />\n                Refresh\n              </Button>\n              <Button size=\"sm\" onClick={() => setCreateDialogOpen(true)}>\n                <CirclePlus width=\"12\" height=\"12\" className=\"mr-1\" />\n                Add Endpoint\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"mb-2\">\n            {/* Search and Filter Controls */}\n            <div className=\"flex flex-col sm:flex-row gap-1 mb-2\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Magnifier2 width=\"16\" height=\"16\" className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search endpoints by name, description, or configuration...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 bg-card border-border rounded-xl\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-1\">\n                <Select value={filterType} onValueChange={(value: FilterType) => setFilterType(value)}>\n                  <SelectTrigger className=\"w-40 bg-card border-border rounded-xl\">\n                    <SelectValue placeholder=\"Type\" />\n                  </SelectTrigger>\n                  <SelectContent className=\"bg-card border-border rounded-xl\">\n                    <SelectItem value=\"all\">All Types</SelectItem>\n                    <SelectItem value=\"webhook\">Webhooks</SelectItem>\n                    <SelectItem value=\"email\">Email Forwards</SelectItem>\n                    <SelectItem value=\"email_group\">Email Groups</SelectItem>\n                  </SelectContent>\n                </Select>\n\n                <Select value={filterStatus} onValueChange={(value: FilterStatus) => setFilterStatus(value)}>\n                  <SelectTrigger className=\"w-32 bg-card border-border rounded-xl\">\n                    <SelectValue placeholder=\"Status\" />\n                  </SelectTrigger>\n                  <SelectContent className=\"bg-card border-border rounded-xl\">\n                    <SelectItem value=\"all\">All Status</SelectItem>\n                    <SelectItem value=\"active\">Active</SelectItem>\n                    <SelectItem value=\"disabled\">Disabled</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            {/* Bulk Selection Controls */}\n            {filteredEndpoints.length > 0 && (\n              <Card className=\"bg-card border-border rounded-xl mb-2\">\n                <CardContent className=\"py-2 px-4\">\n                  <div className=\"flex items-center justify-between min-h-[32px]\">\n                    <div className=\"flex items-center gap-2\">\n                      <Checkbox\n                        checked={selectAll}\n                        onCheckedChange={handleSelectAll}\n                        id=\"select-all\"\n                      />\n                      <label htmlFor=\"select-all\" className=\"text-sm font-medium text-foreground cursor-pointer\">\n                        {selectedEndpoints.size > 0\n                          ? `${selectedEndpoints.size} of ${filteredEndpoints.length} endpoints selected`\n                          : `Select all (${filteredEndpoints.length}) endpoints`\n                        }\n                      </label>\n                    </div>\n\n                    <div className={`flex items-center gap-2 transition-opacity duration-200 ${selectedEndpoints.size > 0 ? 'opacity-100' : 'opacity-0 pointer-events-none'\n                      }`}>\n                      <Button\n                        variant=\"secondary\"\n                        size=\"sm\"\n                        onClick={clearSelection}\n                        disabled={selectedEndpoints.size === 0}\n                      >\n                        Clear\n                      </Button>\n                      <Button\n                        variant=\"destructive\"\n                        size=\"sm\"\n                        onClick={handleDeleteMultiple}\n                        className=\"bg-red-600 hover:bg-red-700\"\n                        disabled={selectedEndpoints.size === 0}\n                      >\n                        <Trash2 width=\"12\" height=\"12\" className=\"mr-1\" />\n                        Delete ({selectedEndpoints.size})\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n\n          <hr className=\"my-4 border-border\" />\n\n          <div className=\"space-y-2\">\n            {/* Migration Success Banner */}\n            {showMigrationSuccess && (\n              <Card className=\"bg-green-500/10 border-green-500/50\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <CircleCheck width=\"20\" height=\"20\" className=\"text-green-500\" />\n                    <div className=\"flex-1\">\n                      <h4 className=\"text-sm font-medium text-green-500\">Migration Completed Successfully!</h4>\n                      <p className=\"text-sm text-green-500/80\">Your webhooks have been imported as endpoints. You can now manage all your endpoints in one place.</p>\n                    </div>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setShowMigrationSuccess(false)}\n                      className=\"text-green-500 hover:text-green-500/80\"\n                    >\n                      <ObjRemove width=\"16\" height=\"16\" />\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {filteredEndpoints.length === 0 ? (\n              <Card className=\"bg-card border-border rounded-xl\">\n                <CardContent className=\"p-8\">\n                  <div className=\"text-center\">\n                    <CustomInboundIcon\n                      Icon={searchQuery || filterType !== 'all' || filterStatus !== 'all' ? Magnifier2 : Globe2}\n                      size={48}\n                      backgroundColor=\"hsl(var(--muted-foreground))\"\n                      className=\"mx-auto mb-4\"\n                    />\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      {searchQuery || filterType !== 'all' || filterStatus !== 'all'\n                        ? 'No endpoints match your search criteria'\n                        : 'No endpoints configured'\n                      }\n                    </p>\n                    <div className=\"space-y-2\">\n                      {searchQuery || filterType !== 'all' || filterStatus !== 'all' ? (\n                        <Button\n                          variant=\"secondary\"\n                          onClick={() => {\n                            setSearchQuery('')\n                            setFilterType('all')\n                            setFilterStatus('all')\n                          }}\n                        >\n                          Clear Filters\n                        </Button>\n                      ) : (\n                        <>\n                          <Button variant=\"secondary\" onClick={() => setCreateDialogOpen(true)}>\n                            <CirclePlus width=\"16\" height=\"16\" className=\"mr-2\" />\n                            Add Your First Endpoint\n                          </Button>\n                          {migrationChecked && !migrationInProgress && (\n                            <div className=\"text-xs text-muted-foreground\">\n                              <p>Have existing webhooks?\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"sm\"\n                                  onClick={async () => {\n                                    try {\n                                      const result = await migrationMutation.mutateAsync()\n                                      if (result.success) {\n                                        if ((result.migratedCount || 0) > 0) {\n                                          setShowMigrationSuccess(true)\n                                          toast.success(`Successfully imported ${result.migratedCount} webhooks!`)\n                                        } else {\n                                          toast.info('No webhooks found to import')\n                                        }\n                                      } else {\n                                        toast.error(result.error || 'Failed to import webhooks')\n                                      }\n                                    } catch (error) {\n                                      console.error('Migration failed:', error)\n                                      toast.error('Failed to import webhooks')\n                                    }\n                                  }}\n                                  disabled={migrationMutation.isPending}\n                                  className=\"p-0 h-auto ml-1 text-primary hover:text-primary/80\"\n                                >\n                                  {migrationMutation.isPending ? 'Importing...' : 'Import them now'}\n                                </Button>\n                              </p>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ) : (\n              filteredEndpoints.map((endpoint: Endpoint) => {\n                const EndpointIcon = getEndpointIcon(endpoint)\n                const configSummary = getConfigSummary(endpoint)\n                const isSelected = selectedEndpoints.has(endpoint.id)\n\n                return (\n                  <Card\n                    key={endpoint.id}\n                    className={`bg-card/95 backdrop-blur-sm shadow-sm hover:shadow-lg transition-all duration-300 border rounded-xl group ${isSelected ? 'border-primary bg-primary/5' : 'border-border'\n                      }`}\n                  >\n                    <CardContent className=\"p-0\">\n                      <div className=\"p-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n                            <Checkbox\n                              checked={isSelected}\n                              onCheckedChange={(checked) => handleSelectEndpoint(endpoint.id, checked as boolean)}\n                              className=\"flex-shrink-0\"\n                            />\n                            <CustomInboundIcon\n                              Icon={EndpointIcon}\n                              size={36}\n                              backgroundColor={getEndpointIconColor(endpoint)}\n                            />\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center space-x-2 mb-1\">\n                                <h3 className=\"text-base font-semibold text-foreground tracking-tight truncate\">{endpoint.name}</h3>\n                                {/* {getEndpointTypeBadge(endpoint)} */}\n                              </div>\n                              {/* <div className=\"flex items-center space-x-3 text-sm\">\n                                <div className=\"flex items-center space-x-2 text-gray-600\">\n                                  <span className=\"font-mono truncate\">\n                                    {configSummary}\n                                  </span>\n                                  {endpoint.type === 'webhook' && configSummary && (\n                                    <Button\n                                      variant=\"ghost\"\n                                      size=\"sm\"\n                                      className=\"opacity-0 group-hover:opacity-100 transition-all duration-200 p-1 h-auto hover:bg-gray-100 rounded hover:scale-105 active:scale-95\"\n                                      onClick={() => {\n                                        try {\n                                          const config = JSON.parse(endpoint.config)\n                                          copyUrl(config.url)\n                                        } catch {}\n                                      }}\n                                    >\n                                      {copiedUrl && endpoint.config && JSON.parse(endpoint.config).url === copiedUrl ? (\n                                        <CircleCheck width=\"14\" height=\"14\" className=\"text-emerald-500\" />\n                                      ) : (\n                                        <Clipboard2 width=\"14\" height=\"14\" className=\"text-gray-400 transition-all duration-150 hover:text-gray-600\" />\n                                      )}\n                                    </Button>\n                                  )}\n                                </div>\n                                {endpoint.description && (\n                                  <span className=\"text-gray-500 text-xs truncate\">{endpoint.description}</span>\n                                )}\n                                <span className=\"text-gray-400 text-xs\">\n                                  Added {endpoint.createdAt ? formatDistanceToNow(new Date(endpoint.createdAt), { addSuffix: true }) : 'recently'}\n                                </span>\n                              </div> */}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            {getStatusBadge(endpoint)}\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"p-1.5 hover:bg-muted rounded-lg transition-colors\"\n                              onClick={() => handleTestEndpoint(endpoint)}\n                              title=\"Test endpoint\"\n                            >\n                              <CirclePlay width=\"16\" height=\"16\" className=\"text-muted-foreground hover:text-foreground\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"p-1.5 hover:bg-muted rounded-lg transition-colors\"\n                              onClick={() => handleEditEndpoint(endpoint)}\n                              title=\"Configure endpoint\"\n                            >\n                              <Gear2 width=\"16\" height=\"16\" className=\"text-muted-foreground hover:text-foreground\" />\n                            </Button>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"p-1.5 hover:bg-muted rounded-lg transition-colors\"\n                              onClick={() => handleDeleteEndpoint(endpoint)}\n                              title=\"Delete endpoint\"\n                            >\n                              <Trash2 width=\"16\" height=\"16\" className=\"text-muted-foreground hover:text-foreground\" />\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )\n              })\n            )}\n          </div>\n        </div>\n      </div>\n\n      <CreateEndpointDialog\n        open={createDialogOpen}\n        onOpenChange={setCreateDialogOpen}\n      />\n\n      <EditEndpointDialog\n        open={editDialogOpen}\n        onOpenChange={setEditDialogOpen}\n        endpoint={selectedEndpoint}\n      />\n\n      <DeleteEndpointDialog\n        open={deleteDialogOpen}\n        onOpenChange={setDeleteDialogOpen}\n        endpoint={selectedEndpoint}\n      />\n\n      <DeleteMultipleEndpointsDialog\n        open={deleteMultipleDialogOpen}\n        onOpenChange={setDeleteMultipleDialogOpen}\n        endpoints={selectedEndpointsArray}\n        onSuccess={clearSelection}\n      />\n\n      <TestEndpointDialog\n        open={testDialogOpen}\n        onOpenChange={setTestDialogOpen}\n        endpoint={selectedEndpoint}\n      />\n    </>\n  )\n} "],"names":[],"mappings":"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"}