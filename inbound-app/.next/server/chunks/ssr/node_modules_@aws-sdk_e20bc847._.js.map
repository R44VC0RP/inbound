{"version":3,"sources":["turbopack:///[project]/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js","turbopack:///[project]/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js","turbopack:///[project]/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/index.js"],"sourcesContent":["export const fromWebToken = (init) => async (awsIdentityProperties) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n    let { roleAssumerWithWebIdentity } = init;\n    if (!roleAssumerWithWebIdentity) {\n        const { getDefaultRoleAssumerWithWebIdentity } = await import(\"@aws-sdk/nested-clients/sts\");\n        roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n            ...init.clientConfig,\n            credentialProviderLogger: init.logger,\n            parentClientConfig: {\n                ...awsIdentityProperties?.callerClientConfig,\n                ...init.parentClientConfig,\n            },\n        }, init.clientPlugins);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n","import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\", {\n            logger: init.logger,\n        });\n    }\n    const credentials = await fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n    if (webIdentityTokenFile === process.env[ENV_TOKEN_FILE]) {\n        setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN\", \"h\");\n    }\n    return credentials;\n};\n","export * from \"./fromTokenFile\";\nexport * from \"./fromWebToken\";\n"],"names":[],"mappings":"0FAAO,IAAM,EAAgB,AAAD,GAAU,MAAO,IACzC,EAAK,MAAM,EAAE,MAAM,4DACnB,GAAM,SAAE,CAAO,iBAAE,CAAe,CAAE,kBAAgB,CAAE,YAAU,YAAE,CAAU,QAAE,CAAM,iBAAE,CAAe,CAAE,CAAG,EACpG,4BAAE,CAA0B,CAAE,CAAG,EACrC,GAAI,CAAC,EAA4B,CAC7B,GAAM,sCAAE,CAAoC,CAAE,CAAG,MAAA,EAAA,CAAA,CAAA,QAAA,EAAA,CAAA,EACjD,EAA6B,EAAqC,CAC9D,GAAG,EAAK,YAAY,CACpB,yBAA0B,EAAK,MAAM,CACrC,mBAAoB,CAChB,GAAG,GAAuB,kBAAkB,CAC5C,GAAG,EAAK,kBAAkB,AAC9B,CACJ,EAAG,EAAK,aAAa,CACzB,CACA,OAAO,EAA2B,CAC9B,QAAS,EACT,gBAAiB,GAAmB,CAAC,mBAAmB,EAAE,KAAK,GAAG,GAAA,CAAI,CACtE,iBAAkB,EAClB,WAAY,EACZ,WAAY,EACZ,OAAQ,EACR,gBAAiB,CACrB,EACJ,+ECxBA,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA,QAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,IAAM,EAAiB,8BAGV,EAAgB,CAAC,EAAO,CAAC,CAAC,GAAK,UACxC,EAAK,MAAM,EAAE,MAAM,6DACnB,IAAM,EAAuB,GAAM,sBAAwB,QAAQ,GAAG,CAAC,EAAe,CAChF,EAAU,GAAM,SAAW,QAAQ,GAAG,CAAC,AAL5B,YAKyC,CACpD,EAAkB,GAAM,iBAAmB,QAAQ,GAAG,CAAC,AALnC,qBAKyD,CACnF,GAAI,CAAC,GAAwB,CAAC,EAC1B,MAAM,CAD6B,GACzB,EAAA,wBAAwB,CAAC,WAAzB,gCAAqE,CAC3E,OAAQ,EAAK,MAAM,AACvB,GAEJ,IAAM,EAAc,MAAM,CAAA,EAAA,EAAA,YAAA,AAAW,EAAE,CACnC,GAAG,CAAI,CACP,iBAFsB,AAEJ,CAAA,EAAA,EAAA,YAAA,AAAW,EAAE,EAAsB,CAAE,SAAU,OAAQ,IAAvD,OAClB,kBACA,CACJ,KAIA,OAHI,IAAyB,QAAQ,GAAG,CAAC,EAAe,EAAE,AACtD,CAAA,EAAA,EAAA,oBAAA,AAAmB,EAAE,EAAa,aAAlC,2BAA2E,KAExE,CACX,2DC3BA,EAAA,CAAA,CAAA,QACA,EAAA,CAAA,CAAA","ignoreList":[0,1,2]}