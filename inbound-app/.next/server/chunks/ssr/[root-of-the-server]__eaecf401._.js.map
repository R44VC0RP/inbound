{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/og/image-response.ts","turbopack:///[project]/node_modules/next/og.js","turbopack:///[project]/app/changelog/opengraph-image.tsx","turbopack:///[project]/app/changelog/opengraph-image--metadata.js"],"sourcesContent":["type OgModule = typeof import('next/dist/compiled/@vercel/og')\n\nfunction importModule(): Promise<\n  typeof import('next/dist/compiled/@vercel/og')\n> {\n  return import(\n    process.env.NEXT_RUNTIME === 'edge'\n      ? 'next/dist/compiled/@vercel/og/index.edge.js'\n      : 'next/dist/compiled/@vercel/og/index.node.js'\n  )\n}\n\n/**\n * The ImageResponse class allows you to generate dynamic images using JSX and CSS.\n * This is useful for generating social media images such as Open Graph images, Twitter cards, and more.\n *\n * Read more: [Next.js Docs: `ImageResponse`](https://nextjs.org/docs/app/api-reference/functions/image-response)\n */\nexport class ImageResponse extends Response {\n  public static displayName = 'ImageResponse'\n  constructor(...args: ConstructorParameters<OgModule['ImageResponse']>) {\n    const readable = new ReadableStream({\n      async start(controller) {\n        const OGImageResponse: typeof import('next/dist/compiled/@vercel/og').ImageResponse =\n          // So far we have to manually determine which build to use,\n          // as the auto resolving is not working\n          (await importModule()).ImageResponse\n        const imageResponse = new OGImageResponse(...args) as Response\n\n        if (!imageResponse.body) {\n          return controller.close()\n        }\n\n        const reader = imageResponse.body!.getReader()\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) {\n            return controller.close()\n          }\n          controller.enqueue(value)\n        }\n      },\n    })\n\n    const options = args[1] || {}\n\n    const headers = new Headers({\n      'content-type': 'image/png',\n      'cache-control':\n        process.env.NODE_ENV === 'development'\n          ? 'no-cache, no-store'\n          : 'public, immutable, no-transform, max-age=31536000',\n    })\n    if (options.headers) {\n      const newHeaders = new Headers(options.headers)\n      newHeaders.forEach((value, key) => headers.set(key, value))\n    }\n    super(readable, {\n      headers,\n      status: options.status,\n      statusText: options.statusText,\n    })\n  }\n}\n","module.exports = require('./dist/server/og/image-response')\n","import { ImageResponse } from 'next/og'\nimport { promises as fs } from 'fs'\nimport path from 'path'\n\nexport const runtime = 'nodejs'\n\nexport const alt = 'Inbound Changelog - All the latest updates, improvements, and fixes'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\nexport const contentType = 'image/png'\n\nexport default async function Image() {\n  // Load Outfit font from public directory\n  const outfitMedium = await fs.readFile(\n    path.join(process.cwd(), 'public/Outfit-Medium.ttf')\n  )\n\n  return new ImageResponse(\n    (\n      <div\n        style={{\n          height: '630px',\n          width: '1200px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          justifyContent: 'flex-end',\n          backgroundColor: '#0a0b10',\n          backgroundImage: `url(${process.env.NODE_ENV === 'production' ? 'https://inbound.new' : 'http://localhost:3000'}/inbound-hero.png)`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          position: 'relative',\n        }}\n      >\n        {/* Dark overlay for better text readability */}\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(10, 11, 16, 0.3)',\n            display: 'flex',\n          }}\n        />\n        \n        {/* Content container */}\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            zIndex: 1,\n            padding: '20px',\n            textAlign: 'left',\n          }}\n        >\n          {/* Main title */}\n          <div\n            style={{\n              fontSize: '120px',\n              fontWeight: '500',\n              color: 'white',\n              marginBottom: '24px',\n              letterSpacing: '-0.02em',\n              fontFamily: 'Outfit',\n            }}\n          >\n            the inbound changelog\n          </div>\n          \n          {/* Subtitle */}\n          <div\n            style={{\n              fontSize: '40px',\n              color: 'rgba(255, 255, 255, 0.8)',\n              marginBottom: '40px',\n              maxWidth: '600px',\n              lineHeight: '1.4',\n              fontFamily: 'Outfit',\n            }}\n          >\n            all the latest updates, improvements, and fixes to inbound\n          </div>\n          \n          {/* Inbound branding */}\n          <div\n            style={{\n              fontSize: '40px',\n              fontWeight: '600',\n              color: '#ffffff',\n              letterSpacing: '-0.01em',\n              fontFamily: 'Outfit',\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <img src=\"https://inbound.new/inbound-logo-3.png\" alt=\"Inbound\" style={{ width: '39px', height: '39px', marginRight: '10px' }} />\n            inbound\n          </div>\n        </div>\n      </div>\n    ),\n    {\n      ...size,\n      fonts: [\n        {\n          name: 'Outfit',\n          data: outfitMedium,\n          style: 'normal',\n          weight: 500,\n        },\n      ],\n    }\n  )\n} ","import { alt, contentType, runtime, size } from \"./opengraph-image.tsx\"\nimport { fillMetadataSegment } from 'next/dist/lib/metadata/get-metadata-route'\n\nconst imageModule = { alt, contentType, runtime, size }\n\nexport default async function (props) {\n    const { __metadata_id__: _, ...params } = await props.params\n    const imageUrl = fillMetadataSegment(\"/changelog\", params, \"opengraph-image\")\n\n    const { generateImageMetadata } = imageModule\n\n    function getImageMetadata(imageMetadata, idParam) {\n        const data = {\n            alt: imageMetadata.alt,\n            type: imageMetadata.contentType || 'image/png',\n            url: imageUrl + (idParam ? ('/' + idParam) : '') + \"?63d5ef0be6418ff3\",\n        }\n        const { size } = imageMetadata\n        if (size) {\n            data.width = size.width; data.height = size.height;\n        }\n        return data\n    }\n\n    if (generateImageMetadata) {\n        const imageMetadataArray = await generateImageMetadata({ params })\n        return imageMetadataArray.map((imageMetadata, index) => {\n            const idParam = (imageMetadata.id || index) + ''\n            return getImageMetadata(imageMetadata, idParam)\n        })\n    } else {\n        return [getImageMetadata(imageModule, '')]\n    }\n}\n"],"names":["ImageResponse","importModule","process","env","NEXT_RUNTIME","Response","displayName","constructor","args","readable","ReadableStream","start","controller","OGImageResponse","imageResponse","body","close","reader","getReader","done","value","read","enqueue","options","headers","Headers","NODE_ENV","newHeaders","forEach","key","set","status","statusText"],"mappings":"kPAkBaA,gBAAAA,qCAAAA,IAAN,OAAMA,UAAsBK,wBACnBC,WAAAA,CAAc,eAAA,AAC5BC,aAAY,GAAGC,CAAsD,CAAE,CACrE,IAAMC,EAAW,IAAIC,eAAe,CAClC,MAAMC,MAAMC,CAAU,EAKpB,IAAME,EAAgB,GADnB,CAAA,AACuBD,MADjBZ,AArBR,EACOG,CAAAA,CAAAA,EADD,CACXF,IAAwB,CAAA,EACpB,CADIC,AACJ,CADyB,AAoBhBF,CAAa,CApBf,AAoBkBD,CApBjBI,MACR,MAmBsC,IACOI,GAE7C,GAAI,CAACM,EAAcC,IAAI,CACrB,CADuB,GArBzB,GAsBSH,EAAWI,KAAK,GAGzB,IAAMC,EAASH,EAAcC,IAAI,CAAEG,SAAS,GAC5C,MAAO,CAAM,CACX,GAAM,MAAEC,CAAI,OAAEC,CAAK,CAAE,CAAG,MAAMH,EAAOI,IAAI,GACzC,GAAIF,EACF,IADQ,GACDP,EAAWI,KAAK,GAEzBJ,EAAWU,OAAO,CAACF,EACrB,CACF,CACF,GAEMG,EAAUf,CAAI,CAAC,EAAE,EAAI,CAAC,EAEtBgB,EAAU,IAAIC,QAAQ,CAC1B,eAAgB,YAChB,gBAGM,CAFJvB,QAAQC,GAAG,CAACuB,QAAQ,KAAK,gBACrB,SAER,GACIH,EAAQC,OAAO,EAAE,AACA,AACnBG,IADuBF,QAAQF,EAAQC,OAAO,EACnCI,OAAO,CAAC,CAACR,EAAOS,IAAQL,EAAQM,GAAG,CAACD,EAAKT,IAEtD,KAAK,CAACX,EAAU,SACde,EACAO,OAAQR,EAAQQ,MAAM,CACtBC,WAAYT,EAAQS,UACtB,AADgC,EAElC,CACF,qDC/DA,GAAO,OAAO,CAAA,EAAA,CAAA,CAAA,qJCAd,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,OAEO,IAAM,EAAU,SAEV,EAAM,sEACN,EAAO,CAClB,MAAO,KACP,OAAQ,GACV,EACa,EAAc,YAEZ,eAAe,IAE5B,IAAM,EAAe,MAAM,EAAA,QAAE,CAAC,QAAQ,CACpC,EAAA,OAAI,CAAC,IAAI,CAAC,IADe,IACP,GAAG,GAAI,SAAzB,oBAGF,OAAO,IAAI,EAAA,aAAa,CAEpB,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CACC,KAHK,CAGE,CACL,OAAQ,QACR,MAAO,SACP,QAAS,OACT,cAAe,SACf,WAAY,aACZ,eAAgB,WAChB,gBAAiB,UACjB,gBAAiB,CAAC,IAAI,EAAE,qCACxB,EADgE,aAChD,QAChB,mBAAoB,SACpB,SAAU,GAHsG,OAIlH,WAJoI,CAOpI,AAPqI,AAOrI,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,MAAO,CACL,SAAU,WACV,IAAK,EACL,KAAM,EACN,MAAO,EACP,OAAQ,EACR,gBAAiB,wBACjB,QAAS,MACX,IAIF,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CACC,MAAO,CACL,QAAS,OACT,cAAe,SACf,WAAY,aACZ,eAAgB,aAChB,OAAQ,EACR,QAAS,OACT,UAAW,MACb,YAGA,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,MAAO,CACL,SAAU,QACV,WAAY,MACZ,MAAO,QACP,aAAc,OACd,cAAe,UACf,WAAY,QACd,WACD,0BAKD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CACC,MAAO,CACL,SAAU,OACV,MAAO,2BACP,aAAc,OACd,SAAU,QACV,WAAY,MACZ,WAAY,QACd,WACD,+DAKD,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CACC,MAAO,CACL,SAAU,OACV,WAAY,MACZ,MAAO,UACP,cAAe,UACf,WAAY,SACZ,QAAS,OACT,WAAY,QACd,YAEA,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,IAAI,yCAAyC,IAAI,UAAU,MAAO,CAAE,MAAO,OAAQ,OAAQ,OAAQ,YAAa,MAAO,IAAK,mBAMzI,CACE,GAAG,CAAI,CACP,MAAO,CACL,CACE,KAAM,SACN,KAAM,EACN,MAAO,SACP,OAAQ,GACV,EACD,AACH,EAEJ,yECvHA,IAAA,EAAA,EAAA,CAAA,CAAA,QACA,EAAA,EAAA,CAAA,CAAA,QAEA,IAAM,EAAc,CAAE,IAAA,EAAA,GAAG,CAAE,YAAA,EAAA,WAAW,CAAE,OAAlB,CAAkB,EAAA,OAAO,CAAE,KAAA,EAAtB,AAAsB,IAAI,AAAC,EAEvC,eAAA,CAFyB,CAET,CAAK,EAChC,GAAM,CAAE,OAHqC,SAGpB,CAAC,CAAE,GAAG,EAAQ,CAAG,MAAM,EAAM,MAAM,CACtD,EAAW,CAAA,EAAA,EAAA,mBAAA,AAAkB,EAAE,aAAc,EAAQ,CAA1C,kBAEX,CAAE,uBAAqB,CAAE,CAAG,EAElC,SAAS,EAAiB,CAAa,CAAE,CAAO,EAC5C,IAAM,EAAO,CACT,IAAK,EAAc,GAAG,CACtB,KAAM,EAAc,WAAW,EAAI,YACnC,IAAK,EAAY,GAAW,IAAM,EAAlB,AAA6B,EAAA,CAAE,CAAI,mBACvD,EACM,MAAE,CAAI,CAAE,CAAG,EAIjB,OAHI,IACA,EADM,AACD,KAAK,CAAG,EAAK,KAAK,CAAE,EAAK,MAAM,CAAG,EAAK,MAAM,EAE/C,CACX,QAEA,AAAI,EAEO,CADoB,MAAM,EAAsB,CAAE,QAAO,EAAA,CADzC,CAEG,GAAG,CAAC,CAAC,EAAe,KAC1C,IAAM,EAAU,CAAC,EAAc,EAAE,EAAI,CAAA,CAAK,CAAI,GAC9C,OAAO,EAAiB,EAAe,EAC3C,GAEO,CAAC,EAAiB,EAAa,IAAI,AAElD","ignoreList":[0,1]}