module.exports={99937:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({resolveCredentialSource:()=>b});var d=a.i(432910);a.i(992608);var e=a.i(301180),f=a.i(95759);let b=(b,d,g)=>{let h={EcsContainer:async b=>{let{fromHttp:d}=await a.r(319172)(a.i),{fromContainerMetadata:f}=await a.r(613395)(a.i);return g?.debug("@aws-sdk/credential-provider-ini - credential_source is EcsContainer"),async()=>(0,e.chain)(d(b??{}),f(b))().then(c)},Ec2InstanceMetadata:async b=>{g?.debug("@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata");let{fromInstanceMetadata:d}=await a.r(613395)(a.i);return async()=>d(b)().then(c)},Environment:async b=>{g?.debug("@aws-sdk/credential-provider-ini - credential_source is Environment");let{fromEnv:d}=await a.r(78300)(a.i);return async()=>d(b)().then(c)}};if(b in h)return h[b];throw new f.CredentialsProviderError(`Unsupported credential source in profile ${d}. Got ${b}, expected EcsContainer or Ec2InstanceMetadata or Environment.`,{logger:g})},c=a=>(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_NAMED_PROVIDER","p")}},56092:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({isAssumeRoleProfile:()=>b,resolveAssumeRoleCredentials:()=>j});var d=a.i(432910);a.i(992608);var e=a.i(95759);a.i(791189);var f=a.i(81075),g=a.i(99937),h=a.i(466523);let b=(a,{profile:b="default",logger:d}={})=>!!a&&"object"==typeof a&&"string"==typeof a.role_arn&&["undefined","string"].indexOf(typeof a.role_session_name)>-1&&["undefined","string"].indexOf(typeof a.external_id)>-1&&["undefined","string"].indexOf(typeof a.mfa_serial)>-1&&(c(a,{profile:b,logger:d})||i(a,{profile:b,logger:d})),c=(a,{profile:b,logger:c})=>{let d="string"==typeof a.source_profile&&void 0===a.credential_source;return d&&c?.debug?.(`    ${b} isAssumeRoleWithSourceProfile source_profile=${a.source_profile}`),d},i=(a,{profile:b,logger:c})=>{let d="string"==typeof a.credential_source&&void 0===a.source_profile;return d&&c?.debug?.(`    ${b} isCredentialSourceProfile credential_source=${a.credential_source}`),d},j=async(b,c,i,j={})=>{i.logger?.debug("@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)");let l=c[b],{source_profile:m,region:n}=l;if(!i.roleAssumer){let{getDefaultRoleAssumer:b}=await a.r(455983)(a.i);i.roleAssumer=b({...i.clientConfig,credentialProviderLogger:i.logger,parentClientConfig:{...i?.parentClientConfig,region:n??i?.parentClientConfig?.region}},i.clientPlugins)}if(m&&m in j)throw new e.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile ${(0,f.getProfileName)(i)}. Profiles visited: `+Object.keys(j).join(", "),{logger:i.logger});i.logger?.debug(`@aws-sdk/credential-provider-ini - finding credential resolver using ${m?`source_profile=[${m}]`:`profile=[${b}]`}`);let o=m?(0,h.resolveProfileData)(m,c,i,{...j,[m]:!0},k(c[m]??{})):(await (0,g.resolveCredentialSource)(l.credential_source,b,i.logger)(i))();if(k(l))return o.then(a=>(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_SOURCE_PROFILE","o"));{let a={RoleArn:l.role_arn,RoleSessionName:l.role_session_name||`aws-sdk-js-${Date.now()}`,ExternalId:l.external_id,DurationSeconds:parseInt(l.duration_seconds||"3600",10)},{mfa_serial:c}=l;if(c){if(!i.mfaCodeProvider)throw new e.CredentialsProviderError(`Profile ${b} requires multi-factor authentication, but no MFA code callback was provided.`,{logger:i.logger,tryNextLink:!1});a.SerialNumber=c,a.TokenCode=await i.mfaCodeProvider(c)}let f=await o;return i.roleAssumer(f,a).then(a=>(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_SOURCE_PROFILE","o"))}},k=a=>!a.role_arn&&!!a.credential_source}},983157:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({isProcessProfile:()=>b,resolveProcessCredentials:()=>c});var d=a.i(432910);let b=a=>!!a&&"object"==typeof a&&"string"==typeof a.credential_process,c=async(b,c)=>a.r(933379)(a.i).then(({fromProcess:a})=>a({...b,profile:c})().then(a=>(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_PROCESS","v")))}},401585:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({isSsoProfile:()=>c,resolveSsoCredentials:()=>b});var d=a.i(432910);let b=async(b,c,e={})=>{let{fromSSO:f}=await a.r(563019)(a.i);return f({profile:b,logger:e.logger,parentClientConfig:e.parentClientConfig,clientConfig:e.clientConfig})().then(a=>c.sso_session?(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_SSO","r"):(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_SSO_LEGACY","t"))},c=a=>a&&("string"==typeof a.sso_start_url||"string"==typeof a.sso_account_id||"string"==typeof a.sso_session||"string"==typeof a.sso_region||"string"==typeof a.sso_role_name)}},17990:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({isStaticCredsProfile:()=>b,resolveStaticCredentials:()=>c});var d=a.i(432910);let b=a=>!!a&&"object"==typeof a&&"string"==typeof a.aws_access_key_id&&"string"==typeof a.aws_secret_access_key&&["undefined","string"].indexOf(typeof a.aws_session_token)>-1&&["undefined","string"].indexOf(typeof a.aws_account_id)>-1,c=async(a,b)=>{b?.logger?.debug("@aws-sdk/credential-provider-ini - resolveStaticCredentials");let c={accessKeyId:a.aws_access_key_id,secretAccessKey:a.aws_secret_access_key,sessionToken:a.aws_session_token,...a.aws_credential_scope&&{credentialScope:a.aws_credential_scope},...a.aws_account_id&&{accountId:a.aws_account_id}};return(0,d.setCredentialFeature)(c,"CREDENTIALS_PROFILE","n")}}},729573:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({isWebIdentityProfile:()=>b,resolveWebIdentityCredentials:()=>c});var d=a.i(432910);let b=a=>!!a&&"object"==typeof a&&"string"==typeof a.web_identity_token_file&&"string"==typeof a.role_arn&&["undefined","string"].indexOf(typeof a.role_session_name)>-1,c=async(b,c)=>a.r(266417)(a.i).then(({fromTokenFile:a})=>a({webIdentityTokenFile:b.web_identity_token_file,roleArn:b.role_arn,roleSessionName:b.role_session_name,roleAssumerWithWebIdentity:c.roleAssumerWithWebIdentity,logger:c.logger,parentClientConfig:c.parentClientConfig})().then(a=>(0,d.setCredentialFeature)(a,"CREDENTIALS_PROFILE_STS_WEB_ID_TOKEN","q")))}},466523:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({resolveProfileData:()=>b}),a.i(992608);var d=a.i(95759),e=a.i(56092),f=a.i(983157),g=a.i(401585),h=a.i(17990),i=a.i(729573);let b=async(a,b,c,j={},k=!1)=>{let l=b[a];if(Object.keys(j).length>0&&(0,h.isStaticCredsProfile)(l))return(0,h.resolveStaticCredentials)(l,c);if(k||(0,e.isAssumeRoleProfile)(l,{profile:a,logger:c.logger}))return(0,e.resolveAssumeRoleCredentials)(a,b,c,j);if((0,h.isStaticCredsProfile)(l))return(0,h.resolveStaticCredentials)(l,c);if((0,i.isWebIdentityProfile)(l))return(0,i.resolveWebIdentityCredentials)(l,c);if((0,f.isProcessProfile)(l))return(0,f.resolveProcessCredentials)(c,a);if((0,g.isSsoProfile)(l))return await (0,g.resolveSsoCredentials)(a,l,c);throw new d.CredentialsProviderError(`Could not resolve credentials using profile: [${a}] in configuration/credentials file(s).`,{logger:c.logger})}}},494167:a=>{"use strict";var{g:b,__dirname:c}=a;{a.s({fromIni:()=>b}),a.i(791189);var d=a.i(81075),e=a.i(906427),f=a.i(466523);let b=(a={})=>async({callerClientConfig:b}={})=>{let c={...a,parentClientConfig:{...b,...a.parentClientConfig}};c.logger?.debug("@aws-sdk/credential-provider-ini - fromIni");let g=await (0,e.parseKnownFiles)(c);return(0,f.resolveProfileData)((0,d.getProfileName)({profile:a.profile??b?.profile}),g,c)}}},61796:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({}),a.i(494167)},789531:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({}),a.i(494167),a.i(61796)},88873:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({fromIni:()=>d.fromIni});var d=a.i(494167);a.i(61796)},319086:a=>{"use strict";var{g:b,__dirname:c}=a;a.s({fromIni:()=>d.fromIni}),a.i(789531);var d=a.i(88873)},319172:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/[root-of-the-server]__5c1de98a._.js"].map(b=>a.l(b))).then(()=>b(62784)))},613395:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/node_modules_@smithy_credential-provider-imds_dist-es_5675c7c9._.js"].map(b=>a.l(b))).then(()=>b(124686)))},78300:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/node_modules_@aws-sdk_credential-provider-env_dist-es_index_c2739fbf.js"].map(b=>a.l(b))).then(()=>b(873873)))},455983:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/node_modules_@aws-sdk_nested-clients_package_json_dc3e0abb._.js","server/chunks/ssr/node_modules_@aws-sdk_f3d2920d._.js"].map(b=>a.l(b))).then(()=>b(294523)))},933379:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/node_modules_@aws-sdk_credential-provider-process_dist-es_cb39c440._.js"].map(b=>a.l(b))).then(()=>b(217514)))},563019:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/node_modules_@aws-sdk_2c78fedd._.js"].map(b=>a.l(b))).then(()=>b(377038)))},266417:a=>{var{g:b,__dirname:c}=a;a.v(b=>Promise.all(["server/chunks/ssr/node_modules_@aws-sdk_e20bc847._.js"].map(b=>a.l(b))).then(()=>b(136277)))}};

//# sourceMappingURL=node_modules_abd45f0f._.js.map