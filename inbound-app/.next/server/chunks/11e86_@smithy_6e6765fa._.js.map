{"version":3,"sources":["turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/ProviderError.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/TokenProviderError.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/chain.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/fromStatic.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/memoize.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/property-provider/dist-es/index.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/dist-es/getSelectorName.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/dist-es/fromEnv.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getHomeDir.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileName.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigData.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigFilepath.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/parseIni.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/slurpFile.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/getSsoSessionData.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSsoSessionData.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/mergeConfigFiles.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/parseKnownFiles.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/node_modules/@smithy/shared-ini-file-loader/dist-es/index.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/dist-es/fromSharedConfigFiles.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/dist-es/fromStatic.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/dist-es/configLoader.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/node-config-provider/dist-es/index.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/url-parser/node_modules/@smithy/querystring-parser/dist-es/index.js","turbopack:///[project]/node_modules/@aws-sdk/client-ses/node_modules/@smithy/url-parser/dist-es/index.js"],"sourcesContent":["export class ProviderError extends Error {\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.name = \"ProviderError\";\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class TokenProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","export * from \"./CredentialsProviderError\";\nexport * from \"./ProviderError\";\nexport * from \"./TokenProviderError\";\nexport * from \"./chain\";\nexport * from \"./fromStatic\";\nexport * from \"./memoize\";\n","export function getSelectorName(functionString) {\n    try {\n        const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n        constants.delete(\"CONFIG\");\n        constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n        constants.delete(\"ENV\");\n        return [...constants].join(\", \");\n    }\n    catch (e) {\n        return functionString;\n    }\n}\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromEnv = (envVarSelector, options) => async () => {\n    try {\n        const config = envVarSelector(process.env, options);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`, { logger: options?.logger });\n    }\n};\n","import { homedir } from \"os\";\nimport { sep } from \"path\";\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = homedir();\n    return homeDirCache[homeDirCacheKey];\n};\n","export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n","import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getConfigData = (data) => Object.entries(data)\n    .filter(([key]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    if (indexOfSeparator === -1) {\n        return false;\n    }\n    return Object.values(IniSectionType).includes(key.substring(0, indexOfSeparator));\n})\n    .reduce((acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n}, {\n    ...(data.default && { default: data.default }),\n});\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nconst prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    let currentSubSection;\n    for (const iniLine of iniData.split(/\\r?\\n/)) {\n        const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = undefined;\n            currentSubSection = undefined;\n            const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n            const matches = prefixKeyRegex.exec(sectionName);\n            if (matches) {\n                const [, prefix, , name] = matches;\n                if (Object.values(IniSectionType).includes(prefix)) {\n                    currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n                }\n            }\n            else {\n                currentSection = sectionName;\n            }\n            if (profileNameBlockList.includes(sectionName)) {\n                throw new Error(`Found invalid profile name \"${sectionName}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n            if (![0, -1].includes(indexOfEqualsSign)) {\n                const [name, value] = [\n                    trimmedLine.substring(0, indexOfEqualsSign).trim(),\n                    trimmedLine.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                if (value === \"\") {\n                    currentSubSection = name;\n                }\n                else {\n                    if (currentSubSection && iniLine.trimStart() === iniLine) {\n                        currentSubSection = undefined;\n                    }\n                    map[currentSection] = map[currentSection] || {};\n                    const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n                    map[currentSection][key] = value;\n                }\n            }\n        }\n    }\n    return map;\n};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nconst filePromisesHash = {};\nexport const slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","import { join } from \"path\";\nimport { getConfigData } from \"./getConfigData\";\nimport { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getHomeDir } from \"./getHomeDir\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const CONFIG_PREFIX_SEPARATOR = \".\";\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const homeDir = getHomeDir();\n    const relativeHomeDirPrefix = \"~/\";\n    let resolvedFilepath = filepath;\n    if (filepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedFilepath = join(homeDir, filepath.slice(2));\n    }\n    let resolvedConfigFilepath = configFilepath;\n    if (configFilepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedConfigFilepath = join(homeDir, configFilepath.slice(2));\n    }\n    const parsedFiles = await Promise.all([\n        slurpFile(resolvedConfigFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getConfigData)\n            .catch(swallowError),\n        slurpFile(resolvedFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","import { IniSectionType } from \"@smithy/types\";\nimport { CONFIG_PREFIX_SEPARATOR } from \"./loadSharedConfigFiles\";\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => key.startsWith(IniSectionType.SSO_SESSION + CONFIG_PREFIX_SEPARATOR))\n    .reduce((acc, [key, value]) => ({ ...acc, [key.substring(key.indexOf(CONFIG_PREFIX_SEPARATOR) + 1)]: value }), {});\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n","export const mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\n","import { loadSharedConfigFiles } from \"./loadSharedConfigFiles\";\nimport { mergeConfigFiles } from \"./mergeConfigFiles\";\nexport const parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\n","export * from \"./getHomeDir\";\nexport * from \"./getProfileName\";\nexport * from \"./getSSOTokenFilepath\";\nexport * from \"./getSSOTokenFromFile\";\nexport * from \"./loadSharedConfigFiles\";\nexport * from \"./loadSsoSessionData\";\nexport * from \"./parseKnownFiles\";\nexport * from \"./types\";\n","import { CredentialsProviderError } from \"@smithy/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@smithy/shared-ini-file-loader\";\nimport { getSelectorName } from \"./getSelectorName\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n        const configValue = configSelector(mergedProfile, cfgFile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`, { logger: init.logger });\n    }\n};\n","import { fromStatic as convertToProvider } from \"@smithy/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","import { chain, memoize } from \"@smithy/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => {\n    const { signingName, logger } = configuration;\n    const envOptions = { signingName, logger };\n    return memoize(chain(fromEnv(environmentVariableSelector, envOptions), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n};\n","export * from \"./configLoader\";\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseQueryString } from \"@smithy/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}