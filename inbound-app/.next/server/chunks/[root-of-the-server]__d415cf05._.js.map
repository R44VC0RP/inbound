{"version":3,"sources":["turbopack:///[project]/app/api/v1/lib/auth.ts","turbopack:///[project]/app/api/v1/domains/route.ts","turbopack:///[project]/node_modules/next/dist/src/build/templates/app-route.ts"],"sourcesContent":["import { NextRequest } from 'next/server'\nimport { auth } from '@/lib/auth/auth'\n\nexport interface ApiKeyValidationResult {\n  valid: boolean\n  user?: {\n    id: string\n    email: string\n    name: string | null\n  }\n  error?: string\n}\n\n/**\n * Validates an API key from the Authorization header\n * Expected format: \"Bearer <api_key>\" or just \"<api_key>\"\n */\nexport async function validateApiKey(request: NextRequest): Promise<ApiKeyValidationResult> {\n  try {\n    // Get the Authorization header\n    const authHeader = request.headers.get('Authorization')\n    \n    if (!authHeader) {\n      return {\n        valid: false,\n        error: 'Missing Authorization header'\n      }\n    }\n\n    // Extract the API key (support both \"Bearer <key>\" and just \"<key>\")\n    let apiKey: string\n    if (authHeader.startsWith('Bearer ')) {\n      apiKey = authHeader.substring(7)\n    } else {\n      apiKey = authHeader\n    }\n\n    console.log(\"API KEY: \" + apiKey)\n\n    if (!apiKey) {\n      return {\n        valid: false,\n        error: 'Invalid Authorization header format'\n      }\n    }\n\n    // Verify the API key using Better Auth\n    const { valid, error, key } = await auth.api.verifyApiKey({\n      body: {\n        key: apiKey\n      }\n    })\n\n    console.log(\"VALID: \" + valid)\n    console.log(\"ERROR: \" + error)\n    console.log(\"KEY: \" + key?.userId)\n\n    if (!valid || error || !key) {\n      return {\n        valid: false,\n        error: error?.message || 'Invalid API key'\n      }\n    }\n\n    // Check if the API key is enabled\n    if (!key.enabled) {\n      return {\n        valid: false,\n        error: 'API key is disabled'\n      }\n    }\n\n    // Check if the API key has expired\n    if (key.expiresAt && new Date(key.expiresAt) < new Date()) {\n      return {\n        valid: false,\n        error: 'API key has expired'\n      }\n    }\n\n    // Use the userId from the API key directly\n    return {\n      valid: true,\n      user: {\n        id: key.userId,\n        email: key.userId, // We don't have email from API key, use userId as fallback\n        name: null // We don't have name from API key\n      }\n    }\n  } catch (error) {\n    console.error('API key validation error:', error)\n    return {\n      valid: false,\n      error: 'Internal server error during API key validation'\n    }\n  }\n}\n\n/**\n * Middleware function to validate API key and return standardized error responses\n */\nexport function createApiKeyMiddleware() {\n  return async (request: NextRequest) => {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return {\n        error: validation.error,\n        status: 401\n      }\n    }\n\n    return {\n      user: validation.user!\n    }\n  }\n} ","import { NextRequest, NextResponse } from 'next/server'\nimport { validateApiKey } from '../lib/auth'\nimport { db } from '@/lib/db'\nimport { emailDomains, emailAddresses, webhooks } from '@/lib/db/schema'\nimport { eq, and } from 'drizzle-orm'\nimport { nanoid } from 'nanoid'\n\n/**\n * GET /api/v1/domains\n * List all domains for the authenticated user\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return NextResponse.json(\n        { error: validation.error },\n        { status: 401 }\n      )\n    }\n\n    const domains = await db\n      .select({\n        id: emailDomains.id,\n        domain: emailDomains.domain,\n        status: emailDomains.status,\n        canReceiveEmails: emailDomains.canReceiveEmails,\n        createdAt: emailDomains.createdAt,\n        updatedAt: emailDomains.updatedAt\n      })\n      .from(emailDomains)\n      .where(eq(emailDomains.userId, validation.user!.id))\n\n    return NextResponse.json({\n      success: true,\n      data: domains\n    })\n  } catch (error) {\n    console.error('Error fetching domains:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}\n\n/**\n * POST /api/v1/domains\n * Create a new email address on a domain\n * Body: { domain: string, email: string, webhookId?: string }\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const validation = await validateApiKey(request)\n    \n    if (!validation.valid) {\n      return NextResponse.json(\n        { error: validation.error },\n        { status: 401 }\n      )\n    }\n\n    const body = await request.json()\n    const { domain, email, webhookId } = body\n\n    if (!domain || !email) {\n      return NextResponse.json(\n        { error: 'Domain and email are required' },\n        { status: 400 }\n      )\n    }\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(email)) {\n      return NextResponse.json(\n        { error: 'Invalid email address format' },\n        { status: 400 }\n      )\n    }\n\n    // Verify the email belongs to the specified domain\n    const emailDomain = email.split('@')[1]\n    if (emailDomain !== domain) {\n      return NextResponse.json(\n        { error: `Email address must belong to domain ${domain}` },\n        { status: 400 }\n      )\n    }\n\n    // Find the domain record\n    const domainRecord = await db\n      .select()\n      .from(emailDomains)\n      .where(and(\n        eq(emailDomains.domain, domain),\n        eq(emailDomains.userId, validation.user!.id)\n      ))\n      .limit(1)\n\n    if (!domainRecord[0]) {\n      return NextResponse.json(\n        { error: 'Domain not found or does not belong to user' },\n        { status: 404 }\n      )\n    }\n\n    // Check if domain is verified\n    if (domainRecord[0].status !== 'verified') {\n      return NextResponse.json(\n        { error: 'Domain must be verified before adding email addresses' },\n        { status: 400 }\n      )\n    }\n\n    // If webhookId is provided, verify it exists and belongs to the user\n    if (webhookId) {\n      const webhookRecord = await db\n        .select()\n        .from(webhooks)\n        .where(and(\n          eq(webhooks.id, webhookId),\n          eq(webhooks.userId, validation.user!.id)\n        ))\n        .limit(1)\n\n      if (!webhookRecord[0]) {\n        return NextResponse.json(\n          { error: 'Webhook not found or does not belong to user' },\n          { status: 400 }\n        )\n      }\n\n      if (!webhookRecord[0].isActive) {\n        return NextResponse.json(\n          { error: 'Selected webhook is disabled' },\n          { status: 400 }\n        )\n      }\n    }\n\n    // Check if email address already exists\n    const existingEmail = await db\n      .select()\n      .from(emailAddresses)\n      .where(eq(emailAddresses.address, email))\n      .limit(1)\n\n    if (existingEmail[0]) {\n      return NextResponse.json(\n        { error: 'Email address already exists' },\n        { status: 409 }\n      )\n    }\n\n    // Create the email address\n    const emailRecord = {\n      id: nanoid(),\n      address: email,\n      domainId: domainRecord[0].id,\n      webhookId: webhookId || null,\n      userId: validation.user!.id,\n      isActive: true,\n      isReceiptRuleConfigured: false,\n      updatedAt: new Date(),\n    }\n\n    const [createdEmail] = await db\n      .insert(emailAddresses)\n      .values(emailRecord)\n      .returning()\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        id: createdEmail.id,\n        address: createdEmail.address,\n        domainId: createdEmail.domainId,\n        webhookId: createdEmail.webhookId,\n        isActive: createdEmail.isActive,\n        createdAt: createdEmail.createdAt\n      }\n    }, { status: 201 })\n  } catch (error) {\n    console.error('Error creating email address:', error)\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n} ","import {\n  AppRouteRouteModule,\n  type AppRouteRouteModuleOptions,\n} from '../../server/route-modules/app-route/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { patchFetch as _patchFetch } from '../../server/lib/patch-fetch'\n\nimport * as userland from 'VAR_USERLAND'\n\n// These are injected by the loader afterwards. This is injected as a variable\n// instead of a replacement because this could also be `undefined` instead of\n// an empty string.\ndeclare const nextConfigOutput: AppRouteRouteModuleOptions['nextConfigOutput']\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\n// INJECT:nextConfigOutput\n\nconst routeModule = new AppRouteRouteModule({\n  definition: {\n    kind: RouteKind.APP_ROUTE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    filename: 'VAR_DEFINITION_FILENAME',\n    bundlePath: 'VAR_DEFINITION_BUNDLE_PATH',\n  },\n  resolvedPagePath: 'VAR_RESOLVED_PAGE_PATH',\n  nextConfigOutput,\n  userland,\n})\n\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule\n\nfunction patchFetch() {\n  return _patchFetch({\n    workAsyncStorage,\n    workUnitAsyncStorage,\n  })\n}\n\nexport {\n  routeModule,\n  workAsyncStorage,\n  workUnitAsyncStorage,\n  serverHooks,\n  patchFetch,\n}\n"],"names":["AppRouteRouteModule","RouteKind","patchFetch","_patchFetch","userland","routeModule","definition","kind","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","workAsyncStorage","workUnitAsyncStorage","serverHooks"],"mappings":"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","ignoreList":[2]}